{"version":3,"file":"Events.js","sourceRoot":"","sources":["../../../../../../../../../../TanhX/online/browser/src/core/Events.js"],"names":[],"mappings":"AAAA,gCAAgC;AAChC,gBAAgB;AAChB;;GAEG;AAEH,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;IAE1B,UAAU,EAAE;QACX,uDAAuD;QACvD,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC;IAED,EAAE,EAAE,UAAU,KAAK,EAAE,EAAE,EAAE,OAAO;QAC/B,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC;QACrC,OAAO,IAAI,CAAC;IACb,CAAC;IAED,GAAG,EAAE,UAAU,KAAK,EAAE,EAAE,EAAE,OAAO;QAChC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC;QACtC,OAAO,IAAI,CAAC;IACb,CAAC;IAED,IAAI,EAAE,UAAU,IAAI,EAAE,IAAI,EAAE,SAAS;QACpC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;QAC1C,OAAO,IAAI,CAAC;IACb,CAAC;IAED,OAAO,EAAE,UAAU,IAAI,EAAE,SAAS;QACjC,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC/C,CAAC;IAED,IAAI,EAAE,UAAU,KAAK,EAAE,EAAE,EAAE,OAAO;QACjC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC;IACb,CAAC;IAED,cAAc,EAAE;QACf,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IAED,mFAAmF;IACnF,cAAc,EAAE,UAAU,GAAG;QAC5B,IAAI,KAAK,GAAG,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;QAC5D,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QACpC,OAAO,IAAI,CAAC;IACb,CAAC;IAED,iBAAiB,EAAE,UAAU,GAAG;QAC/B,IAAI,KAAK,GAAG,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;QAC5D,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC;IACb,CAAC;CAED,CAAC,CAAC;AAEH,IAAI,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC;AAEhC,4CAA4C;AAC5C,KAAK,CAAC,gBAAgB,GAAG,KAAK,CAAC,EAAE,CAAC;AAClC,KAAK,CAAC,mBAAmB,GAAG,KAAK,CAAC,sBAAsB,GAAG,KAAK,CAAC,GAAG,CAAC;AACrE,KAAK,CAAC,uBAAuB,GAAG,KAAK,CAAC,IAAI,CAAC;AAC3C,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC;AAC7B,KAAK,CAAC,iBAAiB,GAAG,KAAK,CAAC,OAAO,CAAC;AAExC,CAAC,CAAC,KAAK,GAAG,EAAC,MAAM,EAAE,KAAK,EAAC,CAAC","sourcesContent":["/* -*- js-indent-level: 8 -*- */\n/* global app */\n/*\n * L.Evented is a base class that Leaflet classes inherit from to handle custom events.\n */\n\nL.Evented = L.Class.extend({\n\n\tinitialize: function () {\n\t\t// pass in the L.Evented instance as the 'outerObject'.\n\t\tthis._evented = new app.Evented(this);\n\t},\n\n\ton: function (types, fn, context) {\n\t\tthis._evented.on(types, fn, context);\n\t\treturn this;\n\t},\n\n\toff: function (types, fn, context) {\n\t\tthis._evented.off(types, fn, context);\n\t\treturn this;\n\t},\n\n\tfire: function (type, data, propagate) {\n\t\tthis._evented.fire(type, data, propagate);\n\t\treturn this;\n\t},\n\n\tlistens: function (type, propagate) {\n\t\treturn this._evented.listens(type, propagate);\n\t},\n\n\tonce: function (types, fn, context) {\n\t\tthis._evented.once(types, fn, context);\n\t\treturn this;\n\t},\n\n\t_getTypedInner: function () {\n\t\treturn this._evented;\n\t},\n\n\t// adds a parent to propagate events to (when you fire with true as a 3rd argument)\n\taddEventParent: function (obj) {\n\t\tvar inner = obj._getTypedInner ? obj._getTypedInner() : obj;\n\t\tthis._evented.addEventParent(inner);\n\t\treturn this;\n\t},\n\n\tremoveEventParent: function (obj) {\n\t\tvar inner = obj._getTypedInner ? obj._getTypedInner() : obj;\n\t\tthis._evented.removeEventParent(inner);\n\t\treturn this;\n\t},\n\n});\n\nvar proto = L.Evented.prototype;\n\n// aliases; we should ditch those eventually\nproto.addEventListener = proto.on;\nproto.removeEventListener = proto.clearAllEventListeners = proto.off;\nproto.addOneTimeEventListener = proto.once;\nproto.fireEvent = proto.fire;\nproto.hasEventListeners = proto.listens;\n\nL.Mixin = {Events: proto};\n"]}