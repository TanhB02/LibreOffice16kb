{"version":3,"file":"Util.KeyboardListNavigation.js","sourceRoot":"","sources":["../../../../../../../../../../../TanhX/online/browser/src/control/jsdialog/Util.KeyboardListNavigation.ts"],"names":[],"mappings":"AAAA,gCAAgC;AAChC;;;;;;;;GAQG;AAQH,SAAS,sBAAsB,CAC9B,KAAoB,EACpB,cAA2B;IAE3B,QAAQ,KAAK,CAAC,GAAG,EAAE;QAClB,KAAK,WAAW;YACf,oBAAoB,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;YAC7C,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,MAAM;QACP,KAAK,SAAS;YACb,oBAAoB,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;YACjD,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,MAAM;QACP,KAAK,KAAK;YACT,IAAI,KAAK,CAAC,QAAQ,EAAE;gBACnB,oBAAoB,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;gBACjD,KAAK,CAAC,cAAc,EAAE,CAAC;aACvB;iBAAM;gBACN,oBAAoB,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;gBAC7C,KAAK,CAAC,cAAc,EAAE,CAAC;aACvB;YACD,MAAM;QACP;YACC,MAAM;KACP;AACF,CAAC;AACD,0DAA0D;AAC1D,SAAS,oBAAoB,CAC5B,cAA2B,EAC3B,SAA8B;IAE9B,sFAAsF;IACtF,IACC,QAAQ,CAAC,aAAa,KAAK,cAAc;QACzC,CAAC,cAAc,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC;QAC9C,SAAS,KAAK,MAAM,EACnB;QACD,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACzC,OAAO;KACP;IAED,IAAM,cAAc,GAAG,QAAQ,CAAC,+BAA+B,CAC9D,cAAc,EACd,SAAS,CACT,CAAC;IAEF,IAAI,cAAc,EAAE;QAClB,cAA8B,CAAC,KAAK,EAAE,CAAC;QACxC,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACzC,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;KAC5C;AACF,CAAC;AAED,QAAQ,CAAC,sBAAsB,GAAG,UAAU,SAAsB;IACjE,SAAS,CAAC,gBAAgB,CAAC,SAAS,EAAE,UAAC,KAAoB;QAC1D,IAAM,aAAa,GAAG,QAAQ,CAAC,aAA4B,CAAC;QAC5D,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,aAAa,CAAC,EAAE;YAC9C,sBAAsB,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;SAC7C;IACF,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["/* -*- js-indent-level: 8 -*- */\n/*\n * Copyright the Collabora Online contributors.\n *\n * SPDX-License-Identifier: MPL-2.0\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n/*\n * JSDialog.KeyboardListNavigation - handles keyboard-based focus and selection in list-based UI components\n */\n\ndeclare var JSDialog: any;\n\nfunction KeyboardListNavigation(\n\tevent: KeyboardEvent,\n\tcurrentElement: HTMLElement,\n) {\n\tswitch (event.key) {\n\t\tcase 'ArrowDown':\n\t\t\tmoveToFocusableEntry(currentElement, 'next');\n\t\t\tevent.preventDefault();\n\t\t\tbreak;\n\t\tcase 'ArrowUp':\n\t\t\tmoveToFocusableEntry(currentElement, 'previous');\n\t\t\tevent.preventDefault();\n\t\t\tbreak;\n\t\tcase 'Tab':\n\t\t\tif (event.shiftKey) {\n\t\t\t\tmoveToFocusableEntry(currentElement, 'previous');\n\t\t\t\tevent.preventDefault();\n\t\t\t} else {\n\t\t\t\tmoveToFocusableEntry(currentElement, 'next');\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n}\n// Helper function to move focus and apply selection class\nfunction moveToFocusableEntry(\n\tcurrentElement: HTMLElement,\n\tdirection: 'next' | 'previous',\n) {\n\t// If the current element is focused but not selected, add 'selected' class and return\n\tif (\n\t\tdocument.activeElement === currentElement &&\n\t\t!currentElement.classList.contains('selected') &&\n\t\tdirection === 'next'\n\t) {\n\t\tcurrentElement.classList.add('selected');\n\t\treturn;\n\t}\n\n\tconst siblingElement = JSDialog.FindNextFocusableSiblingElement(\n\t\tcurrentElement,\n\t\tdirection,\n\t);\n\n\tif (siblingElement) {\n\t\t(siblingElement as HTMLElement).focus();\n\t\tsiblingElement.classList.add('selected');\n\t\tcurrentElement.classList.remove('selected');\n\t}\n}\n\nJSDialog.KeyboardListNavigation = function (container: HTMLElement) {\n\tcontainer.addEventListener('keydown', (event: KeyboardEvent) => {\n\t\tconst activeElement = document.activeElement as HTMLElement;\n\t\tif (!JSDialog.IsTextInputField(activeElement)) {\n\t\t\tKeyboardListNavigation(event, activeElement);\n\t\t}\n\t});\n};\n"]}