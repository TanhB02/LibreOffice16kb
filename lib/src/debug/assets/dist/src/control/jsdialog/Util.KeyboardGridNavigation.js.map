{"version":3,"file":"Util.KeyboardGridNavigation.js","sourceRoot":"","sources":["../../../../../../../../../../../TanhX/online/browser/src/control/jsdialog/Util.KeyboardGridNavigation.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-strict-ignore\n/* -*- js-indent-level: 8 -*- */\n/*\n * Copyright the Collabora Online contributors.\n *\n * SPDX-License-Identifier: MPL-2.0\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n/*\n * JSDialog.KeyboardGridNavigation - handles keyboard-based focus and selection in grid-based UI components\n */\n\ndeclare var JSDialog: any;\n\nfunction handleKeyboardNavigation(\n\tevent: KeyboardEvent,\n\tcurrentElement: HTMLElement,\n\tparentContainer: HTMLElement,\n) {\n\tswitch (event.key) {\n\t\tcase 'ArrowRight':\n\t\t\tmoveFocus(parentContainer, currentElement, 'next', 'horizontal');\n\t\t\tevent.preventDefault();\n\t\t\tbreak;\n\t\tcase 'ArrowLeft':\n\t\t\tmoveFocus(parentContainer, currentElement, 'previous', 'horizontal');\n\t\t\tevent.preventDefault();\n\t\t\tbreak;\n\t\tcase 'ArrowDown':\n\t\t\tmoveFocus(parentContainer, currentElement, 'next', 'vertical');\n\t\t\tevent.preventDefault();\n\t\t\tbreak;\n\t\tcase 'ArrowUp':\n\t\t\tmoveFocus(parentContainer, currentElement, 'previous', 'vertical');\n\t\t\tevent.preventDefault();\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n}\n\nfunction moveFocus(\n\tparentContainer: HTMLElement,\n\tcurrentElement: HTMLElement,\n\tdirection: 'next' | 'previous',\n\taxis: 'horizontal' | 'vertical',\n) {\n\tconst focusableElements = Array.from(\n\t\tJSDialog.GetFocusableElements(parentContainer),\n\t) as HTMLElement[];\n\n\tconst [currentRow, currentColumn] = getRowColumn(currentElement);\n\n\tlet targetRow = currentRow;\n\tlet targetColumn = currentColumn;\n\n\tif (axis === 'horizontal') {\n\t\tif (direction === 'next') {\n\t\t\ttargetColumn++;\n\t\t\tif (\n\t\t\t\t!focusableElements.find(\n\t\t\t\t\t(el) =>\n\t\t\t\t\t\tgetRowColumn(el)[0] === currentRow &&\n\t\t\t\t\t\tgetRowColumn(el)[1] === targetColumn,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\ttargetColumn = 0;\n\t\t\t}\n\t\t} else {\n\t\t\ttargetColumn--;\n\t\t\tif (targetColumn < 0) {\n\t\t\t\ttargetColumn =\n\t\t\t\t\tfocusableElements.filter((el) => getRowColumn(el)[0] === currentRow)\n\t\t\t\t\t\t.length - 1;\n\t\t\t}\n\t\t}\n\t} else if (axis === 'vertical') {\n\t\tif (direction === 'next') {\n\t\t\ttargetRow++;\n\t\t} else {\n\t\t\ttargetRow--;\n\t\t}\n\n\t\t// If the target column does not exist in the target row, move to the last column in the target row\n\t\tconst elementsInTargetRow = focusableElements.filter(\n\t\t\t(el) => getRowColumn(el)[0] === targetRow,\n\t\t);\n\t\tif (elementsInTargetRow.length > 0) {\n\t\t\tif (targetColumn >= elementsInTargetRow.length) {\n\t\t\t\ttargetColumn = elementsInTargetRow.length - 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tconst targetElement = focusableElements.find(\n\t\t(el) =>\n\t\t\tgetRowColumn(el)[0] === targetRow && getRowColumn(el)[1] === targetColumn,\n\t);\n\n\tif (targetElement) {\n\t\ttargetElement.focus();\n\t} else {\n\t\t// Handle edge cases by moving to adjacent sibling elements if no exact match is found\n\t\tconst potentialCurrentElement =\n\t\t\taxis === 'vertical' ? parentContainer : currentElement;\n\n\t\tconst nextElement =\n\t\t\tdirection === 'next'\n\t\t\t\t? JSDialog.FindFocusableElement(\n\t\t\t\t\t\tpotentialCurrentElement.nextElementSibling,\n\t\t\t\t\t\t'next',\n\t\t\t\t\t)\n\t\t\t\t: JSDialog.FindFocusableElement(\n\t\t\t\t\t\tpotentialCurrentElement.previousElementSibling,\n\t\t\t\t\t\t'previous',\n\t\t\t\t\t);\n\t\tif (nextElement) {\n\t\t\tnextElement.focus();\n\t\t}\n\t}\n}\n\nfunction getRowColumn(element: HTMLElement): [number, number] {\n\tconst index = element.getAttribute('index');\n\tif (!index) return [-1, -1]; // we will never have this kind of index this is why we are passing negative values here\n\tconst [row, column] = index.split(':').map(Number);\n\treturn [row, column];\n}\n\nJSDialog.KeyboardGridNavigation = function (container: HTMLElement) {\n\tcontainer.addEventListener('keydown', (event: KeyboardEvent) => {\n\t\tconst activeElement = document.activeElement as HTMLElement;\n\t\tif (!JSDialog.IsTextInputField(activeElement)) {\n\t\t\thandleKeyboardNavigation(\n\t\t\t\tevent,\n\t\t\t\tactiveElement,\n\t\t\t\tactiveElement.parentElement,\n\t\t\t);\n\t\t}\n\t});\n};\n"]}