{"version":3,"file":"Widget.TreeView.js","sourceRoot":"","sources":["../../../../../../../../../../../TanhX/online/browser/src/control/jsdialog/Widget.TreeView.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-strict-ignore\n/* -*- js-indent-level: 8 -*- */\n/*\n * Copyright the Collabora Online contributors.\n *\n * SPDX-License-Identifier: MPL-2.0\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n/*\n * JSDialog.TreeView - tree view widget with or without header\n *\n * Example JSON:\n * a) without header\n * {\n *     id: 'id',\n *     type: 'treelistbox',\n *     entries: [\n *         { row: 0, text: 'first entry', collapsed: true, children: [ { row: 1, text: 'first subentry' } ] },\n *         { row: 2, text: 'second entry', selected: true, state: false, ondemand: true }\n *     ]\n *     hideIfEmpty: true // hide treelistbox if entries array is empty\n * }\n *\n * b) with headers\n * {\n *     id: 'id',\n *     type: 'treelistbox',\n *     headers: [ { text: 'first column' }, { text: 'second' }],\n *     entries: [\n *         { row: 0, columns [ { text: 'a' }, { collapsed: 'collapsedIcon.svg' }, { collapsedimage: '<BASE64 encoded PNG>' } ] },\n *         { row: 1, columns [ { link: 'http://example.com' }, { expanded: 'expandedIcon.svg' }, selected: true ]}\n *     ]\n * }\n *\n * c) with header and is a tree, not a list\n * {\n *     id: 'id',\n *     type: 'treelistbox',\n *     headers: [ { text: 'first column' }, { text: 'second' }],\n *     entries: [\n *         { row: 0, columns [ { text: 'a' }, { collapsed: 'collapsedIcon.svg' } ] },\n *         { row: 1, columns [ { text: 'a' }, { collapsed: 'collapsedIcon.svg' }, { expandedimage: '<BASE64 encoded PNG>' } ],\n * \t\t\t   children: [\n *                 { row: 2, columns [ { text: 'a2' }, { expanded: 'expandedIcon.svg' }, selected: true ]}\n *             ]\n *         },\n *     ]\n * }\n *\n * 'row' property is used in the callback to differentiate entries\n * 'state' property defines if entry has the checkbox (false/true), when is missing - no checkbox\n * 'enabled' property defines if entry checkbox is enabled\n * 'ondemand' property can be set to provide nodes lazy loading\n * 'collapsed' property means, this entry have childrens, but they are not visible, because\n *             this branch is collapsed.\n */\n\ndeclare var JSDialog: any;\n\n// TODO: remove this hack\nvar lastClickHelperRow: string | number = -1;\nvar lastClickHelperId = '';\n// TODO: remove this hack\n\nclass TreeViewControl {\n\t_isRealTree: boolean;\n\t_container: HTMLElement;\n\t_tbody: HTMLElement;\n\t_thead: HTMLElement = null;\n\t_columns: number;\n\t_hasState: boolean;\n\t_hasIcon: boolean;\n\t_isNavigator: boolean;\n\t_singleClickActivate: boolean;\n\t_filterTimer: ReturnType<typeof setTimeout>;\n\n\tconstructor(data: TreeWidgetJSON, builder: JSBuilder) {\n\t\tthis._isRealTree = this.isRealTree(data);\n\t\tthis._container = L.DomUtil.create(\n\t\t\t'div',\n\t\t\tbuilder.options.cssClass + ' ui-treeview',\n\t\t);\n\t\tthis._container.id = data.id;\n\t\tthis._columns = TreeViewControl.countColumns(data);\n\t\tthis._hasState = TreeViewControl.hasState(data);\n\t\tthis._hasIcon = TreeViewControl.hasIcon(data);\n\t\tthis._isNavigator = this.isNavigator(data);\n\t\tthis._singleClickActivate = TreeViewControl.isSingleClickActivate(data);\n\n\t\tthis._tbody = this._container;\n\t\t(this._container as any).filterEntries = this.filterEntries.bind(this);\n\n\t\tthis.setupDragAndDrop(data, builder);\n\t\tthis.setupKeyEvents(data, builder);\n\n\t\tif (this._isRealTree) {\n\t\t\tthis._container.setAttribute('role', 'treegrid');\n\t\t\tif (!data.headers || data.headers.length === 0)\n\t\t\t\tL.DomUtil.addClass(this._container, 'ui-treeview-tree');\n\t\t} else this._container.setAttribute('role', 'grid');\n\t}\n\n\tget Container() {\n\t\treturn this._container;\n\t}\n\n\tstatic countColumns(data: TreeWidgetJSON) {\n\t\tif (!data.entries || !data.entries.length)\n\t\t\treturn data.headers ? data.headers.length : 1;\n\n\t\tvar maxColumns = 0;\n\t\tfor (var e in data.entries) {\n\t\t\tconst entry = data.entries[e];\n\t\t\tconst count = entry.columns ? entry.columns.length : 0;\n\t\t\tif (count > maxColumns) maxColumns = count;\n\t\t}\n\n\t\treturn maxColumns;\n\t}\n\n\tstatic hasState(data: TreeWidgetJSON) {\n\t\tfor (var e in data.entries) {\n\t\t\tconst entry = data.entries[e];\n\t\t\tif (entry.state !== undefined) return true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tstatic hasIcon(data: TreeWidgetJSON) {\n\t\tfor (var e in data.entries) {\n\t\t\tconst entry = data.entries[e];\n\t\t\tfor (var i in entry.columns) {\n\t\t\t\tif (\n\t\t\t\t\tentry.columns[i].collapsed !== undefined ||\n\t\t\t\t\tentry.columns[i].expanded !== undefined ||\n\t\t\t\t\tentry.columns[i].collapsedimage !== undefined ||\n\t\t\t\t\tentry.columns[i].expandedimage !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tfindEntryWithRow(\n\t\tentries: Array<TreeEntryJSON>,\n\t\trow: number | string,\n\t): TreeEntryJSON {\n\t\tfor (const i in entries) {\n\t\t\tif (entries[i].row == row) return entries[i];\n\t\t\telse if (entries[i].children) {\n\t\t\t\tvar found = this.findEntryWithRow(entries[i].children, row);\n\t\t\t\tif (found) return found;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tchangeCheckboxStateOnClick(\n\t\tcheckbox: HTMLInputElement,\n\t\ttreeViewData: TreeWidgetJSON,\n\t\tbuilder: JSBuilder,\n\t\tentry: TreeEntryJSON,\n\t) {\n\t\tlet foundEntry: TreeEntryJSON;\n\t\tif (checkbox.checked) {\n\t\t\tfoundEntry = this.findEntryWithRow(treeViewData.entries, entry.row);\n\t\t\tif (foundEntry) checkbox.checked = foundEntry.state = true;\n\t\t\tbuilder.callback(\n\t\t\t\t'treeview',\n\t\t\t\t'change',\n\t\t\t\ttreeViewData,\n\t\t\t\t{ row: entry.row, value: true },\n\t\t\t\tbuilder,\n\t\t\t);\n\t\t} else {\n\t\t\tfoundEntry = this.findEntryWithRow(treeViewData.entries, entry.row);\n\t\t\tif (foundEntry) checkbox.checked = foundEntry.state = false;\n\t\t\tbuilder.callback(\n\t\t\t\t'treeview',\n\t\t\t\t'change',\n\t\t\t\ttreeViewData,\n\t\t\t\t{ row: entry.row, value: false },\n\t\t\t\tbuilder,\n\t\t\t);\n\t\t}\n\t}\n\n\tcreateCheckbox(\n\t\tparent: HTMLElement,\n\t\ttreeViewData: TreeWidgetJSON,\n\t\tbuilder: any,\n\t\tentry: TreeEntryJSON,\n\t) {\n\t\tconst checkbox = L.DomUtil.create(\n\t\t\t'input',\n\t\t\tbuilder.options.cssClass + ' ui-treeview-checkbox',\n\t\t\tparent,\n\t\t);\n\t\tcheckbox.type = 'checkbox';\n\t\tcheckbox.tabIndex = -1;\n\n\t\tif (entry.state === true) checkbox.checked = true;\n\t\telse checkbox.checked = false;\n\n\t\treturn checkbox;\n\t}\n\n\tcreateRadioButton(\n\t\tparent: HTMLElement,\n\t\ttreeViewData: TreeWidgetJSON,\n\t\tbuilder: JSBuilder,\n\t\tentry: TreeEntryJSON,\n\t) {\n\t\tconst radioButton = L.DomUtil.create(\n\t\t\t'input',\n\t\t\tbuilder.options.cssClass + ' ui-treeview-checkbox',\n\t\t\tparent,\n\t\t);\n\t\tradioButton.type = 'radio';\n\t\tradioButton.tabIndex = -1;\n\n\t\tif (entry.state === true) radioButton.checked = true;\n\t\telse radioButton.checked = false;\n\n\t\treturn radioButton;\n\t}\n\n\tcreateSelectionElement(\n\t\tparent: HTMLElement,\n\t\ttreeViewData: TreeWidgetJSON,\n\t\tentry: TreeEntryJSON,\n\t\tbuilder: JSBuilder,\n\t) {\n\t\tlet selectionElement: HTMLInputElement;\n\t\tconst checkboxtype = treeViewData.checkboxtype;\n\t\tif (checkboxtype == 'radio') {\n\t\t\tselectionElement = this.createRadioButton(\n\t\t\t\tparent,\n\t\t\t\ttreeViewData,\n\t\t\t\tbuilder,\n\t\t\t\tentry,\n\t\t\t);\n\t\t} else {\n\t\t\tselectionElement = this.createCheckbox(\n\t\t\t\tparent,\n\t\t\t\ttreeViewData,\n\t\t\t\tbuilder,\n\t\t\t\tentry,\n\t\t\t);\n\t\t}\n\n\t\tif (entry.enabled === false) selectionElement.disabled = true;\n\n\t\tif (treeViewData.enabled !== false) {\n\t\t\tselectionElement.addEventListener('change', () => {\n\t\t\t\tthis.changeCheckboxStateOnClick(\n\t\t\t\t\tselectionElement,\n\t\t\t\t\ttreeViewData,\n\t\t\t\t\tbuilder,\n\t\t\t\t\tentry,\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\treturn selectionElement;\n\t}\n\n\tisSeparator(element: TreeColumnJSON) {\n\t\tif (!element.text) return false;\n\t\treturn element.text.toLowerCase() === 'separator';\n\t}\n\n\tstatic isSingleClickActivate(treeViewData: TreeWidgetJSON) {\n\t\treturn treeViewData.singleclickactivate === true;\n\t}\n\n\tisNavigator(data: TreeWidgetJSON) {\n\t\treturn (\n\t\t\tdata.id && typeof data.id === 'string' && data.id.startsWith('Navigator')\n\t\t);\n\t}\n\n\tgetCellIconId(cellData: TreeColumnJSON) {\n\t\tlet iconId = (\n\t\t\tcellData.collapsed ? cellData.collapsed : cellData.expanded\n\t\t) as string;\n\t\tconst newLength = iconId.lastIndexOf('.');\n\t\tif (newLength > 0)\n\t\t\ticonId = (iconId.substr(0, newLength) as any).replaceAll('/', '');\n\t\telse iconId = (iconId as any).replaceAll('/', '');\n\t\treturn iconId;\n\t}\n\n\tcreateImageColumn(\n\t\tparentContainer: HTMLElement,\n\t\tbuilder: JSBuilder,\n\t\timageUrl: string,\n\t) {\n\t\tconst colorPreviewButton = L.DomUtil.create(\n\t\t\t'img',\n\t\t\tbuilder.options.cssClass + ' ui-treeview-checkbox',\n\t\t\tparentContainer,\n\t\t);\n\t\tcolorPreviewButton.src = imageUrl;\n\t\tcolorPreviewButton.style.setProperty(\n\t\t\t'outline',\n\t\t\t'1px solid var(--color-btn-border)',\n\t\t);\n\t\tcolorPreviewButton.style.setProperty('vertical-align', 'middle');\n\t\tcolorPreviewButton.tabIndex = -1;\n\t\tcolorPreviewButton.alt = ''; //In this case, it is advisable to use an empty alt tag, as the information of the function is available in text form\n\n\t\treturn colorPreviewButton;\n\t}\n\n\tisExpanded(entry: TreeEntryJSON) {\n\t\tfor (const i in entry.columns)\n\t\t\tif (entry.columns[i].expanded === true) return true;\n\t\treturn false;\n\t}\n\n\tfillHeader(header: TreeHeaderJSON, builder: JSBuilder) {\n\t\tif (!header) return;\n\n\t\tconst th = L.DomUtil.create(\n\t\t\t'div',\n\t\t\tbuilder.options.cssClass + ' ui-treeview-header',\n\t\t\tthis._thead,\n\t\t);\n\t\tconst span = L.DomUtil.create(\n\t\t\t'span',\n\t\t\tbuilder.options.cssClass + ' ui-treeview-header-text',\n\t\t\tth,\n\t\t);\n\n\t\tspan.innerText = header.text;\n\n\t\tif (header.sortable !== false) {\n\t\t\tL.DomUtil.create(\n\t\t\t\t'span',\n\t\t\t\tbuilder.options.cssClass + ' ui-treeview-header-sort-icon',\n\t\t\t\tspan,\n\t\t\t);\n\t\t}\n\t}\n\n\tfillRow(\n\t\tdata: TreeWidgetJSON,\n\t\tentry: TreeEntryJSON,\n\t\tbuilder: JSBuilder,\n\t\tlevel: number,\n\t\tparent: HTMLElement,\n\t) {\n\t\tconst tr = L.DomUtil.create(\n\t\t\t'div',\n\t\t\tbuilder.options.cssClass + ' ui-treeview-entry',\n\t\t\tparent,\n\t\t);\n\t\tlet dummyColumns = 0;\n\t\tif (this._hasState) dummyColumns++;\n\t\ttr.style.gridColumn = '1 / ' + (this._columns + dummyColumns + 1);\n\t\ttr.setAttribute('tabindex', 0);\n\n\t\tlet selectionElement;\n\t\tif (this._hasState) {\n\t\t\tconst td = L.DomUtil.create('div', '', tr);\n\t\t\tselectionElement = this.createSelectionElement(td, data, entry, builder);\n\t\t\tif (this._isRealTree) td.setAttribute('aria-level', level);\n\t\t}\n\n\t\tthis.fillCells(entry, builder, data, tr, level, selectionElement);\n\n\t\tthis.setupRowProperties(tr, entry, level, selectionElement);\n\t\tthis.setupRowDragAndDrop(tr, data, entry, builder);\n\t}\n\n\thighlightAllTreeViews(highlight: boolean) {\n\t\tif (highlight) {\n\t\t\tdocument.querySelectorAll('.ui-treeview').forEach((item) => {\n\t\t\t\tL.DomUtil.addClass(item, 'droptarget');\n\t\t\t});\n\t\t} else {\n\t\t\tdocument.querySelectorAll('.ui-treeview').forEach((item) => {\n\t\t\t\tL.DomUtil.removeClass(item, 'droptarget');\n\t\t\t});\n\t\t}\n\t}\n\n\tsetupDragAndDrop(treeViewData: TreeWidgetJSON, builder: JSBuilder) {\n\t\tif (treeViewData.enabled !== false) {\n\t\t\tthis._container.ondrop = (ev) => {\n\t\t\t\tev.preventDefault();\n\t\t\t\tvar row = ev.dataTransfer.getData('text');\n\t\t\t\tbuilder.callback('treeview', 'dragend', treeViewData, row, builder);\n\t\t\t\tthis.highlightAllTreeViews(false);\n\t\t\t};\n\t\t\tthis._container.ondragover = (event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t};\n\t\t}\n\t}\n\n\tsetupRowDragAndDrop(\n\t\ttr: HTMLElement,\n\t\ttreeViewData: TreeWidgetJSON,\n\t\tentry: TreeEntryJSON,\n\t\tbuilder: JSBuilder,\n\t) {\n\t\tif (treeViewData.enabled !== false && entry.state == null) {\n\t\t\ttr.draggable = treeViewData.draggable === false ? false : true;\n\n\t\t\ttr.ondragstart = (ev) => {\n\t\t\t\tev.dataTransfer.setData('text', '' + entry.row);\n\t\t\t\tbuilder.callback(\n\t\t\t\t\t'treeview',\n\t\t\t\t\t'dragstart',\n\t\t\t\t\ttreeViewData,\n\t\t\t\t\tentry.row,\n\t\t\t\t\tbuilder,\n\t\t\t\t);\n\n\t\t\t\tthis.highlightAllTreeViews(true);\n\t\t\t};\n\n\t\t\ttr.ondragend = () => {\n\t\t\t\tthis.highlightAllTreeViews(false);\n\t\t\t};\n\t\t\ttr.ondragover = (event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t};\n\t\t}\n\t}\n\n\tsetupRowProperties(\n\t\ttr: HTMLElement,\n\t\tentry: TreeEntryJSON,\n\t\tlevel: number,\n\t\tselectionElement: HTMLInputElement,\n\t) {\n\t\tif (entry.children) tr.setAttribute('aria-expanded', 'true');\n\n\t\tif (level !== undefined && this._isRealTree)\n\t\t\ttr.setAttribute('aria-level', '' + level);\n\n\t\tif (entry.selected === true) this.selectEntry(tr, selectionElement);\n\n\t\tconst disabled = entry.enabled === false;\n\t\tif (disabled) L.DomUtil.addClass(tr, 'disabled');\n\n\t\tif (entry.ondemand || entry.collapsed) {\n\t\t\tL.DomUtil.addClass(tr, 'collapsed');\n\t\t\ttr.setAttribute('aria-expanded', 'false');\n\t\t}\n\t}\n\n\tcreateExpandableIconCell(\n\t\tparent: HTMLElement,\n\t\tentry: TreeEntryJSON,\n\t\tindex: any,\n\t\tbuilder: JSBuilder,\n\t) {\n\t\tconst icon = L.DomUtil.create('img', 'ui-treeview-icon', parent);\n\n\t\tif (this._isNavigator) icon.draggable = false;\n\n\t\tconst iconId = this.getCellIconId(entry.columns[index]);\n\t\tL.DomUtil.addClass(icon, iconId + 'img');\n\t\tconst iconName = app.LOUtil.getIconNameOfCommand(iconId, true);\n\t\tapp.LOUtil.setImage(icon, iconName, builder.map);\n\t\ticon.tabIndex = -1;\n\t\ticon.alt = ''; //In this case, it is advisable to use an empty alt tag for the icons, as the information of the function is available in text form\n\t}\n\n\tcreateTextCell(\n\t\tparent: HTMLElement,\n\t\tentry: TreeEntryJSON,\n\t\tindex: any,\n\t\tbuilder: JSBuilder,\n\t) {\n\t\tconst cell = L.DomUtil.create(\n\t\t\t'span',\n\t\t\tbuilder.options.cssClass +\n\t\t\t\t` ui-treeview-cell-text ui-treeview-cell-text-content ui-treeview-${entry.row}-${index}`,\n\t\t\tparent,\n\t\t);\n\t\tcell.innerText =\n\t\t\tbuilder._cleanText(entry.columns[index].text) ||\n\t\t\tbuilder._cleanText(entry.text);\n\t}\n\n\tcreateLinkCell(\n\t\tparent: HTMLElement,\n\t\tentry: TreeEntryJSON,\n\t\tindex: any,\n\t\tbuilder: JSBuilder,\n\t) {\n\t\tconst cell = L.DomUtil.create(\n\t\t\t'span',\n\t\t\tbuilder.options.cssClass + ' ui-treeview-cell-text',\n\t\t\tparent,\n\t\t);\n\t\tconst link = L.DomUtil.create('a', '', cell);\n\t\tlink.href = entry.columns[index].link || entry.columns[index].text;\n\t\tlink.innerText = entry.columns[index].text || entry.text;\n\t\tlink.target = '_blank';\n\t\tlink.rel = 'noopener';\n\t}\n\n\tfillCells(\n\t\tentry: TreeEntryJSON,\n\t\tbuilder: JSBuilder,\n\t\ttreeViewData: TreeWidgetJSON,\n\t\ttr: HTMLElement,\n\t\tlevel: number,\n\t\tselectionElement: HTMLInputElement,\n\t) {\n\t\tlet td, expander, span, text, img, icon, iconId, iconName, link, innerText;\n\n\t\tconst rowElements = [];\n\n\t\t// row is a separator\n\t\tif (this.isSeparator(entry))\n\t\t\tL.DomUtil.addClass(tr, 'context-menu-separator');\n\n\t\t// column for expander\n\t\tif (this._isRealTree) {\n\t\t\ttd = L.DomUtil.create('div', 'ui-treeview-expander-column', tr);\n\t\t\trowElements.push(td);\n\n\t\t\tif (entry.children && entry.children.length)\n\t\t\t\texpander = L.DomUtil.create(\n\t\t\t\t\t'div',\n\t\t\t\t\tbuilder.options.cssClass + ' ui-treeview-expander',\n\t\t\t\t\ttd,\n\t\t\t\t);\n\t\t}\n\n\t\t// regular columns\n\t\tfor (const index in entry.columns) {\n\t\t\ttd = L.DomUtil.create('div', '', tr);\n\t\t\trowElements.push(td);\n\n\t\t\tspan = L.DomUtil.create(\n\t\t\t\t'span',\n\t\t\t\tbuilder.options.cssClass + ' ui-treeview-cell',\n\t\t\t\ttd,\n\t\t\t);\n\t\t\ttext = L.DomUtil.create(\n\t\t\t\t'span',\n\t\t\t\tbuilder.options.cssClass + ' ui-treeview-cell-text',\n\t\t\t\tspan,\n\t\t\t);\n\n\t\t\tif (entry.text == '<dummy>') continue;\n\n\t\t\timg = entry.columns[index].collapsedimage\n\t\t\t\t? entry.columns[index].collapsedimage\n\t\t\t\t: entry.columns[index].expandedimage;\n\t\t\tif (img) {\n\t\t\t\tL.DomUtil.addClass(td, 'ui-treeview-icon-column');\n\t\t\t\tthis.createImageColumn(text, builder, img);\n\t\t\t} else if (\n\t\t\t\tentry.columns[index].collapsed ||\n\t\t\t\tentry.columns[index].expanded\n\t\t\t) {\n\t\t\t\tL.DomUtil.addClass(td, 'ui-treeview-icon-column');\n\t\t\t\tL.DomUtil.addClass(span, 'ui-treeview-expandable-with-icon');\n\t\t\t\tthis.createExpandableIconCell(text, entry, index, builder);\n\t\t\t} else if (\n\t\t\t\tentry.columns[index].link &&\n\t\t\t\t!this.isSeparator(entry.columns[index])\n\t\t\t) {\n\t\t\t\tthis.createLinkCell(text, entry, index, builder);\n\t\t\t} else if (\n\t\t\t\tentry.columns[index].text &&\n\t\t\t\t!this.isSeparator(entry.columns[index])\n\t\t\t) {\n\t\t\t\tthis.createTextCell(text, entry, index, builder);\n\t\t\t}\n\n\t\t\t// row sub-elements\n\t\t\tfor (const i in rowElements) {\n\t\t\t\tconst element = rowElements[i];\n\n\t\t\t\t// setup properties\n\t\t\t\telement.setAttribute('role', 'gridcell');\n\t\t\t}\n\t\t}\n\n\t\t// setup callbacks\n\t\tvar clickFunction = this.createClickFunction(\n\t\t\ttr,\n\t\t\tselectionElement,\n\t\t\ttrue,\n\t\t\tthis._singleClickActivate,\n\t\t\tbuilder,\n\t\t\ttreeViewData,\n\t\t\tentry,\n\t\t);\n\t\tvar doubleClickFunction = this.createClickFunction(\n\t\t\ttr,\n\t\t\tselectionElement,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tbuilder,\n\t\t\ttreeViewData,\n\t\t\tentry,\n\t\t);\n\n\t\tthis.setupEntryMouseEvents(\n\t\t\ttr,\n\t\t\tentry,\n\t\t\ttreeViewData,\n\t\t\tbuilder,\n\t\t\tselectionElement,\n\t\t\texpander,\n\t\t\tclickFunction,\n\t\t\tdoubleClickFunction,\n\t\t);\n\n\t\tthis.setupEntryKeyEvent(\n\t\t\ttr,\n\t\t\tentry,\n\t\t\tselectionElement,\n\t\t\texpander,\n\t\t\tclickFunction,\n\t\t);\n\n\t\tthis.setupEntryContextMenuEvent(tr, entry, treeViewData, builder);\n\t}\n\n\tsetupEntryContextMenuEvent(\n\t\ttr: HTMLElement,\n\t\tentry: TreeEntryJSON,\n\t\ttreeViewData: TreeWidgetJSON,\n\t\tbuilder: JSBuilder,\n\t) {\n\t\ttr.addEventListener('contextmenu', (e: Event) => {\n\t\t\tbuilder.callback(\n\t\t\t\t'treeview',\n\t\t\t\t'contextmenu',\n\t\t\t\ttreeViewData,\n\t\t\t\tentry.row,\n\t\t\t\tbuilder,\n\t\t\t);\n\t\t\te.preventDefault();\n\t\t});\n\t}\n\n\tsetupEntryMouseEvents(\n\t\ttr: HTMLElement,\n\t\tentry: TreeEntryJSON,\n\t\ttreeViewData: TreeWidgetJSON,\n\t\tbuilder: JSBuilder,\n\t\tselectionElement: HTMLInputElement,\n\t\texpander: HTMLElement,\n\t\tclickFunction: any,\n\t\tdoubleClickFunction: any,\n\t) {\n\t\ttr.addEventListener('click', clickFunction as any);\n\n\t\tif (!this._singleClickActivate) {\n\t\t\tif (window.ThisIsTheiOSApp) {\n\t\t\t\t// TODO: remove this hack\n\t\t\t\ttr.addEventListener('click', (event) => {\n\t\t\t\t\tif (L.DomUtil.hasClass(tr, 'disabled')) return;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tentry.row == lastClickHelperRow &&\n\t\t\t\t\t\ttreeViewData.id == lastClickHelperId\n\t\t\t\t\t)\n\t\t\t\t\t\tdoubleClickFunction(event);\n\t\t\t\t\telse {\n\t\t\t\t\t\tlastClickHelperRow = entry.row;\n\t\t\t\t\t\tlastClickHelperId = treeViewData.id;\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tlastClickHelperRow = -1;\n\t\t\t\t\t\t}, 300);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t// TODO: remove this hack\n\t\t\t} else {\n\t\t\t\t$(tr).dblclick(doubleClickFunction as any);\n\t\t\t}\n\t\t}\n\n\t\tconst toggleFunction = (e: MouseEvent) => {\n\t\t\tthis.toggleEntry(tr, treeViewData, entry, builder);\n\t\t\te.preventDefault();\n\t\t};\n\t\tconst expandFunction = (e: MouseEvent) => {\n\t\t\tthis.expandEntry(tr, treeViewData, entry, builder);\n\t\t\te.preventDefault();\n\t\t};\n\n\t\tif (expander && entry.children && entry.children.length) {\n\t\t\tif (entry.ondemand) {\n\t\t\t\tL.DomEvent.on(expander, 'click', expandFunction);\n\t\t\t} else {\n\t\t\t\t$(expander).click((e) => {\n\t\t\t\t\tif (entry.state && e.target === selectionElement) e.preventDefault(); // do not toggle on checkbox\n\t\t\t\t\ttoggleFunction(e.originalEvent);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tsetupEntryKeyEvent(\n\t\ttr: HTMLElement,\n\t\tentry: TreeEntryJSON,\n\t\tselectionElement: HTMLInputElement,\n\t\texpander: HTMLElement,\n\t\tclickFunction: any,\n\t) {\n\t\tif (entry.enabled === false) return;\n\n\t\ttr.addEventListener('keydown', (event) => {\n\t\t\tif (event.key === ' ' && expander) {\n\t\t\t\texpander.click();\n\t\t\t\ttr.focus();\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t} else if (event.key === 'Enter' || event.key === ' ') {\n\t\t\t\tclickFunction(event);\n\t\t\t\tif (selectionElement) selectionElement.click();\n\t\t\t\tif (expander) {\n\t\t\t\t\texpander.click();\n\t\t\t\t}\n\t\t\t\ttr.focus();\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t} else if (event.key === 'Tab') {\n\t\t\t\tif (!L.DomUtil.hasClass(tr, 'selected')) this.unselectEntry(tr); // remove tabIndex\n\t\t\t}\n\t\t});\n\t}\n\n\ttoggleEntry(\n\t\tspan: HTMLElement,\n\t\ttreeViewData: TreeWidgetJSON,\n\t\tentry: TreeEntryJSON,\n\t\tbuilder: JSBuilder,\n\t) {\n\t\tif (entry.enabled === false) return;\n\n\t\tif (L.DomUtil.hasClass(span, 'collapsed'))\n\t\t\tbuilder.callback('treeview', 'expand', treeViewData, entry.row, builder);\n\t\telse\n\t\t\tbuilder.callback(\n\t\t\t\t'treeview',\n\t\t\t\t'collapse',\n\t\t\t\ttreeViewData,\n\t\t\t\tentry.row,\n\t\t\t\tbuilder,\n\t\t\t);\n\t\t$(span).toggleClass('collapsed');\n\t}\n\n\texpandEntry(\n\t\tspan: HTMLElement,\n\t\ttreeViewData: TreeWidgetJSON,\n\t\tentry: TreeEntryJSON,\n\t\tbuilder: JSBuilder,\n\t) {\n\t\tif (entry.enabled === false) return;\n\n\t\tif (entry.ondemand && L.DomUtil.hasClass(span, 'collapsed'))\n\t\t\tbuilder.callback('treeview', 'expand', treeViewData, entry.row, builder);\n\t\t$(span).toggleClass('collapsed');\n\t}\n\n\tselectEntry(span: HTMLElement, checkbox: HTMLInputElement) {\n\t\tthis.makeTreeViewFocusable(false);\n\n\t\tL.DomUtil.addClass(span, 'selected');\n\t\tspan.setAttribute('aria-selected', 'true');\n\t\tspan.tabIndex = 0;\n\t\tspan.focus();\n\t\tif (checkbox) checkbox.removeAttribute('tabindex');\n\t}\n\n\tunselectEntry(item: HTMLElement) {\n\t\tL.DomUtil.removeClass(item, 'selected');\n\t\titem.removeAttribute('aria-selected');\n\t\titem.removeAttribute('tabindex');\n\t\tvar itemCheckbox = item.querySelector('input');\n\t\tif (itemCheckbox) itemCheckbox.tabIndex = -1;\n\t}\n\n\tcreateClickFunction(\n\t\tparentContainer: HTMLElement,\n\t\tcheckbox: HTMLInputElement,\n\t\tselect: boolean,\n\t\tactivate: boolean,\n\t\tbuilder: JSBuilder,\n\t\ttreeViewData: TreeWidgetJSON,\n\t\tentry: TreeEntryJSON,\n\t) {\n\t\treturn (e: MouseEvent | KeyboardEvent) => {\n\t\t\tif (e && e.target === checkbox) return; // allow default handler to trigger change event\n\n\t\t\tif (e && L.DomUtil.hasClass(parentContainer, 'disabled')) {\n\t\t\t\te.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._container\n\t\t\t\t.querySelectorAll('.ui-treeview-entry.selected')\n\t\t\t\t.forEach((item: HTMLElement) => {\n\t\t\t\t\tthis.unselectEntry(item);\n\t\t\t\t});\n\n\t\t\tthis.selectEntry(parentContainer, checkbox);\n\t\t\tif (checkbox && (!e || e.target === checkbox))\n\t\t\t\tthis.changeCheckboxStateOnClick(checkbox, treeViewData, builder, entry);\n\n\t\t\tconst cell: Element = this.getTextCellForElement(e.target as Element);\n\n\t\t\tlet column: number | null | undefined;\n\t\t\tlet editable: boolean = false;\n\t\t\tif (cell) {\n\t\t\t\tcolumn = this.getColumnForCell(entry, cell);\n\t\t\t\teditable = this.canEdit(entry, column);\n\t\t\t}\n\n\t\t\tif (select)\n\t\t\t\tbuilder.callback(\n\t\t\t\t\t'treeview',\n\t\t\t\t\t'select',\n\t\t\t\t\ttreeViewData,\n\t\t\t\t\tentry.row,\n\t\t\t\t\tbuilder,\n\t\t\t\t);\n\n\t\t\tif (!editable && activate)\n\t\t\t\tbuilder.callback(\n\t\t\t\t\t'treeview',\n\t\t\t\t\t'activate',\n\t\t\t\t\ttreeViewData,\n\t\t\t\t\tentry.row,\n\t\t\t\t\tbuilder,\n\t\t\t\t);\n\n\t\t\tif (editable && activate)\n\t\t\t\tthis.startEditing(\n\t\t\t\t\tbuilder,\n\t\t\t\t\tcell,\n\t\t\t\t\tcolumn,\n\t\t\t\t\tentry,\n\t\t\t\t\tparentContainer,\n\t\t\t\t\ttreeViewData,\n\t\t\t\t);\n\t\t};\n\t}\n\n\tgetTextCellForElement(element: Element): Element {\n\t\tconst textCells = Array.from(\n\t\t\telement.getElementsByClassName('ui-treeview-cell-text-content'),\n\t\t);\n\n\t\tif (element.classList.contains('ui-treeview-cell-text-content')) {\n\t\t\ttextCells.push(element);\n\t\t}\n\n\t\tif (textCells.length !== 1) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst cell = textCells[0];\n\n\t\treturn cell;\n\t}\n\n\tgetColumnForCell(entry: TreeEntryJSON, cell: Element): number | null {\n\t\tlet column: number | undefined;\n\t\tfor (const className of Array.from(cell.classList)) {\n\t\t\tconst prefix = `ui-treeview-${entry.row}-`;\n\t\t\tif (className.startsWith(prefix)) {\n\t\t\t\tcolumn = parseInt(className.slice(prefix.length));\n\t\t\t}\n\t\t}\n\t\tif (column === undefined || Number.isNaN(column)) {\n\t\t\treturn null;\n\t\t}\n\t\tif (column >= entry.columns.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn column;\n\t}\n\n\tcanEdit(entry: TreeEntryJSON, column: number | null): boolean {\n\t\tif (column === null || entry.columns[column].text === undefined) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!entry.columns[column].editable;\n\t}\n\n\tstartEditing(\n\t\tbuilder: JSBuilder,\n\t\tcell: Element,\n\t\tcolumn: number,\n\t\tentry: TreeEntryJSON,\n\t\tparentContainer: HTMLElement,\n\t\ttreeViewData: TreeWidgetJSON,\n\t): void {\n\t\tfor (const child of Array.from(cell.childNodes)) {\n\t\t\tchild.remove();\n\t\t}\n\n\t\tconst rowShouldBeDraggable = parentContainer.draggable; // TODO: does this work with tree views or only tables?\n\n\t\tconst input = document.createElement('input');\n\n\t\tinput.style.width = '100%';\n\t\tinput.style.boxSizing = 'border-box';\n\n\t\tinput.value = entry.columns[column].text;\n\n\t\tinput.enterKeyHint = 'done';\n\n\t\tlet cancelledUpdate = false;\n\n\t\tinput.addEventListener(\n\t\t\t'keydown',\n\t\t\t(e) => {\n\t\t\t\tif (e.code === 'Enter') {\n\t\t\t\t\tinput.blur();\n\t\t\t\t} else if (e.code === 'Escape') {\n\t\t\t\t\tcancelledUpdate = true;\n\t\t\t\t\tinput.blur();\n\t\t\t\t}\n\t\t\t\te.stopImmediatePropagation(); // We need events to type and with some keys that doesn't happen (e.g. space which selects a different cell)\n\t\t\t},\n\t\t\t{ capture: true },\n\t\t);\n\t\tconst conflictingEventTypes = ['click', 'dblclick'];\n\t\tfor (const eventType of conflictingEventTypes) {\n\t\t\tinput.addEventListener(eventType, (e) => {\n\t\t\t\te.stopPropagation();\n\t\t\t});\n\t\t}\n\t\tinput.addEventListener('blur', () => {\n\t\t\tthis.endEditing(\n\t\t\t\tbuilder,\n\t\t\t\tcancelledUpdate,\n\t\t\t\tcell,\n\t\t\t\tcolumn,\n\t\t\t\tentry,\n\t\t\t\tinput,\n\t\t\t\tparentContainer,\n\t\t\t\trowShouldBeDraggable,\n\t\t\t\ttreeViewData,\n\t\t\t);\n\t\t});\n\n\t\tparentContainer.draggable = false;\n\t\t(\n\t\t\tparentContainer.parentElement as HTMLElement & { onFocus?: () => void }\n\t\t).onFocus = () => {\n\t\t\t/* no-op */\n\t\t};\n\t\t// We need to cancel focus events - which are used when we select - or we will blur our input and stop editing\n\t\t// The grab_focus is on the grid we're already in - i.e. we're not changing anything about what is being selected - so there is no need to re-do a selection/etc. once editing is done\n\n\t\tcell.appendChild(input);\n\t\tinput.focus();\n\t}\n\n\tendEditing(\n\t\tbuilder: JSBuilder,\n\t\tcancelledUpdate: boolean,\n\t\tcell: Element,\n\t\tcolumn: number,\n\t\tentry: TreeEntryJSON,\n\t\tinput: HTMLInputElement,\n\t\tparentContainer: HTMLElement,\n\t\trowShouldBeDraggable: boolean,\n\t\ttreeViewData: TreeWidgetJSON,\n\t) {\n\t\tparentContainer.draggable = rowShouldBeDraggable;\n\t\t(\n\t\t\tparentContainer.parentElement as HTMLElement & { onFocus?: () => void }\n\t\t).onFocus = undefined;\n\n\t\tfor (const child of Array.from(cell.childNodes)) {\n\t\t\tchild.remove();\n\t\t}\n\n\t\tif (cancelledUpdate) {\n\t\t\tcell.append(entry.columns[column].text);\n\t\t\treturn;\n\t\t}\n\n\t\tcell.append(input.value);\n\t\t// This is changed on core too - but we may as well optimistically set the new value here anyway\n\t\t// If core fails the update, it'll send us back the old value\n\n\t\tbuilder.callback(\n\t\t\t'treeview',\n\t\t\t'editend',\n\t\t\ttreeViewData,\n\t\t\t{ row: entry.row, column, value: input.value },\n\t\t\tbuilder,\n\t\t);\n\t}\n\n\tfilterEntries(filter: string) {\n\t\tif (this._filterTimer) clearTimeout(this._filterTimer);\n\n\t\tvar entriesToHide: Array<HTMLElement> = [];\n\t\tvar allEntries = this._container.querySelectorAll('.ui-treeview-entry');\n\n\t\tfilter = filter.trim();\n\n\t\tallEntries.forEach((entry: HTMLElement) => {\n\t\t\tif (filter === '') return;\n\n\t\t\tvar cells = entry.querySelectorAll('div');\n\t\t\tfor (var i in cells) {\n\t\t\t\tvar entryText = cells[i].innerText;\n\t\t\t\tif (\n\t\t\t\t\tentryText &&\n\t\t\t\t\tentryText.toLowerCase().indexOf(filter.toLowerCase()) >= 0\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tentriesToHide.push(entry);\n\t\t});\n\n\t\tthis._filterTimer = setTimeout(() => {\n\t\t\tallEntries.forEach((entry) => {\n\t\t\t\tL.DomUtil.removeClass(entry, 'hidden');\n\t\t\t});\n\t\t\tentriesToHide.forEach((entry) => {\n\t\t\t\tL.DomUtil.addClass(entry, 'hidden');\n\t\t\t});\n\t\t}, 100);\n\t}\n\n\tsetupKeyEvents(data: TreeWidgetJSON, builder: JSBuilder) {\n\t\tthis._container.addEventListener('keydown', (event) => {\n\t\t\tconst listElements =\n\t\t\t\tthis._container.querySelectorAll('.ui-treeview-entry');\n\t\t\tthis.handleKeyEvent(event, listElements, builder, data);\n\t\t});\n\t}\n\n\tchangeFocusedRow(\n\t\tlistElements: Array<HTMLElement>,\n\t\tfromIndex: number,\n\t\ttoIndex: number,\n\t) {\n\t\tvar nextElement = listElements.at(toIndex);\n\t\tnextElement.tabIndex = 0;\n\t\tnextElement.focus();\n\n\t\tvar nextInput = Array.from(\n\t\t\tlistElements\n\t\t\t\t.at(toIndex)\n\t\t\t\t.querySelectorAll('.ui-treeview-entry > div > input'),\n\t\t) as Array<HTMLElement>;\n\t\tif (nextInput && nextInput.length)\n\t\t\tnextInput.at(0).removeAttribute('tabindex');\n\n\t\tif (fromIndex >= 0) {\n\t\t\tvar oldElement = listElements.at(fromIndex);\n\t\t\tif (L.DomUtil.hasClass(oldElement, 'selected')) return;\n\n\t\t\toldElement.removeAttribute('tabindex');\n\t\t\tvar oldInput = Array.from(\n\t\t\t\tlistElements\n\t\t\t\t\t.at(fromIndex)\n\t\t\t\t\t.querySelectorAll('.ui-treeview-entry > div > input'),\n\t\t\t) as Array<HTMLElement>;\n\t\t\tif (oldInput && oldInput.length) oldInput.at(0).tabIndex = -1;\n\t\t}\n\t}\n\n\tgetCurrentEntry(listElements: Array<HTMLElement>) {\n\t\tvar focusedElement = document.activeElement as HTMLElement;\n\t\t// tr - row itself\n\t\tvar currIndex = listElements.indexOf(focusedElement);\n\t\t// input - child of a row\n\t\tif (currIndex < 0)\n\t\t\tcurrIndex = listElements.indexOf(\n\t\t\t\tfocusedElement.parentNode.parentNode as HTMLElement,\n\t\t\t);\n\t\t// no focused entry - try with selected one\n\t\tif (currIndex < 0) {\n\t\t\tvar selected = listElements.filter((o) => {\n\t\t\t\treturn o.classList.contains('selected');\n\t\t\t});\n\t\t\tif (selected && selected.length)\n\t\t\t\tcurrIndex = listElements.indexOf(selected[0]);\n\t\t}\n\t\tif (currIndex < 0) {\n\t\t\tfor (var i in listElements) {\n\t\t\t\tvar parent = listElements[i].parentNode;\n\n\t\t\t\tif (parent) parent = parent.parentNode;\n\t\t\t\telse break;\n\n\t\t\t\tif (parent && L.DomUtil.hasClass(parent, 'selected')) {\n\t\t\t\t\tcurrIndex = listElements.indexOf(listElements[i]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn currIndex;\n\t}\n\n\thandleKeyEvent(\n\t\tevent: KeyboardEvent,\n\t\tnodeList: NodeList,\n\t\tbuilder: JSBuilder,\n\t\tdata: TreeWidgetJSON,\n\t) {\n\t\tvar preventDef = false;\n\t\tvar listElements = Array.from(nodeList) as Array<HTMLElement>; // querySelector returns NodeList not array\n\t\tvar treeLength = listElements.length;\n\t\tvar currIndex = this.getCurrentEntry(listElements);\n\n\t\tif (event.key === 'ArrowDown') {\n\t\t\tif (currIndex < 0) this.changeFocusedRow(listElements, currIndex, 0);\n\t\t\telse {\n\t\t\t\tvar nextIndex = currIndex + 1;\n\t\t\t\twhile (\n\t\t\t\t\tnextIndex < treeLength - 1 &&\n\t\t\t\t\tlistElements[nextIndex].clientHeight <= 0\n\t\t\t\t)\n\t\t\t\t\tnextIndex++;\n\t\t\t\tif (nextIndex < treeLength)\n\t\t\t\t\tthis.changeFocusedRow(listElements, currIndex, nextIndex);\n\t\t\t}\n\t\t\tpreventDef = true;\n\t\t} else if (event.key === 'ArrowUp') {\n\t\t\tif (currIndex < 0)\n\t\t\t\tthis.changeFocusedRow(listElements, currIndex, treeLength - 1);\n\t\t\telse {\n\t\t\t\tvar nextIndex = currIndex - 1;\n\t\t\t\twhile (nextIndex >= 0 && listElements[nextIndex].clientHeight <= 0)\n\t\t\t\t\tnextIndex--;\n\t\t\t\tif (nextIndex >= 0)\n\t\t\t\t\tthis.changeFocusedRow(listElements, currIndex, nextIndex);\n\t\t\t}\n\n\t\t\tpreventDef = true;\n\t\t} else if (\n\t\t\tdata.fireKeyEvents &&\n\t\t\t// FIXME: can callback return boolean?\n\t\t\t(builder as any).callback(\n\t\t\t\t'treeview',\n\t\t\t\t'keydown',\n\t\t\t\t{ id: data.id, key: event.key },\n\t\t\t\tcurrIndex,\n\t\t\t\tbuilder,\n\t\t\t)\n\t\t) {\n\t\t\t// used in mentions\n\t\t\tpreventDef = true;\n\t\t}\n\n\t\tif (preventDef) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t}\n\t}\n\n\tisRealTree(data: TreeWidgetJSON) {\n\t\tlet isRealTreeView = false;\n\t\tfor (var i in data.entries) {\n\t\t\tif (data.entries[i].children && data.entries[i].children.length) {\n\t\t\t\tisRealTreeView = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn isRealTreeView;\n\t}\n\n\tgetSortComparator(columnIndex: number, up: boolean) {\n\t\treturn (a: HTMLElement, b: HTMLElement) => {\n\t\t\tif (!a || !b) return 0;\n\n\t\t\tvar tda = a.querySelectorAll('div').item(columnIndex);\n\t\t\tvar tdb = b.querySelectorAll('div').item(columnIndex);\n\n\t\t\tif (tda.querySelector('input')) {\n\t\t\t\tif (\n\t\t\t\t\ttda.querySelector('input').checked ===\n\t\t\t\t\ttdb.querySelector('input').checked\n\t\t\t\t)\n\t\t\t\t\treturn 0;\n\t\t\t\tif (up) {\n\t\t\t\t\tif (\n\t\t\t\t\t\ttda.querySelector('input').checked >\n\t\t\t\t\t\ttdb.querySelector('input').checked\n\t\t\t\t\t)\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\telse return -1;\n\t\t\t\t} else if (\n\t\t\t\t\ttdb.querySelector('input').checked >\n\t\t\t\t\ttda.querySelector('input').checked\n\t\t\t\t)\n\t\t\t\t\treturn 1;\n\t\t\t\telse return -1;\n\t\t\t}\n\n\t\t\tif (up)\n\t\t\t\treturn tdb.innerText\n\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t.localeCompare(tda.innerText.toLowerCase());\n\t\t\telse\n\t\t\t\treturn tda.innerText\n\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t.localeCompare(tdb.innerText.toLowerCase());\n\t\t};\n\t}\n\n\tsortByColumn(icon: HTMLSpanElement, columnIndex: number, up: boolean) {\n\t\tthis.clearSorting();\n\t\tL.DomUtil.addClass(icon, up ? 'up' : 'down');\n\n\t\tvar toSort: Array<HTMLDivElement> = [];\n\n\t\tconst container = this._container;\n\t\tcontainer\n\t\t\t.querySelectorAll(\n\t\t\t\t':not(.ui-treeview-expanded-content) .ui-treeview-entry',\n\t\t\t)\n\t\t\t.forEach((item: HTMLDivElement) => {\n\t\t\t\ttoSort.push(item);\n\t\t\t\tcontainer.removeChild(item);\n\t\t\t});\n\n\t\ttoSort.sort(this.getSortComparator(columnIndex, up));\n\n\t\ttoSort.forEach((item) => {\n\t\t\tcontainer.insertBefore(item, container.lastChild.nextSibling);\n\t\t});\n\t}\n\n\tclearSorting() {\n\t\tvar icons = this._thead.querySelectorAll('.ui-treeview-header-sort-icon');\n\t\ticons.forEach((icon) => {\n\t\t\tL.DomUtil.removeClass(icon, 'down');\n\t\t\tL.DomUtil.removeClass(icon, 'up');\n\t\t});\n\t}\n\n\tfillHeaders(headers: Array<TreeHeaderJSON>, builder: JSBuilder) {\n\t\tif (!headers) return;\n\n\t\tthis._thead = L.DomUtil.create(\n\t\t\t'div',\n\t\t\t'ui-treeview-headers',\n\t\t\tthis._container,\n\t\t);\n\n\t\tlet dummyCells = this._columns - headers.length;\n\t\tif (this._hasState) dummyCells++;\n\t\tthis._thead.style.gridColumn = '1 / ' + (this._columns + dummyCells + 1);\n\n\t\tfor (let index = 0; index < dummyCells; index++) {\n\t\t\tthis.fillHeader({ text: '', sortable: false }, builder);\n\t\t\tif (index === 0 && this._hasState)\n\t\t\t\tL.DomUtil.addClass(this._thead.lastChild, 'ui-treeview-state-column');\n\t\t\telse L.DomUtil.addClass(this._thead.lastChild, 'ui-treeview-icon-column');\n\t\t}\n\n\t\tfor (const index in headers) {\n\t\t\tthis.fillHeader(headers[index], builder);\n\n\t\t\tif (headers[index].sortable === false) continue;\n\n\t\t\tvar clickFunction = (columnIndex: number, icon: HTMLSpanElement) => {\n\t\t\t\treturn () => {\n\t\t\t\t\tif (L.DomUtil.hasClass(icon, 'down'))\n\t\t\t\t\t\tthis.sortByColumn(icon, columnIndex + dummyCells, true);\n\t\t\t\t\telse this.sortByColumn(icon, columnIndex + dummyCells, false);\n\t\t\t\t};\n\t\t\t};\n\n\t\t\tconst last = this._thead.lastChild as HTMLElement;\n\t\t\tlast.onclick = clickFunction(\n\t\t\t\tparseInt(index),\n\t\t\t\tlast.querySelector('.ui-treeview-header-sort-icon'),\n\t\t\t);\n\t\t}\n\t}\n\n\tmakeEmptyList(data: TreeWidgetJSON, builder: JSBuilder) {\n\t\t// contentbox and tree can never be empty, 1 page or 1 sheet always exists\n\t\tif (data.id === 'contenttree') {\n\t\t\tvar tr = L.DomUtil.create(\n\t\t\t\t'div',\n\t\t\t\tbuilder.options.cssClass + ' ui-treview-entry ui-treeview-placeholder',\n\t\t\t\tthis._container,\n\t\t\t);\n\t\t\ttr.innerText = _(\n\t\t\t\t'Headings and objects that you add to the document will appear here',\n\t\t\t);\n\t\t} else {\n\t\t\tL.DomUtil.addClass(this._container, 'empty');\n\t\t\tif (data.hideIfEmpty) L.DomUtil.addClass(this._container, 'hidden');\n\t\t}\n\t}\n\n\tmakeTreeViewFocusable(enable: boolean) {\n\t\tif (enable) this._container.tabIndex = 0;\n\t\telse this._container.removeAttribute('tabindex');\n\t}\n\n\tfillEntries(\n\t\tdata: TreeWidgetJSON,\n\t\tentries: Array<TreeEntryJSON>,\n\t\tbuilder: JSBuilder,\n\t\tlevel: number,\n\t\tparent: HTMLElement,\n\t) {\n\t\tlet hasSelectedEntry = false;\n\t\tfor (const index in entries) {\n\t\t\tthis.fillRow(data, entries[index], builder, level, parent);\n\n\t\t\thasSelectedEntry = hasSelectedEntry || entries[index].selected;\n\n\t\t\tif (entries[index].children && entries[index].children.length) {\n\t\t\t\tL.DomUtil.addClass(parent.lastChild, 'ui-treeview-expandable');\n\t\t\t\tconst subGrid = L.DomUtil.create(\n\t\t\t\t\t'div',\n\t\t\t\t\t'ui-treeview-expanded-content',\n\t\t\t\t\tparent,\n\t\t\t\t);\n\n\t\t\t\tlet dummyColumns = 0;\n\t\t\t\tif (this._hasState) dummyColumns++;\n\t\t\t\tsubGrid.style.gridColumn = '1 / ' + (this._columns + dummyColumns + 1);\n\n\t\t\t\tthis.fillEntries(\n\t\t\t\t\tdata,\n\t\t\t\t\tentries[index].children,\n\t\t\t\t\tbuilder,\n\t\t\t\t\tlevel + 1,\n\t\t\t\t\tsubGrid,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (entries && entries.length === 0) this.makeEmptyList(data, builder);\n\n\t\t// we need to provide a way for making the treeview control focusable\n\t\t// when no entry is selected\n\t\tif (level === 1 && !hasSelectedEntry) this.makeTreeViewFocusable(true);\n\t}\n\n\tgetColumnType(column: TreeColumnJSON) {\n\t\tconst isString = column.link || column.text;\n\t\tconst isIcon =\n\t\t\tcolumn.collapsed ||\n\t\t\tcolumn.collapsedimage ||\n\t\t\tcolumn.expanded ||\n\t\t\tcolumn.expandedimage;\n\n\t\tlet columnType = 'unknown';\n\t\tif (this.isSeparator(column)) columnType = 'separator';\n\t\telse if (isString) columnType = 'string';\n\t\telse if (isIcon) columnType = 'icon';\n\n\t\treturn columnType;\n\t}\n\n\tpreprocessColumnData(entires: Array<TreeEntryJSON>) {\n\t\tif (!entires || !entires.length) return;\n\n\t\t// generate array of types for each entry\n\t\tconst columnTypes = entires\n\t\t\t.map(\n\t\t\t\t(entry: TreeEntryJSON): Array<string> => {\n\t\t\t\t\tconst currentTypes = new Array<string>();\n\n\t\t\t\t\tentry.columns.forEach((column: TreeColumnJSON) => {\n\t\t\t\t\t\tcurrentTypes.push(this.getColumnType(column));\n\t\t\t\t\t});\n\n\t\t\t\t\treturn currentTypes;\n\t\t\t\t},\n\t\t\t\t// use the longest entry - naive approach\n\t\t\t)\n\t\t\t.reduce((prev: Array<string>, next: Array<string>): Array<string> => {\n\t\t\t\tif (!next || prev.length > next.length) return prev;\n\t\t\t\treturn next;\n\t\t\t});\n\n\t\t// put missing dummy columns where are missing\n\t\tentires.forEach((entry: TreeEntryJSON) => {\n\t\t\tconst existingColumns = entry.columns;\n\t\t\tconst missingColumns = columnTypes.length - existingColumns.length;\n\t\t\tif (missingColumns <= 0) return;\n\n\t\t\tconst newColumns = Array<TreeColumnJSON>();\n\t\t\tlet targetIndex = 0;\n\t\t\tlet existingIndex = 0;\n\t\t\twhile (targetIndex < columnTypes.length) {\n\t\t\t\tconst isExistingColumn = existingIndex < existingColumns.length;\n\t\t\t\tconst currentType = isExistingColumn\n\t\t\t\t\t? this.getColumnType(existingColumns[existingIndex])\n\t\t\t\t\t: 'unknown';\n\n\t\t\t\tif (currentType === 'separator') break; // don't add new columns - full width\n\n\t\t\t\tif (!isExistingColumn || currentType !== columnTypes[targetIndex]) {\n\t\t\t\t\tnewColumns.push({ text: '' });\n\t\t\t\t} else {\n\t\t\t\t\tnewColumns.push(existingColumns[existingIndex]);\n\t\t\t\t\texistingIndex++;\n\t\t\t\t}\n\n\t\t\t\ttargetIndex++;\n\t\t\t}\n\t\t\tentry.columns = newColumns;\n\t\t});\n\t}\n\n\tbuild(\n\t\tdata: TreeWidgetJSON,\n\t\tbuilder: JSBuilder,\n\t\tparentContainer: HTMLElement,\n\t) {\n\t\tthis.preprocessColumnData(data.entries);\n\t\tthis.fillHeaders(data.headers, builder);\n\t\tthis.fillEntries(data, data.entries, builder, 1, this._tbody);\n\n\t\tparentContainer.appendChild(this._container);\n\n\t\treturn true;\n\t}\n}\n\nJSDialog.treeView = function (\n\tparentContainer: HTMLElement,\n\tdata: TreeWidgetJSON,\n\tbuilder: JSBuilder,\n) {\n\tvar treeView = new TreeViewControl(data, builder);\n\ttreeView.build(data, builder, parentContainer);\n\n\treturn false;\n};\n\nJSDialog.isDnDActive = function () {\n\tvar dndElements = document.querySelectorAll('.droptarget');\n\treturn dndElements && dndElements.length;\n};\n"]}