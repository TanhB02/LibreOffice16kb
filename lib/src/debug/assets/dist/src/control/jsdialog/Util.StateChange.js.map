{"version":3,"file":"Util.StateChange.js","sourceRoot":"","sources":["../../../../../../../../../../../TanhX/online/browser/src/control/jsdialog/Util.StateChange.ts"],"names":[],"mappings":"AAAA,gCAAgC;AAChC;;;;;;;;GAQG;AAUH,SAAS,aAAa,CAAC,OAAgB,EAAE,QAA6B;IACrE,IAAI,eAAe,GAAG,UAAU,SAAgC;QAC/D,KAAK,IAAI,CAAC,IAAI,SAAS,EAAE;YACxB,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,aAAa,KAAK,UAAU,EAAE;gBAC9C,IAAM,WAAW,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,MAAqB,CAAC;gBACvD,IAAI,MAAM,GAAG,WAAW,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,MAAM,CAAC;gBAC7D,QAAQ,CAAC,MAAM,CAAC,CAAC;aACjB;SACD;IACF,CAAC,CAAC;IAEF,IAAI,cAAc,GAAG,IAAI,gBAAgB,CAAC,eAAe,CAAC,CAAC;IAC3D,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,eAAe,EAAE,CAAC,UAAU,CAAC,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC,CAAC;AAC7F,CAAC;AAED,SAAS,wBAAwB,CAAC,MAAe,EAAE,OAAuB;IACzE,IAAI,eAAe,GAAG,UAAU,MAAe;QAC9C,GAAG,CAAC,gBAAgB,CAAC,mBAAmB,CAAC;YACzC,KAAK,IAAM,CAAC,IAAI,OAAO,EAAE;gBACvB,IAAI,MAAM,EAAE;oBACX,OAAO,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;iBACvC;qBAAM;oBACN,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;iBAC5C;aACD;QACF,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,aAAa,CAAC,MAAM,EAAE,eAAe,CAAC,CAAC;AACxC,CAAC;AAED,QAAQ,CAAC,aAAa,GAAG,aAAa,CAAC;AACvC,QAAQ,CAAC,wBAAwB,GAAG,wBAAwB,CAAC","sourcesContent":["/* -*- js-indent-level: 8 -*- */\n/*\n * Copyright the Collabora Online contributors.\n *\n * SPDX-License-Identifier: MPL-2.0\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n/*\n * Util.StateChange - helper for defining enable / disable callback\n */\n\ndeclare var JSDialog: any;\n\ntype StateChangeCallback = (enabled: boolean) => void;\n\nfunction onStateChange(element: Element, callback: StateChangeCallback) {\n\tvar enabledCallback = function (mutations: Array<MutationRecord>) {\n\t\tfor (var i in mutations) {\n\t\t\tif (mutations[i].attributeName === 'disabled') {\n\t\t\t\tconst htmlElement = mutations[i].target as HTMLElement;\n\t\t\t\tvar enable = htmlElement.getAttribute('disabled') !== 'true';\n\t\t\t\tcallback(enable);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar enableObserver = new MutationObserver(enabledCallback);\n\tenableObserver.observe(element, { attributeFilter: ['disabled'], attributeOldValue: true });\n}\n\nfunction synchronizeDisabledState(source: Element, targets: Array<Element>) {\n\tvar enabledCallback = function (enable: boolean) {\n\t\tapp.layoutingService.appendLayoutingTask(() => {\n\t\tfor (const i in targets) {\n\t\t\t\tif (enable) {\n\t\t\t\t\ttargets[i].removeAttribute('disabled');\n\t\t\t\t} else {\n\t\t\t\t\ttargets[i].setAttribute('disabled', 'true');\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\tonStateChange(source, enabledCallback);\n}\n\nJSDialog.OnStateChange = onStateChange;\nJSDialog.SynchronizeDisabledState = synchronizeDisabledState;\n"]}