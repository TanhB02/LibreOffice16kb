{"version":3,"file":"Control.ESignatureDialog.js","sourceRoot":"","sources":["../../../../../../../../../../TanhX/online/browser/src/control/Control.ESignatureDialog.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright the Collabora Online contributors.\n *\n * SPDX-License-Identifier: MPL-2.0\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nnamespace cool {\n\texport interface SignatureProvider {\n\t\taction_type: string;\n\t\tname: string;\n\t\tcountryCodes: Array<string>;\n\t}\n\n\texport interface Country {\n\t\t// ISO 3166-1 alpha-2 code\n\t\tcode: string;\n\t\tname: string;\n\t}\n\n\t/**\n\t * Provides a dialog to select an electronic signing provider.\n\t */\n\texport class ESignatureDialog {\n\t\tid: string = 'ESignatureDialog';\n\n\t\tavailableCountries: Array<Country>;\n\n\t\tdefaultCountryCode: string = '';\n\n\t\tdefaultProviderId: string = '';\n\n\t\tavailableProviders: Array<SignatureProvider>;\n\n\t\t// Providers available in the selected country\n\t\tfilteredProviders: Array<SignatureProvider> = [];\n\n\t\tconstructor(\n\t\t\tcountries: Array<Country>,\n\t\t\tproviders: Array<SignatureProvider>,\n\t\t) {\n\t\t\t// Sort the lists based on the UI name.\n\t\t\tthis.availableCountries = countries;\n\t\t\tthis.availableCountries.sort((a, b) => a.name.localeCompare(b.name));\n\t\t\tthis.availableProviders = providers;\n\t\t\tthis.availableProviders.sort((a, b) => a.name.localeCompare(b.name));\n\t\t}\n\n\t\t// Produces the JSDialog JSON for the provider listbox\n\t\tgetProviderLbJSON(\n\t\t\tproviders: Array<string>,\n\t\t\tdefaultProviderIndex: number,\n\t\t): ListBoxWidget {\n\t\t\treturn {\n\t\t\t\tid: 'providerlb',\n\t\t\t\ttype: 'listbox',\n\t\t\t\tenabled: true,\n\t\t\t\tchildren: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: '',\n\t\t\t\t\t\ttype: 'control',\n\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\tchildren: [],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'pushbutton',\n\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\tsymbol: 'SPIN_DOWN',\n\t\t\t\t\t} as PushButtonWidget,\n\t\t\t\t],\n\t\t\t\tlabelledBy: 'providerft',\n\t\t\t\tentries: providers,\n\t\t\t\tselectedCount: 1,\n\t\t\t\tselectedEntries: [String(defaultProviderIndex)],\n\t\t\t} as ListBoxWidget;\n\t\t}\n\n\t\tgetChildrenJSON(\n\t\t\tcountries: Array<string>,\n\t\t\tdefaultCountryIndex: number,\n\t\t\tproviders: Array<string>,\n\t\t\tdefaultProviderIndex: number,\n\t\t): Array<WidgetJSON> {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tid: 'countryft',\n\t\t\t\t\ttype: 'fixedtext',\n\t\t\t\t\ttext: _('Country:'),\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tlabelFor: 'countrylb',\n\t\t\t\t} as TextWidget,\n\t\t\t\t{\n\t\t\t\t\tid: 'countrylb',\n\t\t\t\t\ttype: 'listbox',\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: '',\n\t\t\t\t\t\t\ttype: 'control',\n\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\tchildren: [],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'pushbutton',\n\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\tsymbol: 'SPIN_DOWN',\n\t\t\t\t\t\t} as PushButtonWidget,\n\t\t\t\t\t],\n\t\t\t\t\tlabelledBy: 'countryft',\n\t\t\t\t\tentries: countries,\n\t\t\t\t\tselectedCount: 1,\n\t\t\t\t\tselectedEntries: [String(defaultCountryIndex)],\n\t\t\t\t} as ListBoxWidget,\n\t\t\t\t{\n\t\t\t\t\tid: 'providerft',\n\t\t\t\t\ttype: 'fixedtext',\n\t\t\t\t\ttext: _('Provider:'),\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tlabelFor: 'providerlb',\n\t\t\t\t} as TextWidget,\n\t\t\t\tthis.getProviderLbJSON(providers, defaultProviderIndex),\n\t\t\t\t{\n\t\t\t\t\tid: this.id + '-buttonbox',\n\t\t\t\t\ttype: 'buttonbox',\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'ok',\n\t\t\t\t\t\t\ttype: 'pushbutton',\n\t\t\t\t\t\t\ttext: _('OK'),\n\t\t\t\t\t\t} as PushButtonWidget,\n\t\t\t\t\t],\n\t\t\t\t\tlayoutstyle: 'end',\n\t\t\t\t} as ButtonBoxWidget,\n\t\t\t];\n\t\t}\n\n\t\t// Updates the filtered provider list based on a country code and gets a default\n\t\t// provider index.\n\t\tgetDefaultProviderIndex(): number {\n\t\t\tthis.filteredProviders = this.availableProviders.filter((provider) =>\n\t\t\t\tprovider.countryCodes.includes(this.defaultCountryCode),\n\t\t\t);\n\t\t\tlet defaultProviderIndex = this.filteredProviders\n\t\t\t\t.map((entry) => entry.action_type)\n\t\t\t\t.indexOf(this.defaultProviderId);\n\t\t\tif (defaultProviderIndex == -1) {\n\t\t\t\tdefaultProviderIndex = 0;\n\t\t\t}\n\t\t\treturn defaultProviderIndex;\n\t\t}\n\n\t\tgetJSON(): JSDialogJSON {\n\t\t\tconst countries = this.availableCountries.map((entry) => entry.name);\n\t\t\tlet defaultCountryIndex = this.availableCountries\n\t\t\t\t.map((entry) => entry.code)\n\t\t\t\t.indexOf(this.defaultCountryCode);\n\t\t\tif (defaultCountryIndex == -1) {\n\t\t\t\tdefaultCountryIndex = 0;\n\t\t\t}\n\t\t\tconst defaultProviderIndex = this.getDefaultProviderIndex();\n\t\t\tconst providers = this.filteredProviders.map((entry) => entry.name);\n\t\t\tconst children = this.getChildrenJSON(\n\t\t\t\tcountries,\n\t\t\t\tdefaultCountryIndex,\n\t\t\t\tproviders,\n\t\t\t\tdefaultProviderIndex,\n\t\t\t);\n\t\t\treturn {\n\t\t\t\tid: this.id,\n\t\t\t\tdialogid: this.id,\n\t\t\t\ttype: 'dialog',\n\t\t\t\ttext: _('Insert Electronic Signature'),\n\t\t\t\ttitle: _('Insert Electronic Signature'),\n\t\t\t\tjsontype: 'dialog',\n\t\t\t\tresponses: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'ok',\n\t\t\t\t\t\tresponse: 1,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tchildren: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: this.id + '-mainbox',\n\t\t\t\t\t\ttype: 'container',\n\t\t\t\t\t\tvertical: true,\n\t\t\t\t\t\tchildren: children,\n\t\t\t\t\t} as ContainerWidgetJSON,\n\t\t\t\t],\n\t\t\t} as JSDialogJSON;\n\t\t}\n\n\t\tpublic close(): void {\n\t\t\tconst closeEvent = {\n\t\t\t\tdata: {\n\t\t\t\t\taction: 'close',\n\t\t\t\t\tid: this.id,\n\t\t\t\t},\n\t\t\t};\n\t\t\tapp.map.fire('jsdialog', closeEvent);\n\t\t}\n\n\t\tprivate callback(\n\t\t\tobjectType: string,\n\t\t\teventType: string,\n\t\t\tobject: any,\n\t\t\tdata: any,\n\t\t\tbuilder: JSBuilder,\n\t\t) {\n\t\t\tif (eventType === 'response' || object.id === 'ok') {\n\t\t\t\tconst providers = <HTMLSelectElement>(\n\t\t\t\t\tdocument.querySelector('#ESignatureDialog select#providerlb-input')\n\t\t\t\t);\n\t\t\t\tconst providerId =\n\t\t\t\t\tthis.filteredProviders[providers.selectedIndex].action_type;\n\t\t\t\tconst countries = <HTMLSelectElement>(\n\t\t\t\t\tdocument.querySelector('#ESignatureDialog select#countrylb-input')\n\t\t\t\t);\n\t\t\t\tconst countryCode =\n\t\t\t\t\tthis.availableCountries[countries.selectedIndex].code;\n\t\t\t\tthis.close();\n\t\t\t\tapp.map.eSignature.handleSelectedProvider(countryCode, providerId);\n\t\t\t} else if (eventType === 'selected' && object.id === 'countrylb') {\n\t\t\t\t// The selected country changed, update the list of providers\n\t\t\t\t// accordingly\n\t\t\t\t// Index-label pair\n\t\t\t\tconst countryIndex = parseInt(data.split(';')[0]);\n\t\t\t\tthis.defaultCountryCode = this.availableCountries[countryIndex].code;\n\t\t\t\tconst defaultProviderIndex = this.getDefaultProviderIndex();\n\t\t\t\tconst providers = this.filteredProviders.map((entry) => entry.name);\n\t\t\t\tconst providerLbJSON = this.getProviderLbJSON(\n\t\t\t\t\tproviders,\n\t\t\t\t\tdefaultProviderIndex,\n\t\t\t\t);\n\t\t\t\tapp.map.fire('jsdialogupdate', {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tjsontype: 'dialog',\n\t\t\t\t\t\taction: 'update',\n\t\t\t\t\t\tid: 'ESignatureDialog',\n\t\t\t\t\t\tcontrol: providerLbJSON,\n\t\t\t\t\t},\n\t\t\t\t\tcallback: this.callback.bind(this) as JSDialogCallback,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\topen(): void {\n\t\t\tconst dialogBuildEvent = {\n\t\t\t\tdata: this.getJSON(),\n\t\t\t\tcallback: this.callback.bind(this) as JSDialogCallback,\n\t\t\t};\n\t\t\tapp.map.fire('jsdialog', dialogBuildEvent);\n\t\t}\n\n\t\tsetDefaultCountryCode(countryCode: string): void {\n\t\t\tthis.defaultCountryCode = countryCode;\n\t\t}\n\n\t\tsetDefaultProviderId(providerId: string): void {\n\t\t\tthis.defaultProviderId = providerId;\n\t\t}\n\t}\n}\n\nJSDialog.eSignatureDialog = (\n\tcountries: Array<cool.Country>,\n\tproviders: Array<cool.SignatureProvider>,\n) => {\n\treturn new cool.ESignatureDialog(countries, providers);\n};\n"]}