{"version":3,"file":"CoverTransition.js","sourceRoot":"","sources":["../../../../../../../../../../../TanhX/online/browser/src/slideshow/transition/CoverTransition.ts"],"names":[],"mappings":"AAAA,gCAAgC;;;;;;;;;;;;;;;;AAchC,IAAK,YAKJ;AALD,WAAK,YAAY;IAChB,2DAAU,CAAA;IACV,uDAAQ,CAAA;IACR,yDAAS,CAAA;IACT,qDAAO,CAAA;AACR,CAAC,EALI,YAAY,KAAZ,YAAY,QAKhB;AAED;IAA8B,mCAAY;IAGzC,yBAAY,oBAA0C;QAAtD,YACC,kBAAM,oBAAoB,CAAC,SAC3B;QAJO,eAAS,GAAW,CAAC,CAAC;;IAI9B,CAAC;IAEM,+BAAK,GAAZ;QACC,IAAM,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC;QAEtE,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,OAAO,EAAE;YACnD,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC;SACtC;aAAM,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,QAAQ,EAAE;YAC3D,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,QAAQ,CAAC;SACvC;aAAM,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,SAAS,EAAE;YAC5D,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC;SACxC;aAAM;YACN,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,UAAU,CAAC;SACzC;QACD,IAAI,CAAC,eAAe,EAAE,CAAC;IACxB,CAAC;IAED,qBAAqB;IACd,4CAAkB,GAAzB;QACC,IAAI,CAAC,EAAE,CAAC,SAAS,CAChB,IAAI,CAAC,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,EACrD,IAAI,CAAC,SAAS,CACd,CAAC;IACH,CAAC;IAEM,2CAAiB,GAAxB;QACC,OAAO,whGAiEQ,CAAC;IACjB,CAAC;IAEF,sBAAC;AAAD,CAAC,AAnGD,CAA8B,YAAY,GAmGzC;AAED,SAAS,CAAC,eAAe,GAAG,eAAe,CAAC","sourcesContent":["/* -*- js-indent-level: 8 -*- */\n\n/*\n * Copyright the Collabora Online contributors.\n *\n * SPDX-License-Identifier: MPL-2.0\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\ndeclare var SlideShow: any;\n\nenum CoverSubType {\n\tFROMBOTTOM,\n\tFROMLEFT,\n\tFROMRIGHT,\n\tFROMTOP,\n}\n\nclass CoverTransition extends Transition2d {\n\tprivate direction: number = 0;\n\n\tconstructor(transitionParameters: TransitionParameters) {\n\t\tsuper(transitionParameters);\n\t}\n\n\tpublic start(): void {\n\t\tconst transitionSubType = this.transitionFilterInfo.transitionSubtype;\n\n\t\tif (transitionSubType == TransitionSubType.FROMTOP) {\n\t\t\tthis.direction = CoverSubType.FROMTOP;\n\t\t} else if (transitionSubType == TransitionSubType.FROMLEFT) {\n\t\t\tthis.direction = CoverSubType.FROMLEFT;\n\t\t} else if (transitionSubType == TransitionSubType.FROMRIGHT) {\n\t\t\tthis.direction = CoverSubType.FROMRIGHT;\n\t\t} else {\n\t\t\tthis.direction = CoverSubType.FROMBOTTOM;\n\t\t}\n\t\tthis.startTransition();\n\t}\n\n\t// jscpd:ignore-start\n\tpublic renderUniformValue(): void {\n\t\tthis.gl.uniform1i(\n\t\t\tthis.gl.getUniformLocation(this.program, 'direction'),\n\t\t\tthis.direction,\n\t\t);\n\t}\n\n\tpublic getFragmentShader(): string {\n\t\treturn `#version 300 es\n                precision mediump float;\n\n                uniform sampler2D leavingSlideTexture;\n                uniform sampler2D enteringSlideTexture;\n                uniform float time;\n                uniform int direction;\n\n                in vec2 v_texCoord;\n                out vec4 outColor;\n\n                void main() {\n                    vec2 uv = v_texCoord;\n                    float progress = time;\n\n                    vec2 leavingUV = uv;\n                    vec2 enteringUV = uv;\n\n                    if (direction == 0) {\n                        enteringUV = uv + vec2(0.0, -1.0 + progress);\n                    } else if (direction == 1) {\n                        enteringUV = uv + vec2(1.0 - progress, 0.0);\n                    } else if (direction == 2) {\n                        enteringUV = uv + vec2(-1.0 + progress, 0.0);\n                    } else if (direction == 3) {\n                        enteringUV = uv + vec2(0.0, 1.0 - progress);\n                    } else if (direction == 4) {\n                        // bottom left to top right\n                        enteringUV = uv + vec2(1.0 - progress, -1.0 + progress);\n                    } else if (direction == 5) {\n                        // top right to bottom left\n                        enteringUV = uv + vec2(-1.0 + progress, 1.0 - progress);\n                    } else if (direction == 6) {\n                        // top left to bottom right\n                        enteringUV = uv + vec2(1.0 - progress, 1.0 - progress);\n                    } else if (direction == 7) {\n                        // bottom right to top left\n                        enteringUV = uv + vec2(-1.0 + progress, -1.0 + progress);\n                    }\n\n                    bool showEntering = false;\n                    if (direction == 0) {\n                        showEntering = uv.y > 1.0 - progress;\n                    } else if (direction == 1) {\n                        showEntering = uv.x < progress;\n                    } else if (direction == 2) {\n                        showEntering = uv.x > 1.0 - progress;\n                    } else if (direction == 3) {\n                        showEntering = uv.y < progress;\n                    } else if (direction == 4) {\n                        showEntering = uv.x < progress && uv.y > 1.0 - progress;\n                    } else if (direction == 5) {\n                        showEntering = uv.x > 1.0 - progress && uv.y < progress;\n                    } else if (direction == 6) {\n                        showEntering = uv.x < progress && uv.y < progress;\n                    } else if (direction == 7) {\n                        showEntering = uv.x > 1.0 - progress && uv.y > 1.0 - progress;\n                    }\n\n                    if (showEntering) {\n                        outColor = texture(enteringSlideTexture, enteringUV);\n                    } else {\n                        outColor = texture(leavingSlideTexture, leavingUV);\n                    }\n                }\n                `;\n\t}\n\t// jscpd:ignore-end\n}\n\nSlideShow.CoverTransition = CoverTransition;\n"]}