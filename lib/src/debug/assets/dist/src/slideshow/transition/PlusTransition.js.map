{"version":3,"file":"PlusTransition.js","sourceRoot":"","sources":["../../../../../../../../../../../TanhX/online/browser/src/slideshow/transition/PlusTransition.ts"],"names":[],"mappings":"AAAA,oBAAoB;AACpB,gCAAgC;;;;;;;;;;;;;;;;AAchC;IAA6B,kCAAkB;IAC9C,wBAAY,oBAA0C;eACrD,kBAAM,oBAAoB,CAAC;IAC5B,CAAC;IAES,wCAAe,GAAzB;QACC,IAAM,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC;QACtE,IAAI,iBAAiB,KAAK,iBAAiB,CAAC,UAAU;YACrD,OAAO,4nBAgBC,CAAC;aACL,IAAI,iBAAiB,KAAK,iBAAiB,CAAC,SAAS;YACzD,OAAO,kYAYC,CAAC;IACX,CAAC;IACF,qBAAC;AAAD,CAAC,AAxCD,CAA6B,kBAAkB,GAwC9C;AAED,SAAS,CAAC,cAAc,GAAG,cAAc,CAAC","sourcesContent":["// @ts-strict-ignore\n/* -*- js-indent-level: 8 -*- */\n\n/*\n * Copyright the Collabora Online contributors.\n *\n * SPDX-License-Identifier: MPL-2.0\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\ndeclare var SlideShow: any;\n\nclass PlusTransition extends ClippingTransition {\n\tconstructor(transitionParameters: TransitionParameters) {\n\t\tsuper(transitionParameters);\n\t}\n\n\tprotected getMaskFunction(): string {\n\t\tconst transitionSubType = this.transitionFilterInfo.transitionSubtype;\n\t\tif (transitionSubType === TransitionSubType.CORNERSOUT)\n\t\t\treturn `\n                  float getMaskValue(vec2 uv, float time) {\n                      vec2 center = vec2(0.5, 0.5);\n\n                      vec2 dist = abs(uv - center);\n\n                      float innerBound = 0.25 - time / 4.0;\n                      float outerBound = 0.25 + time / 4.0;\n\n                      // dist >= innerBound && dist <= outerBound\n                      float mask =\n                          step(innerBound, dist.x) * step(-outerBound, -dist.x) *\n                          step(innerBound, dist.y) * step(-outerBound, -dist.y);\n\n                      return mask;\n                  }\n          `;\n\t\telse if (transitionSubType === TransitionSubType.CORNERSIN)\n\t\t\treturn `\n                  float getMaskValue(vec2 uv, float time) {\n                      vec2 center = vec2(0.5, 0.5);\n\n                      vec2 dist = abs(uv - center);\n\n                      float size = 1.01 * (1.0 - time) / 2.0;\n\n                      float mask = step(size, dist.x) * step(size, dist.y);\n\n                      return mask;\n                  }\n          `;\n\t}\n}\n\nSlideShow.PlusTransition = PlusTransition;\n"]}