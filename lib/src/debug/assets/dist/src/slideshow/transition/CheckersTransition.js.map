{"version":3,"file":"CheckersTransition.js","sourceRoot":"","sources":["../../../../../../../../../../../TanhX/online/browser/src/slideshow/transition/CheckersTransition.ts"],"names":[],"mappings":"AAAA,oBAAoB;AACpB,gCAAgC;;;;;;;;;;;;;;;;AAchC,IAAK,eAGJ;AAHD,WAAK,eAAe;IACnB,yDAAM,CAAA;IACN,qDAAI,CAAA;AACL,CAAC,EAHI,eAAe,KAAf,eAAe,QAGnB;AAED;IAAiC,sCAAkB;IAGlD,4BAAY,oBAA0C;eACrD,kBAAM,oBAAoB,CAAC;IAC5B,CAAC;IAES,mDAAsB,GAAhC;QACC,IAAM,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC;QAEtE,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,IAAI,EAAE;YAChD,IAAI,CAAC,SAAS,GAAG,eAAe,CAAC,IAAI,CAAC;SACtC;aAAM,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,MAAM,EAAE;YACzD,IAAI,CAAC,SAAS,GAAG,eAAe,CAAC,MAAM,CAAC;SACxC;IACF,CAAC;IAED,qBAAqB;IACX,4CAAe,GAAzB;QACC,IAAM,UAAU,GAAG,CAAC,CAAC;QACrB,IAAM,QAAQ,GAAG,GAAG,GAAG,UAAU,CAAC;QAClC,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,IAAI,eAAe,CAAC,MAAM,CAAC;QAE7D,OAAO,iKAIoC,QAAQ,UAAK,QAAQ,ubASzB,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,WAAW,2JAK7E,CAAC;IACH,CAAC;IAEF,yBAAC;AAAD,CAAC,AA5CD,CAAiC,kBAAkB,GA4ClD;AAED,SAAS,CAAC,kBAAkB,GAAG,kBAAkB,CAAC","sourcesContent":["// @ts-strict-ignore\n/* -*- js-indent-level: 8 -*- */\n\n/*\n * Copyright the Collabora Online contributors.\n *\n * SPDX-License-Identifier: MPL-2.0\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\ndeclare var SlideShow: any;\n\nenum CheckersSubType {\n\tACROSS,\n\tDOWN,\n}\n\nclass CheckersTransition extends ClippingTransition {\n\tprivate direction: number;\n\n\tconstructor(transitionParameters: TransitionParameters) {\n\t\tsuper(transitionParameters);\n\t}\n\n\tprotected initMaskFunctionParams() {\n\t\tconst transitionSubType = this.transitionFilterInfo.transitionSubtype;\n\n\t\tif (transitionSubType == TransitionSubType.DOWN) {\n\t\t\tthis.direction = CheckersSubType.DOWN;\n\t\t} else if (transitionSubType == TransitionSubType.ACROSS) {\n\t\t\tthis.direction = CheckersSubType.ACROSS;\n\t\t}\n\t}\n\n\t// jscpd:ignore-start\n\tprotected getMaskFunction(): string {\n\t\tconst numSquares = 8;\n\t\tconst edgeSize = 1.0 / numSquares;\n\t\tconst isAcrossDir = this.direction == CheckersSubType.ACROSS;\n\n\t\treturn `\n                float getMaskValue(vec2 uv, float time) {\n                    float progress = time * 2.0;\n\n                    vec2 squareSize = vec2(${edgeSize}, ${edgeSize});\n                    vec2 checkerCoord = floor(uv / squareSize);\n\n                    bool isWhiteSquare = mod(checkerCoord.x + checkerCoord.y, 2.0) == 0.0;\n                    vec2 localUV = fract(uv / squareSize);\n\n                    float adjustedProgress = isWhiteSquare ? progress : progress - 1.0;\n                    adjustedProgress = clamp(adjustedProgress, 0.0, 1.0);\n\n                    float localCoord = ${isAcrossDir ? 'localUV.x' : 'localUV.y'};\n                    bool showEntering = localCoord < adjustedProgress;\n\n                    return float(showEntering);\n                }\n\t\t`;\n\t}\n\t// jscpd:ignore-end\n}\n\nSlideShow.CheckersTransition = CheckersTransition;\n"]}