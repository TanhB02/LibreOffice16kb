{"version":3,"file":"OvalTransition.js","sourceRoot":"","sources":["../../../../../../../../../../../TanhX/online/browser/src/slideshow/transition/OvalTransition.ts"],"names":[],"mappings":"AAAA,oBAAoB;AACpB,gCAAgC;;;;;;;;;;;;;;;;AAchC,IAAK,WAGJ;AAHD,WAAK,WAAW;IACf,yDAAU,CAAA;IACV,qDAAQ,CAAA;AACT,CAAC,EAHI,WAAW,KAAX,WAAW,QAGf;AAED;IAA6B,kCAAkB;IAG9C,wBAAY,oBAA0C;eACrD,kBAAM,oBAAoB,CAAC;IAC5B,CAAC;IACS,+CAAsB,GAAhC;QACC,IAAM,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC;QACtE,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,UAAU,EAAE;YACtD,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,UAAU,CAAC;SACxC;aAAM,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,QAAQ,EAAE;YAC3D,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,QAAQ,CAAC;SACtC;IACF,CAAC;IAED,qBAAqB;IACX,wCAAe,GAAzB;QACC,IAAM,eAAe,GAAG,IAAI,CAAC,SAAS,IAAI,WAAW,CAAC,UAAU,CAAC;QAEjE,OAAO,+OAQa,eAAe,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,2OAUxD,CAAC;IACH,CAAC;IAEF,qBAAC;AAAD,CAAC,AAxCD,CAA6B,kBAAkB,GAwC9C;AAED,SAAS,CAAC,cAAc,GAAG,cAAc,CAAC","sourcesContent":["// @ts-strict-ignore\n/* -*- js-indent-level: 8 -*- */\n\n/*\n * Copyright the Collabora Online contributors.\n *\n * SPDX-License-Identifier: MPL-2.0\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\ndeclare var SlideShow: any;\n\nenum OvalSubType {\n\tHORIZONTAL,\n\tVERTICAL,\n}\n\nclass OvalTransition extends ClippingTransition {\n\tprivate direction: number;\n\n\tconstructor(transitionParameters: TransitionParameters) {\n\t\tsuper(transitionParameters);\n\t}\n\tprotected initMaskFunctionParams() {\n\t\tconst transitionSubType = this.transitionFilterInfo.transitionSubtype;\n\t\tif (transitionSubType == TransitionSubType.HORIZONTAL) {\n\t\t\tthis.direction = OvalSubType.HORIZONTAL;\n\t\t} else if (transitionSubType == TransitionSubType.VERTICAL) {\n\t\t\tthis.direction = OvalSubType.VERTICAL;\n\t\t}\n\t}\n\n\t// jscpd:ignore-start\n\tprotected getMaskFunction(): string {\n\t\tconst isHorizontalDir = this.direction == OvalSubType.HORIZONTAL;\n\n\t\treturn `\n                float getMaskValue(vec2 uv, float time) {\n                    float progress = time;\n\n                    vec2 center = vec2(0.5, 0.5);\n\n                    vec2 dist = abs(uv - center);\n\n                    ${isHorizontalDir ? 'dist.y' : 'dist.x'} *= 2.0;\n\n                    float size = progress * 1.2;\n\n                    float mask = step(length(dist), size);\n\n                    mask = min(mask, 1.0);\n\n                    return mask;\n                }\n\t\t`;\n\t}\n\t// jscpd:ignore-end\n}\n\nSlideShow.OvalTransition = OvalTransition;\n"]}