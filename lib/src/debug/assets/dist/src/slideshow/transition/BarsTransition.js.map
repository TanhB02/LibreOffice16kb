{"version":3,"file":"BarsTransition.js","sourceRoot":"","sources":["../../../../../../../../../../../TanhX/online/browser/src/slideshow/transition/BarsTransition.ts"],"names":[],"mappings":"AAAA,oBAAoB;AACpB,gCAAgC;;;;;;;;;;;;;;;;AAchC,IAAK,WAGJ;AAHD,WAAK,WAAW;IACf,qDAAQ,CAAA;IACR,yDAAU,CAAA;AACX,CAAC,EAHI,WAAW,KAAX,WAAW,QAGf;AAED;IAA6B,kCAAkB;IAG9C,wBAAY,oBAA0C;eACrD,kBAAM,oBAAoB,CAAC;IAC5B,CAAC;IAES,+CAAsB,GAAhC;QACC,IAAM,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC;QACtE,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,QAAQ,EAAE;YACpD,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,QAAQ,CAAC;SACtC;aAAM,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,UAAU,EAAE;YAC7D,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,UAAU,CAAC;SACxC;IACF,CAAC;IAED,qBAAqB;IACX,wCAAe,GAAzB;QACC,IAAM,aAAa,GAAG,IAAI,CAAC,SAAS,IAAI,WAAW,CAAC,QAAQ,CAAC;QAE7D,OAAO,qVAS2B,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,sOAMhE,CAAC;IACH,CAAC;IAEF,qBAAC;AAAD,CAAC,AAtCD,CAA6B,kBAAkB,GAsC9C;AAED,SAAS,CAAC,cAAc,GAAG,cAAc,CAAC","sourcesContent":["// @ts-strict-ignore\n/* -*- js-indent-level: 8 -*- */\n\n/*\n * Copyright the Collabora Online contributors.\n *\n * SPDX-License-Identifier: MPL-2.0\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\ndeclare var SlideShow: any;\n\nenum BarsSubType {\n\tVERTICAL,\n\tHORIZONTAL,\n}\n\nclass BarsTransition extends ClippingTransition {\n\tprivate direction: number;\n\n\tconstructor(transitionParameters: TransitionParameters) {\n\t\tsuper(transitionParameters);\n\t}\n\n\tprotected initMaskFunctionParams() {\n\t\tconst transitionSubType = this.transitionFilterInfo.transitionSubtype;\n\t\tif (transitionSubType == TransitionSubType.VERTICAL) {\n\t\t\tthis.direction = BarsSubType.VERTICAL;\n\t\t} else if (transitionSubType == TransitionSubType.HORIZONTAL) {\n\t\t\tthis.direction = BarsSubType.HORIZONTAL;\n\t\t}\n\t}\n\n\t// jscpd:ignore-start\n\tprotected getMaskFunction(): string {\n\t\tconst isVerticalDir = this.direction == BarsSubType.VERTICAL;\n\n\t\treturn `\n                float random(vec2 co) {\n                    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\n                }\n\n                float getMaskValue(vec2 uv, float time) {\n                    float progress = time;\n\n                    float numBars = 128.0;\n                    float coord = ${isVerticalDir ? 'uv.x' : 'uv.y'};\n                    float randValue = random(vec2(floor(coord * numBars), 0.0));\n\n                    bool showEntering = (randValue < progress);\n                    return float(showEntering);\n                }\n\t\t`;\n\t}\n\t// jscpd:ignore-end\n}\n\nSlideShow.BarsTransition = BarsTransition;\n"]}