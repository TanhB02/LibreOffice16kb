{"version":3,"file":"CanvasLoader.js","sourceRoot":"","sources":["../../../../../../../../../../TanhX/online/browser/src/slideshow/CanvasLoader.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-strict-ignore\n/* -*- js-indent-level: 8 -*- */\n\n/*\n * Copyright the Collabora Online contributors.\n *\n * SPDX-License-Identifier: MPL-2.0\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n/*\n * Loader for slideshow - it shows animation for the user to indicate loading\n */\n\ndeclare var SlideShow: any;\n\nabstract class CanvasLoader {\n\tpublic abstract startLoader(): void;\n\tpublic abstract stopLoader(): void;\n}\n\nclass CanvasLoader2d implements CanvasLoader {\n\tconstructor(canvasContext: RenderContext2d) {} // eslint-disable-line\n\n\tpublic startLoader(): void {} // eslint-disable-line\n\n\tpublic stopLoader(): void {} // eslint-disable-line\n}\n\nclass CanvasLoaderGl extends TextureAnimationBase implements CanvasLoader {\n\tprivate animationId: number | null = null;\n\tprivate uResolutionLoc: WebGLUniformLocation;\n\tprivate uTimeLoc: WebGLUniformLocation;\n\n\tconstructor(canvasContext: RenderContextGl) {\n\t\tsuper(canvasContext);\n\t\tthis.prepareTransition();\n\n\t\tthis.uResolutionLoc = this.gl.getUniformLocation(\n\t\t\tthis.program,\n\t\t\t'u_resolution',\n\t\t);\n\t\tthis.uTimeLoc = this.gl.getUniformLocation(this.program, 'u_time');\n\t}\n\n\tpublic renderUniformValue(): void {\n\t\tif (this.context.isDisposed()) return;\n\n\t\tthis.gl.uniform2f(\n\t\t\tthis.uResolutionLoc,\n\t\t\tthis.context.canvas.width,\n\t\t\tthis.context.canvas.height,\n\t\t);\n\t\tthis.gl.uniform1f(this.uTimeLoc, this.time);\n\t}\n\n\tpublic startLoader(): void {\n\t\tif (this.context.isDisposed()) return;\n\n\t\tif (this.animationId === null) {\n\t\t\tthis.startTime = performance.now();\n\t\t\tthis.animate();\n\t\t}\n\t}\n\n\tpublic stopLoader(): void {\n\t\tif (this.context.isDisposed()) return;\n\n\t\tif (this.animationId !== null) {\n\t\t\tcancelAnimationFrame(this.animationId);\n\t\t\tthis.animationId = null;\n\t\t\tthis.startTime = null;\n\n\t\t\t// Clear the canvas\n\t\t\tthis.gl.clear(this.gl.COLOR_BUFFER_BIT);\n\n\t\t\t// Delete WebGL resources\n\t\t\tif (this.vao) {\n\t\t\t\tthis.gl.deleteVertexArray(this.vao);\n\t\t\t\tthis.vao = null;\n\t\t\t}\n\n\t\t\tif (this.program) {\n\t\t\t\tthis.gl.deleteProgram(this.program);\n\t\t\t\tthis.program = null;\n\t\t\t}\n\n\t\t\t// Unbind any bound buffers or textures\n\t\t\tthis.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\n\t\t\tthis.gl.bindVertexArray(null);\n\n\t\t\t// Reset WebGL state\n\t\t\tthis.gl.useProgram(null);\n\n\t\t\t// Flush any pending WebGL commands\n\t\t\tthis.gl.flush();\n\t\t}\n\t}\n\n\tprivate animate = (): void => {\n\t\tif (!this.startTime) this.startTime = performance.now();\n\t\tthis.time = (performance.now() - this.startTime) / 1000; // Convert to seconds\n\n\t\tthis.render();\n\n\t\tthis.animationId = requestAnimationFrame(this.animate);\n\t};\n\n\tpublic render(): void {\n\t\tif (this.context.isDisposed()) return;\n\n\t\tthis.gl.viewport(\n\t\t\t0,\n\t\t\t0,\n\t\t\tthis.context.canvas.width,\n\t\t\tthis.context.canvas.height,\n\t\t);\n\t\tthis.gl.clearColor(0.0, 0.0, 0.0, 1.0); // Black background\n\t\tthis.gl.clear(this.gl.COLOR_BUFFER_BIT);\n\n\t\tthis.gl.useProgram(this.program);\n\t\tthis.renderUniformValue();\n\n\t\tthis.gl.bindVertexArray(this.vao);\n\t\tthis.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\n\t}\n\n\tpublic getVertexShader(): string {\n\t\treturn `#version 300 es\n                in vec4 a_position;\n                void main() {\n                    gl_Position = a_position;\n                }`;\n\t}\n\n\tpublic getFragmentShader(): string {\n\t\treturn `#version 300 es\n                precision highp float;\n                uniform vec2 u_resolution;\n                uniform float u_time;\n                out vec4 outColor;\n\n                // Directly defined constants\n                const float LOADER_SIZE = 0.04;\n                const float LOADER_THICKNESS = 0.2;\n                const vec3 LOADER_COLOR = vec3(0.8, 0.8, 0.8);\n                const float ROTATION_SPEED = 5.0;\n\n                void main() {\n                    vec2 center = vec2(0.5, 0.5);\n                    vec2 aspect = vec2(u_resolution.x / u_resolution.y, 1.0);\n                    vec2 position = (gl_FragCoord.xy / u_resolution - center) * aspect;\n                    float radius = length(position);\n                    float angle = atan(position.y, position.x) + u_time * ROTATION_SPEED;\n\n                    float outerRadius = LOADER_SIZE;\n                    float innerRadius = outerRadius - LOADER_SIZE * LOADER_THICKNESS;\n\n                    if (radius > outerRadius || radius < innerRadius) {\n                        discard;\n                    }\n\n                    float segmentAngle = 3.14159 * 0.5; // Quarter circle\n\n                    if (mod(angle, 6.28318) > segmentAngle) {\n                        discard;\n                    }\n\n                    outColor = vec4(LOADER_COLOR, 1.0);\n                }`;\n\t}\n}\n\nSlideShow.CanvasLoaderGl = CanvasLoaderGl;\nSlideShow.CanvasLoader2d = CanvasLoader2d;\n"]}