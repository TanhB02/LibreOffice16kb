{"version":3,"file":"DissolveTransition3d.js","sourceRoot":"","sources":["../../../../../../../../../../../TanhX/online/browser/src/slideshow/transition3d/DissolveTransition3d.ts"],"names":[],"mappings":"AAAA,gCAAgC;;;;;;;;;;;;;;;;;;;;;;;;;;;AAchC;IAAsC,2CAAqB;IAC1D,iCAAY,oBAA4C;eACvD,kBAAM,oBAAoB,CAAC;IAC5B,CAAC;IAEM,mDAAiB,GAAxB;QACC,OAAO,21BAuBQ,CAAC;IACjB,CAAC;IACF,8BAAC;AAAD,CAAC,AA/BD,CAAsC,qBAAqB,GA+B1D;AACD,iCAAiC;AACjC,wBAAwB;AACxB,SAAS,oBAAoB,CAAC,oBAA0C;IACvE,IAAM,KAAK,GAAG,IAAI,SAAS,EAAE,CAAC;IAE9B,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3C,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAE3C,IAAM,kBAAkB,GAAgB,EAAE,CAAC;IAC3C,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IAEpD,IAAM,mBAAmB,GAAgB,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IAEtE,IAAM,uBAAuB,yBACzB,oBAAoB,KACvB,iBAAiB,EAAE,kBAAkB,EACrC,kBAAkB,EAAE,mBAAmB,EACvC,aAAa,EAAE,EAAE,GACjB,CAAC;IAEF,OAAO,IAAI,uBAAuB,CAAC,uBAAuB,CAAC,CAAC;AAC7D,CAAC;AACD,sBAAsB;AAEtB,SAAS,CAAC,oBAAoB,GAAG,oBAAoB,CAAC","sourcesContent":["/* -*- js-indent-level: 8 -*- */\n\n/*\n * Copyright the Collabora Online contributors.\n *\n * SPDX-License-Identifier: MPL-2.0\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\ndeclare var SlideShow: any;\n\nclass DissolveTransition3dImp extends PermTextureTransition {\n\tconstructor(transitionParameters: TransitionParameters3D) {\n\t\tsuper(transitionParameters);\n\t}\n\n\tpublic getFragmentShader(): string {\n\t\treturn `#version 300 es\n                precision mediump float;\n\n                uniform sampler2D leavingSlideTexture;\n                uniform sampler2D enteringSlideTexture;\n                uniform sampler2D permTexture;\n                uniform float time;\n\n                in vec2 v_texturePosition;\n                in vec3 v_normal;\n                out vec4 outColor;\n\n                float snoise(vec2 P) {\n                    return texture(permTexture, P).r;\n                }\n\n                void main() {\n                    float sn = snoise(10.0*v_texturePosition);\n                    if( sn < time)\n                        outColor = texture(enteringSlideTexture, v_texturePosition);\n                    else\n                        outColor = texture(leavingSlideTexture, v_texturePosition);\n                }\n                `;\n\t}\n}\n// TODO - remove code duplication\n/* jscpd:ignore-start */\nfunction DissolveTransition3d(transitionParameters: TransitionParameters) {\n\tconst slide = new Primitive();\n\n\tslide.pushTriangle([0, 0], [1, 0], [0, 1]);\n\tslide.pushTriangle([1, 0], [0, 1], [1, 1]);\n\n\tconst aLeavingPrimitives: Primitive[] = [];\n\taLeavingPrimitives.push(Primitive.cloneDeep(slide));\n\n\tconst aEnteringPrimitives: Primitive[] = [Primitive.cloneDeep(slide)];\n\n\tconst newTransitionParameters: TransitionParameters3D = {\n\t\t...transitionParameters,\n\t\tleavingPrimitives: aLeavingPrimitives,\n\t\tenteringPrimitives: aEnteringPrimitives,\n\t\tallOperations: [],\n\t};\n\n\treturn new DissolveTransition3dImp(newTransitionParameters);\n}\n/* jscpd:ignore-end */\n\nSlideShow.DissolveTransition3d = DissolveTransition3d;\n"]}