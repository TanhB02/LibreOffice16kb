{"version":3,"file":"SlideChangeBase.js","sourceRoot":"","sources":["../../../../../../../../../../../TanhX/online/browser/src/slideshow/engine/SlideChangeBase.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-strict-ignore\n/* -*- tab-width: 4 -*- */\n\n/*\n * Copyright the Collabora Online contributors.\n *\n * SPDX-License-Identifier: MPL-2.0\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nabstract class ISlideChangeBase {\n\tpublic abstract start(): void;\n\tpublic abstract end(): void;\n\tpublic abstract perform(nT: number, last: boolean): void;\n\tpublic abstract getUnderlyingValue(): number;\n}\n\n// we use mixin for simulating multiple inheritance\nfunction SlideChangeTemplate<T extends AGConstructor<any>>(BaseType: T) {\n\tabstract class SlideChangeBase extends BaseType implements ISlideChangeBase {\n\t\tprivate isFinished: boolean;\n\t\tprotected requestAnimationFrameId: number;\n\t\tprotected transitionParameters: TransitionParameters;\n\t\tprotected leavingSlide: WebGLTexture | ImageBitmap;\n\t\tprotected enteringSlide: WebGLTexture | ImageBitmap;\n\t\tprotected time: number;\n\t\tprotected isLastFrame: boolean;\n\n\t\tconstructor(...args: any[]) {\n\t\t\tassert(\n\t\t\t\targs.length === 1,\n\t\t\t\t'SlideChangeBase, constructor args length is wrong',\n\t\t\t);\n\n\t\t\tconst transitionParameters: TransitionParameters = args[0];\n\t\t\tsuper(transitionParameters);\n\t\t\tthis.transitionParameters = transitionParameters;\n\t\t\tthis.leavingSlide = transitionParameters.current;\n\t\t\tthis.enteringSlide = transitionParameters.next;\n\t\t\tthis.isFinished = false;\n\t\t\tthis.requestAnimationFrameId = null;\n\t\t\tthis.time = null;\n\t\t\tthis.isLastFrame = false;\n\t\t}\n\n\t\tpublic abstract start(): void;\n\n\t\tpublic end(): void {\n\t\t\tif (this.isFinished) return;\n\t\t\t// end() can be invoked before last render() execution\n\t\t\tif (this.requestAnimationFrameId !== null) {\n\t\t\t\tconsole.debug('SlideChangeBase.end: render() not yet executed');\n\t\t\t\tthis.requestAnimationFrameId = null;\n\t\t\t\tsetTimeout(this.end.bind(this), 100);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.isFinished = true;\n\t\t\tthis.endTransition();\n\t\t}\n\n\t\tprotected abstract endTransition(): void;\n\n\t\tpublic perform(nT: number, last: boolean = false): void {\n\t\t\tif (this.isFinished) return;\n\t\t\tthis.time = nT;\n\t\t\tthis.isLastFrame = last;\n\t\t}\n\n\t\tpublic renderFrame(\n\t\t\tnT: number,\n\t\t\tproperties?: AnimatedElementRenderProperties,\n\t\t) {\n\t\t\tif (nT !== null && nT >= 0.0) {\n\t\t\t\tthis.render(nT, properties);\n\t\t\t}\n\t\t}\n\n\t\tprotected animate() {\n\t\t\tif (this.time !== null && this.time > 0.0) {\n\t\t\t\tthis.render(this.time);\n\t\t\t}\n\t\t\tif (!this.isLastFrame)\n\t\t\t\tthis.requestAnimationFrameId = requestAnimationFrame(\n\t\t\t\t\tthis.animate.bind(this),\n\t\t\t\t);\n\t\t}\n\n\t\tprotected abstract render(\n\t\t\tnT: number,\n\t\t\tproperties?: AnimatedElementRenderProperties,\n\t\t): void;\n\n\t\tpublic getUnderlyingValue(): number {\n\t\t\treturn 0.0;\n\t\t}\n\t}\n\treturn SlideChangeBase;\n}\n\n// classes passed to SlideChangeTemplate must have the same number and types of ctor parameters\n// expected by SlideChangeBase, so we define the following wrapper class\nabstract class TextureRendererCtorForSlideChangeBase extends SimpleTextureRenderer {\n\tconstructor(transitionParameters: TransitionParameters) {\n\t\tsuper(\n\t\t\ttransitionParameters.context as RenderContextGl,\n\t\t\t/*create program*/ false,\n\t\t);\n\t}\n}\n\n// SlideChangeGl extends SlideChangeBase, SimpleTextureRenderer\nconst SlideChangeGl = SlideChangeTemplate(\n\tTextureRendererCtorForSlideChangeBase,\n);\n"]}