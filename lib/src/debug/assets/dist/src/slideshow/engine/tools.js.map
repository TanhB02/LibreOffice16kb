{"version":3,"file":"tools.js","sourceRoot":"","sources":["../../../../../../../../../../../TanhX/online/browser/src/slideshow/engine/tools.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-strict-ignore\n/* -*- tab-width: 4 -*- */\n/*\n * Copyright the Collabora Online contributors.\n *\n * SPDX-License-Identifier: MPL-2.0\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\ndeclare var SlideShow: any;\n\ntype AGConstructor<T> = abstract new (...args: any[]) => T;\n\ntype Handler0 = () => void;\ntype Handler1 = (x: any) => void;\n\ntype RGBAArray = [number, number, number, number];\n\nfunction assert(object: any, message: string) {\n\tif (!object) {\n\t\twindow.app.console.trace();\n\t\tthrow new Error(message);\n\t}\n}\n\nfunction getCurrentSystemTime() {\n\treturn performance.now();\n}\n\n// Remove any whitespace inside a string\nfunction removeWhiteSpaces(str: string) {\n\tif (!str) return '';\n\n\tconst re = / */;\n\tconst aSplitString = str.split(re);\n\treturn aSplitString.join('');\n}\n\nfunction clampN(nValue: number, nMinimum: number, nMaximum: number) {\n\treturn Math.min(Math.max(nValue, nMinimum), nMaximum);\n}\n\nfunction hasValue(x: any): boolean {\n\treturn x !== undefined && x !== null;\n}\n\nfunction booleanParser(sValue: string) {\n\tsValue = sValue.toLowerCase();\n\treturn sValue === 'true';\n}\n\nfunction colorParser(sValue: string): RGBColor | HSLColor {\n\t// The following 3 color functions are used in evaluating sValue string\n\t// so don't remove them.\n\t/* eslint-disable no-unused-vars */\n\tfunction hsl(\n\t\tnHue: number,\n\t\tnSaturation: number,\n\t\tnLuminance: number,\n\t): HSLColor {\n\t\treturn new HSLColor(nHue, nSaturation / 100, nLuminance / 100);\n\t}\n\n\tfunction rgb(nRed: number, nGreen: number, nBlue: number): RGBColor {\n\t\treturn new RGBColor(nRed / 255, nGreen / 255, nBlue / 255);\n\t}\n\n\tfunction prgb(nRed: number, nGreen: number, nBlue: number): RGBColor {\n\t\treturn new RGBColor(nRed / 100, nGreen / 100, nBlue / 100);\n\t}\n\t/* eslint-enable no-unused-vars */\n\n\tconst sCommaPattern = ' *[,] *';\n\tconst sNumberPattern = '[+-]?[0-9]+[.]?[0-9]*';\n\tconst sHexDigitPattern = '[0-9A-Fa-f]';\n\n\tconst sHexColorPattern =\n\t\t'#(' +\n\t\tsHexDigitPattern +\n\t\t'{2})(' +\n\t\tsHexDigitPattern +\n\t\t'{2})(' +\n\t\tsHexDigitPattern +\n\t\t'{2})';\n\n\tconst sRGBIntegerPattern =\n\t\t'rgb[(] *' +\n\t\tsNumberPattern +\n\t\tsCommaPattern +\n\t\tsNumberPattern +\n\t\tsCommaPattern +\n\t\tsNumberPattern +\n\t\t' *[)]';\n\n\tconst sRGBPercentPattern =\n\t\t'rgb[(] *' +\n\t\tsNumberPattern +\n\t\t'%' +\n\t\tsCommaPattern +\n\t\tsNumberPattern +\n\t\t'%' +\n\t\tsCommaPattern +\n\t\tsNumberPattern +\n\t\t'%' +\n\t\t' *[)]';\n\n\tconst sHSLPercentPattern =\n\t\t'hsl[(] *' +\n\t\tsNumberPattern +\n\t\tsCommaPattern +\n\t\tsNumberPattern +\n\t\t'%' +\n\t\tsCommaPattern +\n\t\tsNumberPattern +\n\t\t'%' +\n\t\t' *[)]';\n\n\tconst reHexColor = new RegExp(sHexColorPattern);\n\tconst reRGBInteger = new RegExp(sRGBIntegerPattern);\n\tconst reRGBPercent = new RegExp(sRGBPercentPattern);\n\tconst reHSLPercent = new RegExp(sHSLPercentPattern);\n\n\tif (reHexColor.test(sValue)) {\n\t\tconst aRGBTriple = reHexColor.exec(sValue);\n\n\t\tconst nRed = parseInt(aRGBTriple[1], 16) / 255;\n\t\tconst nGreen = parseInt(aRGBTriple[2], 16) / 255;\n\t\tconst nBlue = parseInt(aRGBTriple[3], 16) / 255;\n\n\t\treturn new RGBColor(nRed, nGreen, nBlue);\n\t} else if (reHSLPercent.test(sValue)) {\n\t\tsValue = sValue.replace(/%/g, '');\n\t\treturn eval(sValue);\n\t} else if (reRGBInteger.test(sValue)) {\n\t\treturn eval(sValue);\n\t} else if (reRGBPercent.test(sValue)) {\n\t\tsValue = 'p' + sValue.replace(/%/g, '');\n\t\treturn eval(sValue);\n\t} else {\n\t\treturn null;\n\t}\n}\n\nclass RGBColor {\n\tprivate readonly eColorSpace = ColorSpace.rgb;\n\tprivate nRed: number;\n\tprivate nGreen: number;\n\tprivate nBlue: number;\n\n\tconstructor(nRed: number, nGreen: number, nBlue: number) {\n\t\t// values in the [0,1] range\n\t\tthis.nRed = nRed;\n\t\tthis.nGreen = nGreen;\n\t\tthis.nBlue = nBlue;\n\t}\n\n\tclone(): RGBColor {\n\t\treturn new RGBColor(this.nRed, this.nGreen, this.nBlue);\n\t}\n\n\tequal(aRGBColor: RGBColor): boolean {\n\t\treturn (\n\t\t\tthis.nRed == aRGBColor.nRed &&\n\t\t\tthis.nGreen == aRGBColor.nGreen &&\n\t\t\tthis.nBlue == aRGBColor.nBlue\n\t\t);\n\t}\n\n\tadd(aRGBColor: RGBColor): RGBColor {\n\t\tthis.nRed += aRGBColor.nRed;\n\t\tthis.nGreen += aRGBColor.nGreen;\n\t\tthis.nBlue += aRGBColor.nBlue;\n\t\treturn this;\n\t}\n\n\tscale(aT: number): RGBColor {\n\t\tthis.nRed *= aT;\n\t\tthis.nGreen *= aT;\n\t\tthis.nBlue *= aT;\n\t\treturn this;\n\t}\n\n\tstatic clamp(aRGBColor: RGBColor): RGBColor {\n\t\tconst aClampedRGBColor = new RGBColor(0, 0, 0);\n\n\t\taClampedRGBColor.nRed = clampN(aRGBColor.nRed, 0.0, 1.0);\n\t\taClampedRGBColor.nGreen = clampN(aRGBColor.nGreen, 0.0, 1.0);\n\t\taClampedRGBColor.nBlue = clampN(aRGBColor.nBlue, 0.0, 1.0);\n\n\t\treturn aClampedRGBColor;\n\t}\n\n\tconvertToHSL(): HSLColor {\n\t\tconst nRed = clampN(this.nRed, 0.0, 1.0);\n\t\tconst nGreen = clampN(this.nGreen, 0.0, 1.0);\n\t\tconst nBlue = clampN(this.nBlue, 0.0, 1.0);\n\n\t\tconst nMax = Math.max(nRed, nGreen, nBlue);\n\t\tconst nMin = Math.min(nRed, nGreen, nBlue);\n\t\tconst nDelta = nMax - nMin;\n\n\t\tconst nLuminance = (nMax + nMin) / 2.0;\n\t\tlet nSaturation = 0.0;\n\t\tlet nHue = 0.0;\n\t\tif (nDelta !== 0) {\n\t\t\tnSaturation =\n\t\t\t\tnLuminance > 0.5\n\t\t\t\t\t? nDelta / (2.0 - nMax - nMin)\n\t\t\t\t\t: nDelta / (nMax + nMin);\n\n\t\t\tif (nRed == nMax) nHue = (nGreen - nBlue) / nDelta;\n\t\t\telse if (nGreen == nMax) nHue = 2.0 + (nBlue - nRed) / nDelta;\n\t\t\telse if (nBlue == nMax) nHue = 4.0 + (nRed - nGreen) / nDelta;\n\n\t\t\tnHue *= 60.0;\n\n\t\t\tif (nHue < 0.0) nHue += 360.0;\n\t\t}\n\n\t\treturn new HSLColor(nHue, nSaturation, nLuminance);\n\t}\n\n\ttoFloat32Array() {\n\t\tconst aRGBColor = RGBColor.clamp(this);\n\t\treturn new Float32Array([\n\t\t\taRGBColor.nRed,\n\t\t\taRGBColor.nGreen,\n\t\t\taRGBColor.nBlue,\n\t\t\t1.0,\n\t\t]);\n\t}\n\n\ttoString(bClamped: boolean = false): string {\n\t\tlet aRGBColor;\n\t\tif (bClamped) {\n\t\t\taRGBColor = RGBColor.clamp(this);\n\t\t} else {\n\t\t\taRGBColor = this;\n\t\t}\n\n\t\tconst nRed = Math.round(aRGBColor.nRed * 255);\n\t\tconst nGreen = Math.round(aRGBColor.nGreen * 255);\n\t\tconst nBlue = Math.round(aRGBColor.nBlue * 255);\n\n\t\treturn 'rgb(' + nRed + ',' + nGreen + ',' + nBlue + ')';\n\t}\n\n\tstatic interpolate(\n\t\taStartRGB: RGBColor,\n\t\taEndRGB: RGBColor,\n\t\tnT: number,\n\t): RGBColor {\n\t\tconst aResult = aStartRGB.clone();\n\t\tconst aTEndRGB = aEndRGB.clone();\n\t\taResult.scale(1.0 - nT);\n\t\taTEndRGB.scale(nT);\n\t\taResult.add(aTEndRGB);\n\n\t\treturn aResult;\n\t}\n}\n\nclass HSLColor {\n\tprivate readonly eColorSpace = ColorSpace.hsl;\n\tprivate nHue: number;\n\tprivate nSaturation: number;\n\tprivate nLuminance: number;\n\n\tconstructor(nHue: number, nSaturation: number, nLuminance: number) {\n\t\t// Hue is in the [0,360[ range, Saturation and Luminance are in the [0,1] range\n\t\tthis.nHue = nHue;\n\t\tthis.nSaturation = nSaturation;\n\t\tthis.nLuminance = nLuminance;\n\n\t\tthis.normalizeHue();\n\t}\n\n\tclone() {\n\t\treturn new HSLColor(this.nHue, this.nSaturation, this.nLuminance);\n\t}\n\n\tequal(aHSLColor: HSLColor): boolean {\n\t\treturn (\n\t\t\tthis.nHue == aHSLColor.nHue &&\n\t\t\tthis.nSaturation == aHSLColor.nSaturation &&\n\t\t\tthis.nLuminance == aHSLColor.nLuminance\n\t\t);\n\t}\n\n\tadd(aHSLColor: HSLColor): HSLColor {\n\t\tthis.nHue += aHSLColor.nHue;\n\t\tthis.nSaturation += aHSLColor.nSaturation;\n\t\tthis.nLuminance += aHSLColor.nLuminance;\n\t\tthis.normalizeHue();\n\t\treturn this;\n\t}\n\n\tscale(aT: number): HSLColor {\n\t\tthis.nHue *= aT;\n\t\tthis.nSaturation *= aT;\n\t\tthis.nLuminance *= aT;\n\t\tthis.normalizeHue();\n\t\treturn this;\n\t}\n\n\tstatic clamp(aHSLColor: HSLColor): HSLColor {\n\t\tconst aClampedHSLColor = new HSLColor(0, 0, 0);\n\n\t\taClampedHSLColor.nHue = aHSLColor.nHue % 360;\n\t\tif (aClampedHSLColor.nHue < 0) aClampedHSLColor.nHue += 360;\n\t\taClampedHSLColor.nSaturation = clampN(aHSLColor.nSaturation, 0.0, 1.0);\n\t\taClampedHSLColor.nLuminance = clampN(aHSLColor.nLuminance, 0.0, 1.0);\n\t\treturn aClampedHSLColor;\n\t}\n\n\tprivate normalizeHue() {\n\t\tthis.nHue = this.nHue % 360;\n\t\tif (this.nHue < 0) this.nHue += 360;\n\t}\n\n\ttoString(): string {\n\t\treturn (\n\t\t\t'hsl(' +\n\t\t\tthis.nHue.toFixed(3) +\n\t\t\t',' +\n\t\t\tthis.nSaturation.toFixed(3) +\n\t\t\t',' +\n\t\t\tthis.nLuminance.toFixed(3) +\n\t\t\t')'\n\t\t);\n\t}\n\n\tconvertToRGB(): RGBColor {\n\t\tlet nHue = this.nHue % 360;\n\t\tif (nHue < 0) nHue += 360;\n\t\tconst nSaturation = clampN(this.nSaturation, 0.0, 1.0);\n\t\tconst nLuminance = clampN(this.nLuminance, 0.0, 1.0);\n\n\t\tif (nSaturation === 0) {\n\t\t\treturn new RGBColor(nLuminance, nLuminance, nLuminance);\n\t\t}\n\n\t\tconst nVal1 =\n\t\t\tnLuminance <= 0.5\n\t\t\t\t? nLuminance * (1.0 + nSaturation)\n\t\t\t\t: nLuminance + nSaturation - nLuminance * nSaturation;\n\n\t\tconst nVal2 = 2.0 * nLuminance - nVal1;\n\n\t\tconst nRed = HSLColor.hsl2rgbHelper(nVal2, nVal1, nHue + 120);\n\t\tconst nGreen = HSLColor.hsl2rgbHelper(nVal2, nVal1, nHue);\n\t\tconst nBlue = HSLColor.hsl2rgbHelper(nVal2, nVal1, nHue - 120);\n\n\t\treturn new RGBColor(nRed, nGreen, nBlue);\n\t}\n\n\tprivate static hsl2rgbHelper(\n\t\tnValue1: number,\n\t\tnValue2: number,\n\t\tnHue: number,\n\t): number {\n\t\tnHue = nHue % 360;\n\t\tif (nHue < 0) nHue += 360;\n\n\t\tif (nHue < 60.0) return nValue1 + ((nValue2 - nValue1) * nHue) / 60.0;\n\t\telse if (nHue < 180.0) return nValue2;\n\t\telse if (nHue < 240.0)\n\t\t\treturn nValue1 + ((nValue2 - nValue1) * (240.0 - nHue)) / 60.0;\n\t\telse return nValue1;\n\t}\n\n\tstatic interpolate(\n\t\taFrom: HSLColor,\n\t\taTo: HSLColor,\n\t\tnT: number,\n\t\tbCCW: boolean,\n\t): HSLColor {\n\t\tconst nS = 1.0 - nT;\n\n\t\tlet nHue = 0.0;\n\t\tif (aFrom.nHue <= aTo.nHue && !bCCW) {\n\t\t\t// interpolate hue clockwise. That is, hue starts at\n\t\t\t// high values and ends at low ones. Therefore, we\n\t\t\t// must 'cross' the 360 degrees and start at low\n\t\t\t// values again (imagine the hues to lie on the\n\t\t\t// circle, where values above 360 degrees are mapped\n\t\t\t// back to [0,360)).\n\t\t\tnHue = nS * (aFrom.nHue + 360.0) + nT * aTo.nHue;\n\t\t} else if (aFrom.nHue > aTo.nHue && bCCW) {\n\t\t\t// interpolate hue counter-clockwise. That is, hue\n\t\t\t// starts at high values and ends at low\n\t\t\t// ones. Therefore, we must 'cross' the 360 degrees\n\t\t\t// and start at low values again (imagine the hues to\n\t\t\t// lie on the circle, where values above 360 degrees\n\t\t\t// are mapped back to [0,360)).\n\t\t\tnHue = nS * aFrom.nHue + nT * (aTo.nHue + 360.0);\n\t\t} else {\n\t\t\t// interpolate hue counter-clockwise. That is, hue\n\t\t\t// starts at low values and ends at high ones (imagine\n\t\t\t// the hue value as degrees on a circle, with\n\t\t\t// increasing values going counter-clockwise)\n\t\t\tnHue = nS * aFrom.nHue + nT * aTo.nHue;\n\t\t}\n\n\t\tconst nSaturation = nS * aFrom.nSaturation + nT * aTo.nSaturation;\n\t\tconst nLuminance = nS * aFrom.nLuminance + nT * aTo.nLuminance;\n\n\t\treturn new HSLColor(nHue, nSaturation, nLuminance);\n\t}\n}\n\n// makeScaler is used in aPropertyGetterSetterMap:\n// eslint-disable-next-line no-unused-vars\nfunction makeScaler(nScale: number) {\n\tif (typeof nScale !== typeof 0 || !isFinite(nScale)) {\n\t\twindow.app.console.log('makeScaler: not valid param passed: ' + nScale);\n\t\treturn null;\n\t}\n\n\treturn function (nValue: number) {\n\t\treturn nScale * nValue;\n\t};\n}\n\nfunction getRectCenter(rect: DOMRect) {\n\tconst cx = rect.x + rect.width / 2;\n\tconst cy = rect.y + rect.height / 2;\n\treturn { x: cx, y: cy };\n}\n\nfunction convert(convFactor: { x: number; y: number }, rect: DOMRect): DOMRect {\n\tconst x1 = Math.floor(rect.x * convFactor.x);\n\tconst y1 = Math.floor(rect.y * convFactor.y);\n\tconst x2 = Math.ceil((rect.x + rect.width) * convFactor.x);\n\tconst y2 = Math.ceil((rect.y + rect.height) * convFactor.y);\n\n\treturn new DOMRect(x1, y1, x2 - x1 + 1, y2 - y1 + 1);\n}\n\nclass PriorityQueue {\n\tprivate aSequence: any[];\n\tprivate aCompareFunc: (a: any, b: any) => number;\n\n\tconstructor(aCompareFunc: (a: any, b: any) => number) {\n\t\tthis.aSequence = [];\n\t\tthis.aCompareFunc = aCompareFunc;\n\t}\n\n\tclone() {\n\t\tconst aCopy = new PriorityQueue(this.aCompareFunc);\n\t\tconst src = this.aSequence;\n\t\tconst dest = [];\n\t\tfor (let i = 0, l = src.length; i < l; ++i) {\n\t\t\tif (i in src) {\n\t\t\t\tdest.push(src[i]);\n\t\t\t}\n\t\t}\n\t\taCopy.aSequence = dest;\n\t\treturn aCopy;\n\t}\n\n\ttop() {\n\t\treturn this.aSequence[this.aSequence.length - 1];\n\t}\n\n\tisEmpty() {\n\t\treturn this.aSequence.length === 0;\n\t}\n\n\tpush(aValue: any) {\n\t\tthis.aSequence.unshift(aValue);\n\t\tthis.aSequence.sort(this.aCompareFunc);\n\t}\n\n\tclear() {\n\t\tthis.aSequence = [];\n\t}\n\n\tpop() {\n\t\treturn this.aSequence.pop();\n\t}\n}\n\nnamespace GlHelpers {\n\texport const nearestPointOnSegment = `\n\t\tfloat nearestPointOnSegment(vec4 CF, vec4 CT, vec4 C) {\n\n\t\t\t// Compute the vector along the segment (CT - CF)\n\t\t\tvec4 segment = CT - CF;\n\n\t\t\t// Compute the vector from the endpoint CF to the point C\n\t\t\tvec4 toC = C - CF;\n\n\t\t\tfloat length2 = dot(segment, segment);\n\n\t\t\t// Project C onto the segment, finding the scalar 't'\n\t\t\tfloat t = dot(toC, segment) / length2;\n\n\t\t\t// Clamp 't' to [0, 1] range to ensure the nearest point lies on the segment\n\t\t\tt = clamp(t, 0.0, 1.0);\n\t\t\treturn t;\n\t\t}\n`;\n\n\texport const computeColor = `\n\t\tvec4 computeColor(vec4 color) {\n\t\t\tif (fromLineColor != toLineColor || fromFillColor != toFillColor) {\n\t\t\t\tvec4 colorSegment = fromFillColor - fromLineColor;\n\t\t\t\tfloat length2 = dot(colorSegment, colorSegment);\n\t\t\t\tif (length2 < 1e-6) {\n\t\t\t\t \treturn toFillColor;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfloat t = nearestPointOnSegment(fromLineColor, fromFillColor, color);\n\t\t\t\t\tvec4 fromColor = fromLineColor + t * colorSegment;\n\t\t\t\t\tvec4 toColor = toLineColor + t * (toFillColor - toLineColor);\n\t\t\t\t\treturn mix(color, toColor, float(distance(color, fromColor) < 0.01));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn color;\n\t\t}\n`;\n}\n\n/** class PriorityEntry\n *  It provides an entry type for priority queues.\n *  Higher is the value of nPriority higher is the priority of the created entry.\n *\n *  @param aValue\n *      The object to be prioritized.\n *  @param nPriority\n *      An integral number representing the object priority.*\n */\nclass PriorityEntry {\n\tpublic aValue: any;\n\tprivate nPriority: number;\n\n\tconstructor(aValue: any, nPriority: number) {\n\t\tthis.aValue = aValue;\n\t\tthis.nPriority = nPriority;\n\t}\n\n\t/** PriorityEntry.compare\n\t *  Compare priority of two entries.\n\t *\n\t *  @param aLhsEntry\n\t *      An instance of type PriorityEntry.\n\t *  @param aRhsEntry\n\t *      An instance of type PriorityEntry.\n\t *  @return Integer\n\t *      -1 if the left entry has lower priority of the right entry,\n\t *       1 if the left entry has higher priority of the right entry,\n\t *       0 if the two entry have the same priority\n\t */\n\tstatic compare(aLhsEntry: PriorityEntry, aRhsEntry: PriorityEntry) {\n\t\tif (aLhsEntry.nPriority < aRhsEntry.nPriority) {\n\t\t\treturn -1;\n\t\t} else if (aLhsEntry.nPriority > aRhsEntry.nPriority) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n\nclass DebugPrinter {\n\tprivate bEnabled = false;\n\n\ton() {\n\t\tthis.bEnabled = true;\n\t}\n\n\toff() {\n\t\tthis.bEnabled = false;\n\t}\n\n\tisEnabled() {\n\t\treturn this.bEnabled;\n\t}\n\n\tprint(sMessage: string, nTime?: number) {\n\t\tif (this.isEnabled()) {\n\t\t\tlet sInfo = 'DBG: ' + sMessage;\n\t\t\tif (nTime) sInfo += ' (at: ' + String(nTime / 1000) + 's)';\n\t\t\twindow.app.console.log(sInfo);\n\t\t}\n\t}\n}\n\nconst aGenericDebugPrinter = new DebugPrinter();\naGenericDebugPrinter.on();\n\nconst NAVDBG = new DebugPrinter();\nNAVDBG.on();\n\nconst ANIMDBG = new DebugPrinter();\nANIMDBG.on();\n\nconst aRegisterEventDebugPrinter = new DebugPrinter();\naRegisterEventDebugPrinter.on();\n\nconst aTimerEventQueueDebugPrinter = new DebugPrinter();\naTimerEventQueueDebugPrinter.on();\n\nconst aEventMultiplexerDebugPrinter = new DebugPrinter();\naEventMultiplexerDebugPrinter.on();\n\nconst aNextEffectEventArrayDebugPrinter = new DebugPrinter();\naNextEffectEventArrayDebugPrinter.on();\n\nconst aActivityQueueDebugPrinter = new DebugPrinter();\naActivityQueueDebugPrinter.on();\n\nconst aAnimatedElementDebugPrinter = new DebugPrinter();\naAnimatedElementDebugPrinter.on();\n"]}