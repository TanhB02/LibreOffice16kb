{"version":3,"file":"MetaPresentation.js","sourceRoot":"","sources":["../../../../../../../../../../../TanhX/online/browser/src/slideshow/engine/MetaPresentation.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-strict-ignore\n/* -*- tab-width: 4 -*- */\n\n/*\n * Copyright the Collabora Online contributors.\n *\n * SPDX-License-Identifier: MPL-2.0\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nclass MetaPresentation {\n\tprivate docWidth: number;\n\tprivate docHeight: number;\n\tprivate _numberOfSlides: number;\n\tprivate firstSlideHash: string;\n\tprivate lastSlideHash: string;\n\tprivate _startSlideIndex: number;\n\tprivate metaSlides: Map<string, MetaSlide>;\n\tprivate partHashes: Map<number, string>;\n\tprivate aSlideShowHandler: SlideShowHandler;\n\tprivate slideShowNavigator: SlideShowNavigator;\n\n\tconstructor(\n\t\tinfo: PresentationInfo,\n\t\taSlideShowHandler: SlideShowHandler,\n\t\taSlideShowNavigator: SlideShowNavigator,\n\t) {\n\t\tthis.aSlideShowHandler = aSlideShowHandler;\n\t\tthis.update(info);\n\t\tthis.setNavigator(aSlideShowNavigator);\n\t}\n\n\tsetNavigator(nav: SlideShowNavigator) {\n\t\tthis.slideShowNavigator = nav;\n\n\t\t// We set up a low priority for the invocation of canvas handleClick\n\t\t// in order to make clicks on shapes, that start interactive animation\n\t\t// sequence (on click), have a higher priority.\n\t\tthis.metaSlides.forEach((metaSlide) => {\n\t\t\tif (metaSlide.animationsHandler) {\n\t\t\t\tconst eventMultiplexer = metaSlide.animationsHandler.eventMultiplexer;\n\t\t\t\tif (eventMultiplexer)\n\t\t\t\t\teventMultiplexer.registerMouseClickHandler(\n\t\t\t\t\t\tthis.slideShowNavigator.canvasClickHandler,\n\t\t\t\t\t\t100,\n\t\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic get slideShowHandler(): SlideShowHandler {\n\t\treturn this.aSlideShowHandler;\n\t}\n\n\tpublic get startSlideIndex(): number {\n\t\treturn this._startSlideIndex;\n\t}\n\n\tpublic update(info: PresentationInfo) {\n\t\tthis.docWidth = info.docWidth;\n\t\tthis.docHeight = info.docHeight;\n\n\t\tconst aContext = this.aSlideShowHandler.getContext();\n\t\taContext.nSlideWidth = this.docWidth;\n\t\taContext.nSlideHeight = this.docHeight;\n\n\t\tthis._numberOfSlides = info.slides.length;\n\t\tif (this._numberOfSlides === 0) return;\n\n\t\tthis.firstSlideHash = info.slides[0].hash;\n\t\tthis.lastSlideHash = info.slides[this._numberOfSlides - 1].hash;\n\n\t\tthis.metaSlides = new Map();\n\t\tthis.partHashes = new Map();\n\t\tlet prevSlideHash = null;\n\t\tfor (let i = 0; i < this._numberOfSlides; ++i) {\n\t\t\tconst slide = info.slides[i];\n\t\t\tslide.indexInSlideShow = i;\n\t\t\tslide.prev = prevSlideHash;\n\t\t\tslide.next =\n\t\t\t\ti + 1 < this._numberOfSlides ? info.slides[i + 1].hash : null;\n\t\t\tconst metaSlide = new MetaSlide(slide, this);\n\t\t\tthis.metaSlides.set(slide.hash, metaSlide);\n\t\t\tthis.partHashes.set(slide.index, slide.hash);\n\t\t\tprevSlideHash = slide.hash;\n\t\t}\n\t}\n\n\tpublic isEmpty(): boolean {\n\t\treturn this._numberOfSlides === 0;\n\t}\n\n\tpublic get numberOfSlides(): number {\n\t\treturn this._numberOfSlides;\n\t}\n\n\tpublic get slideWidth(): number {\n\t\treturn this.docWidth;\n\t}\n\n\tpublic get slideHeight(): number {\n\t\treturn this.docHeight;\n\t}\n\n\tpublic getCurrentSlideIndex(): number {\n\t\treturn this.slideShowNavigator.currentSlideIndex;\n\t}\n\n\tpublic getCurrentSlideHash(): string {\n\t\treturn this.getSlideHash(this.getCurrentSlideIndex());\n\t}\n\n\tpublic getSlideHash(slideIndex: number) {\n\t\treturn this.partHashes.get(slideIndex);\n\t}\n\n\tpublic isFirstSlide(hash: string) {\n\t\treturn hash === this.firstSlideHash;\n\t}\n\n\tpublic isLastSlide(hash: string) {\n\t\treturn hash === this.lastSlideHash;\n\t}\n\n\tpublic getMetaSlide(slideHash: string): MetaSlide {\n\t\treturn this.metaSlides.get(slideHash);\n\t}\n\n\tpublic getMetaSlideByIndex(slideIndex: number): MetaSlide {\n\t\treturn this.getMetaSlide(this.getSlideHash(slideIndex));\n\t}\n\n\tpublic getSlideInfo(slideHash: string): SlideInfo {\n\t\tconst metaSlide = this.getMetaSlide(slideHash);\n\t\treturn metaSlide ? metaSlide.info : null;\n\t}\n\n\tpublic getSlideInfoByIndex(slideIndex: number): SlideInfo {\n\t\tconst slideHash = this.getSlideHash(slideIndex);\n\t\treturn slideHash ? this.getSlideInfo(slideHash) : null;\n\t}\n\n\tpublic getMetaSlides() {\n\t\treturn this.metaSlides;\n\t}\n\n\tpublic setCurrentSlide(nSlideIndex: number) {\n\t\tif (nSlideIndex >= 0 && nSlideIndex < this.numberOfSlides) {\n\t\t\tconst nCurSlide = this.getCurrentSlideIndex();\n\t\t\tif (nCurSlide !== undefined) this.getMetaSlideByIndex(nCurSlide).hide();\n\t\t\tthis.getMetaSlideByIndex(nCurSlide).show();\n\t\t} else {\n\t\t\twindow.app.console.log(\n\t\t\t\t'MetaPresentation.setCurrentSlide: slide index out of range: ' +\n\t\t\t\t\tnSlideIndex,\n\t\t\t);\n\t\t}\n\t}\n}\n"]}