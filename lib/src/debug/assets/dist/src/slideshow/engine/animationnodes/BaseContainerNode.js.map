{"version":3,"file":"BaseContainerNode.js","sourceRoot":"","sources":["../../../../../../../../../../../../TanhX/online/browser/src/slideshow/engine/animationnodes/BaseContainerNode.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-strict-ignore\n/* -*- tab-width: 4 -*- */\n\n/*\n * Copyright the Collabora Online contributors.\n *\n * SPDX-License-Identifier: MPL-2.0\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nabstract class BaseContainerNode extends BaseNode {\n\tprotected aChildrenArray: Array<BaseNode>;\n\tprotected nFinishedChildren: number;\n\tprivate bDurationIndefinite: boolean;\n\tprivate nLeftIterations: number;\n\tprivate eImpressNodeType: ImpressNodeType;\n\tprotected bIsEffect: boolean = false;\n\n\tprotected constructor(\n\t\taNodeInfo: AnimationNodeInfo,\n\t\taParentNode: BaseContainerNode,\n\t\taNodeContext: NodeContext,\n\t) {\n\t\tsuper(aNodeInfo, aParentNode, aNodeContext);\n\n\t\tthis.sClassName = 'BaseContainerNode';\n\t\tthis.bIsContainer = true;\n\n\t\tthis.aChildrenArray = [];\n\t\tthis.nFinishedChildren = 0;\n\t\tthis.bDurationIndefinite = false;\n\t\tthis.nLeftIterations = 1;\n\n\t\tthis.eImpressNodeType = undefined;\n\t}\n\n\tpublic parseNodeInfo() {\n\t\tsuper.parseNodeInfo();\n\n\t\tconst aNodeInfo: ContainerNodeInfo = this.aNodeInfo;\n\n\t\tif (this.getParentNode() && this.getParentNode().isMainSequenceRootNode()) {\n\t\t\tif (this.getBegin().getEventType() !== EventTrigger.OnNext) {\n\t\t\t\tthis.bIsFirstAutoEffect = true;\n\t\t\t}\n\t\t}\n\n\t\t// nodeType property\n\t\tthis.eImpressNodeType = ImpressNodeType.Default;\n\t\tif (aNodeInfo.nodeType && aNodeInfo.nodeType in ImpressNodeType) {\n\t\t\tconst sImpressNodeType =\n\t\t\t\taNodeInfo.nodeType as keyof typeof ImpressNodeType;\n\t\t\tthis.eImpressNodeType = ImpressNodeType[sImpressNodeType];\n\t\t}\n\t\tthis.bIsMainSequenceRootNode =\n\t\t\tthis.eImpressNodeType === ImpressNodeType.MainSequence;\n\t\tthis.bIsInteractiveSequenceRootNode =\n\t\t\tthis.eImpressNodeType === ImpressNodeType.InteractiveSequence;\n\n\t\tthis.bIsEffect = !!this.aNodeInfo.presetId;\n\n\t\tfor (const childNode of this.aChildrenArray) {\n\t\t\tchildNode.parseNodeInfo();\n\t\t}\n\n\t\t// resolve duration\n\t\tthis.bDurationIndefinite =\n\t\t\t(!this.getDuration() || this.getDuration().isIndefinite()) &&\n\t\t\t(!this.getEnd() || this.getEnd().getType() != TimingType.Offset);\n\t}\n\n\tpublic appendChildNode(aAnimationNode: BaseNode) {\n\t\tif (!this.checkValidNode()) return;\n\n\t\tif (aAnimationNode.registerDeactivatingListener(this))\n\t\t\tthis.aChildrenArray.push(aAnimationNode);\n\t}\n\n\tpublic removeAllChildrenNodes() {\n\t\tthis.aChildrenArray = [];\n\t}\n\n\tprotected init_st() {\n\t\tthis.nLeftIterations = this.getRepeatCount();\n\n\t\treturn this.init_children();\n\t}\n\n\tprotected init_children() {\n\t\tthis.nFinishedChildren = 0;\n\t\tconst nChildrenCount = this.aChildrenArray.length;\n\t\tlet nInitChildren = 0;\n\t\tfor (let i = 0; i < nChildrenCount; ++i) {\n\t\t\tif (this.aChildrenArray[i].init()) {\n\t\t\t\t++nInitChildren;\n\t\t\t}\n\t\t}\n\t\treturn nChildrenCount === nInitChildren;\n\t}\n\n\tprotected deactivate_st(eDestState: NodeState) {\n\t\tthis.nLeftIterations = 0;\n\t\tif (eDestState === NodeState.Frozen) {\n\t\t\t// deactivate all children that are not FROZEN or ENDED:\n\t\t\tthis.forEachChildNode(\n\t\t\t\tBaseNode.prototype.deactivate,\n\t\t\t\t~(NodeState.Frozen | NodeState.Ended),\n\t\t\t);\n\t\t} else {\n\t\t\t// end all children that are not ENDED:\n\t\t\tthis.forEachChildNode(BaseNode.prototype.end, ~NodeState.Ended);\n\t\t\tif (this.getFillMode() === FillModes.Remove) this.removeEffect();\n\t\t}\n\t}\n\n\tpublic hasPendingAnimation() {\n\t\tconst nChildrenCount = this.aChildrenArray.length;\n\t\tfor (let i = 0; i < nChildrenCount; ++i) {\n\t\t\tif (this.aChildrenArray[i].hasPendingAnimation()) return true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected abstract activate_st(): void;\n\n\tpublic abstract notifyDeactivating(aAnimationNode: BaseNode): void;\n\n\tpublic isDurationIndefinite() {\n\t\treturn this.bDurationIndefinite;\n\t}\n\n\tpublic isChildNode(aAnimationNode: BaseNode) {\n\t\tconst nChildrenCount = this.aChildrenArray.length;\n\t\tfor (let i = 0; i < nChildrenCount; ++i) {\n\t\t\tif (this.aChildrenArray[i].getId() == aAnimationNode.getId()) return true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic notifyDeactivatedChild(aChildNode: BaseNode) {\n\t\tassert(\n\t\t\taChildNode.getState() == NodeState.Frozen ||\n\t\t\t\taChildNode.getState() == NodeState.Ended,\n\t\t\t'BaseContainerNode.notifyDeactivatedChild: passed child node is neither in FROZEN nor in ENDED state',\n\t\t);\n\n\t\tassert(\n\t\t\tthis.getState() !== NodeState.Invalid,\n\t\t\t'BaseContainerNode.notifyDeactivatedChild: this node is invalid',\n\t\t);\n\n\t\tif (!this.isChildNode(aChildNode)) {\n\t\t\twindow.app.console.log(\n\t\t\t\t'BaseContainerNode.notifyDeactivatedChild: unknown child notifier!',\n\t\t\t);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst nChildrenCount = this.aChildrenArray.length;\n\n\t\tassert(\n\t\t\tthis.nFinishedChildren < nChildrenCount,\n\t\t\t'BaseContainerNode.notifyDeactivatedChild: assert(this.nFinishedChildren < nChildrenCount) failed',\n\t\t);\n\n\t\t++this.nFinishedChildren;\n\t\tlet bFinished = this.nFinishedChildren >= nChildrenCount;\n\n\t\tif (bFinished && this.isDurationIndefinite()) {\n\t\t\tif (this.nLeftIterations >= 1.0) {\n\t\t\t\tthis.nLeftIterations -= 1.0;\n\t\t\t}\n\t\t\tif (this.nLeftIterations >= 1.0) {\n\t\t\t\tbFinished = false;\n\t\t\t\tconst aRepetitionEvent = makeDelay(this.repeat.bind(this), 0.0);\n\t\t\t\tthis.aContext.aTimerEventQueue.addEvent(aRepetitionEvent);\n\t\t\t} else {\n\t\t\t\tthis.deactivate();\n\t\t\t}\n\t\t}\n\n\t\treturn bFinished;\n\t}\n\n\tpublic repeat() {\n\t\t// end all children that are not ENDED:\n\t\tthis.forEachChildNode(BaseNode.prototype.end, ~NodeState.Ended);\n\t\tthis.removeEffect();\n\t\tconst bInitialized = this.init_children();\n\t\tif (bInitialized) this.activate_st();\n\t\treturn bInitialized;\n\t}\n\n\tpublic removeEffect() {\n\t\tconst nChildrenCount = this.aChildrenArray.length;\n\t\tif (nChildrenCount == 0) return;\n\t\t// We remove effect in reverse order.\n\t\tfor (let i = nChildrenCount - 1; i >= 0; --i) {\n\t\t\tif (\n\t\t\t\t(this.aChildrenArray[i].getState() &\n\t\t\t\t\t(NodeState.Frozen | NodeState.Ended)) ==\n\t\t\t\t0\n\t\t\t) {\n\t\t\t\twindow.app.console.log(\n\t\t\t\t\t'BaseContainerNode.removeEffect: child(id:' +\n\t\t\t\t\t\tthis.aChildrenArray[i].getId() +\n\t\t\t\t\t\t') is neither frozen nor ended;' +\n\t\t\t\t\t\t' state: ' +\n\t\t\t\t\t\tNodeState[this.aChildrenArray[i].getState()],\n\t\t\t\t);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.aChildrenArray[i].removeEffect();\n\t\t}\n\t}\n\n\tpublic saveStateOfAnimatedElement() {\n\t\tconst nChildrenCount = this.aChildrenArray.length;\n\t\tfor (let i = 0; i < nChildrenCount; ++i) {\n\t\t\tthis.aChildrenArray[i].saveStateOfAnimatedElement();\n\t\t}\n\t}\n\n\tpublic forEachChildNode(\n\t\taFunction: (t: BaseNode) => void,\n\t\teNodeStateMask?: number,\n\t) {\n\t\tif (!eNodeStateMask) eNodeStateMask = -1;\n\n\t\tfor (const childNode of this.aChildrenArray) {\n\t\t\tif (eNodeStateMask != -1 && (childNode.getState() & eNodeStateMask) == 0)\n\t\t\t\tcontinue;\n\t\t\taFunction.call(childNode);\n\t\t}\n\t}\n\n\tpublic getImpressNodeType(): ImpressNodeType {\n\t\treturn this.eImpressNodeType;\n\t}\n\n\tpublic dispose() {\n\t\tconst nChildrenCount = this.aChildrenArray.length;\n\t\tfor (let i = 0; i < nChildrenCount; ++i) {\n\t\t\tthis.aChildrenArray[i].dispose();\n\t\t}\n\n\t\tsuper.dispose.call(this);\n\t}\n\n\tpublic info(verbose: boolean): string {\n\t\tlet sInfo = super.info(verbose);\n\n\t\tif (verbose) {\n\t\t\tif (this.getImpressNodeType())\n\t\t\t\tsInfo += `; \\x1B[31mnodeType: ${ImpressNodeType[this.getImpressNodeType()]}\\x1B[m`;\n\t\t}\n\n\t\tfor (const child of this.aChildrenArray) {\n\t\t\tsInfo += '\\n';\n\t\t\tsInfo += child.info(verbose);\n\t\t}\n\t\treturn sInfo;\n\t}\n\n\tisEmpty() {\n\t\treturn this.aChildrenArray.length === 0;\n\t}\n}\n\nclass ParallelTimeContainer extends BaseContainerNode {\n\tconstructor(aNodeInfo: any, aParentNode: any, aNodeContext: any) {\n\t\tsuper(aNodeInfo, aParentNode, aNodeContext);\n\t\tthis.sClassName = 'ParallelTimeContainer';\n\t}\n\n\tprotected activate_st() {\n\t\tconst nChildrenCount = this.aChildrenArray.length;\n\t\tlet nResolvedChildren = 0;\n\t\tfor (let i = 0; i < nChildrenCount; ++i) {\n\t\t\tif (this.aChildrenArray[i].resolve()) {\n\t\t\t\t++nResolvedChildren;\n\t\t\t}\n\t\t}\n\n\t\tif (nChildrenCount != nResolvedChildren) {\n\t\t\twindow.app.console.log(\n\t\t\t\t'ParallelTimeContainer.activate_st: resolving all children failed',\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.isDurationIndefinite() && nChildrenCount == 0) {\n\t\t\tthis.scheduleDeactivationEvent(this.makeDeactivationEvent(0.0));\n\t\t} else {\n\t\t\tthis.scheduleDeactivationEvent();\n\t\t}\n\t}\n\n\tpublic notifyDeactivating(aAnimationNode: BaseNode) {\n\t\tthis.notifyDeactivatedChild(aAnimationNode);\n\t}\n}\n\nclass SequentialTimeContainer extends BaseContainerNode {\n\tprivate bIsRewinding: boolean;\n\tprivate aCurrentSkipEvent: DelayEvent;\n\tprivate aRewindCurrentEffectEvent: DelayEvent;\n\tprivate aRewindLastEffectEvent: DelayEvent;\n\n\tconstructor(aNodeInfo: any, aParentNode: any, aNodeContext: any) {\n\t\tsuper(aNodeInfo, aParentNode, aNodeContext);\n\n\t\tthis.sClassName = 'SequentialTimeContainer';\n\t\tthis.bIsRewinding = false;\n\t\tthis.aCurrentSkipEvent = null;\n\t\tthis.aRewindCurrentEffectEvent = null;\n\t\tthis.aRewindLastEffectEvent = null;\n\t}\n\n\tprotected activate_st() {\n\t\tconst nChildrenCount = this.aChildrenArray.length;\n\t\tfor (; this.nFinishedChildren < nChildrenCount; ++this.nFinishedChildren) {\n\t\t\tif (this.resolveChild(this.aChildrenArray[this.nFinishedChildren])) break;\n\t\t\telse\n\t\t\t\twindow.app.console.log(\n\t\t\t\t\t`SequentialTimeContainer(${this.getId()}).activate_st: resolving child(${this.nFinishedChildren}) failed!`,\n\t\t\t\t);\n\t\t}\n\n\t\tif (\n\t\t\tthis.isDurationIndefinite() &&\n\t\t\t(nChildrenCount == 0 || this.nFinishedChildren >= nChildrenCount)\n\t\t) {\n\t\t\t// deactivate ASAP:\n\t\t\tthis.scheduleDeactivationEvent(this.makeDeactivationEvent(0.0));\n\t\t} else {\n\t\t\tthis.scheduleDeactivationEvent();\n\t\t}\n\t}\n\n\tpublic notifyDeactivating(aNotifier: BaseNode) {\n\t\t// If we are rewinding we have not to resolve the next child.\n\t\tif (this.bIsRewinding) return;\n\n\t\tif (this.notifyDeactivatedChild(aNotifier)) return;\n\n\t\tassert(\n\t\t\tthis.nFinishedChildren < this.aChildrenArray.length,\n\t\t\t'SequentialTimeContainer.notifyDeactivating: assertion (this.nFinishedChildren < this.aChildrenArray.length) failed',\n\t\t);\n\n\t\tconst aNextChild = this.aChildrenArray[this.nFinishedChildren];\n\n\t\tassert(\n\t\t\taNextChild.getState() === NodeState.Unresolved,\n\t\t\t'SequentialTimeContainer.notifyDeactivating: assertion (aNextChild.getState == UNRESOLVED_NODE) failed',\n\t\t);\n\n\t\tif (!this.resolveChild(aNextChild)) {\n\t\t\t// could not resolve child - since we risk to\n\t\t\t// stall the chain of events here, play it safe\n\t\t\t// and deactivate this node (only if we have\n\t\t\t// indefinite duration - otherwise, we'll get a\n\t\t\t// deactivation event, anyways).\n\t\t\tthis.deactivate();\n\t\t}\n\t}\n\n\t/** skipEffect\n\t *  Skip the current playing shape effect.\n\t *  Requires: the current node is the main sequence root node.\n\t *\n\t *  @param aChildNode\n\t *      An animation node representing the root node of the shape effect being\n\t *      played.\n\t */\n\tpublic skipEffect(aChildNode: BaseNode) {\n\t\tif (this.isChildNode(aChildNode)) {\n\t\t\t// First off we end all queued activities.\n\t\t\tthis.getContext().aActivityQueue.endAll();\n\t\t\t// We signal that we are going to skip all subsequent animations by\n\t\t\t// setting the bIsSkipping flag to 'true', then all queued events are\n\t\t\t// fired immediately. In such a way the correct order of the various\n\t\t\t// events that belong to the animation time-line is preserved.\n\t\t\tthis.getContext().bIsSkipping = true;\n\t\t\tthis.getContext().aTimerEventQueue.forceEmpty();\n\t\t\tthis.getContext().bIsSkipping = false;\n\t\t\tconst aEvent = makeEvent(aChildNode.deactivate.bind(aChildNode));\n\t\t\tthis.getContext().aTimerEventQueue.addEvent(aEvent);\n\t\t} else {\n\t\t\twindow.app.console.log(\n\t\t\t\t'SequentialTimeContainer.skipEffect: unknown child: ' +\n\t\t\t\t\taChildNode.getId(),\n\t\t\t);\n\t\t}\n\t}\n\n\t/** rewindCurrentEffect\n\t *  Rewind a playing shape effect.\n\t *  Requires: the current node is the main sequence root node.\n\t *\n\t *  @param aChildNode\n\t *      An animation node representing the root node of the shape effect being\n\t *      played\n\t */\n\tpublic rewindCurrentEffect(aChildNode: BaseNode) {\n\t\tif (this.isChildNode(aChildNode)) {\n\t\t\tassert(\n\t\t\t\t!this.bIsRewinding,\n\t\t\t\t'SequentialTimeContainer.rewindCurrentEffect: is already rewinding.',\n\t\t\t);\n\n\t\t\t// We signal we are rewinding so the notifyDeactivating method returns\n\t\t\t// immediately without increment the finished children counter and\n\t\t\t// resolve the next child.\n\t\t\tthis.bIsRewinding = true;\n\t\t\t// First off we end all queued activities.\n\t\t\tthis.getContext().aActivityQueue.endAll();\n\t\t\t// We signal that we are going to skip all subsequent animations by\n\t\t\t// setting the bIsSkipping flag to 'true', then all queued events are\n\t\t\t// fired immediately. In such a way the correct order of the various\n\t\t\t// events that belong to the animation time-line is preserved.\n\t\t\tthis.getContext().bIsSkipping = true;\n\t\t\tthis.getContext().aTimerEventQueue.forceEmpty();\n\t\t\tthis.getContext().bIsSkipping = false;\n\t\t\t// We end all new activities appended to the activity queue by\n\t\t\t// the fired events.\n\t\t\tthis.getContext().aActivityQueue.endAll();\n\n\t\t\t// Now we perform a final 'end' and restore the animated shape to\n\t\t\t// the state it was before the current effect was applied.\n\t\t\taChildNode.end();\n\t\t\taChildNode.removeEffect();\n\t\t\t// Finally we place the child node to the 'unresolved' state and\n\t\t\t// resolve it again.\n\t\t\taChildNode.init();\n\t\t\tthis.resolveChild(aChildNode);\n\t\t\tthis.notifyRewindedEvent(aChildNode);\n\t\t\tthis.bIsRewinding = false;\n\t\t} else {\n\t\t\twindow.app.console.log(\n\t\t\t\t'SequentialTimeContainer.rewindCurrentEffect: unknown child: ' +\n\t\t\t\t\taChildNode.getId(),\n\t\t\t);\n\t\t}\n\t}\n\n\t/** rewindLastEffect\n\t *  Rewind the last ended effect.\n\t *  Requires: the current node is the main sequence root node.\n\t *\n\t *  @param aChildNode\n\t *      An animation node representing the root node of the next shape effect\n\t *      to be played.\n\t */\n\tpublic rewindLastEffect(aChildNode: BaseNode) {\n\t\tif (this.isChildNode(aChildNode)) {\n\t\t\tassert(\n\t\t\t\t!this.bIsRewinding,\n\t\t\t\t'SequentialTimeContainer.rewindLastEffect: is already rewinding.',\n\t\t\t);\n\n\t\t\t// We signal we are rewinding so the notifyDeactivating method returns\n\t\t\t// immediately without increment the finished children counter and\n\t\t\t// resolve the next child.\n\t\t\tthis.bIsRewinding = true;\n\t\t\t// We end the current effect.\n\t\t\tthis.getContext().aTimerEventQueue.forceEmpty();\n\t\t\tthis.getContext().aActivityQueue.clear();\n\t\t\taChildNode.end();\n\t\t\t// Invoking the end method on the current child node that has not yet\n\t\t\t// been activated should not lead to any change on the animated shape.\n\t\t\t// However for safety we used to call the removeEffect method but\n\t\t\t// lately we noticed that when interactive animation sequences are\n\t\t\t// involved into the shape effect invoking such a method causes\n\t\t\t// some issue.\n\t\t\t//aChildNode.removeEffect();\n\n\t\t\t// As we rewind the previous effect we need to decrease the finished\n\t\t\t// children counter.\n\t\t\t--this.nFinishedChildren;\n\t\t\tconst aPreviousChildNode = this.aChildrenArray[this.nFinishedChildren];\n\t\t\t// No need to invoke the end method for the previous child as it is\n\t\t\t// already in the ENDED state.\n\n\t\t\taPreviousChildNode.removeEffect();\n\t\t\t// We place the child node to the 'unresolved' state.\n\t\t\taPreviousChildNode.init();\n\t\t\t// We need to re-initialize the old current child too, because it is\n\t\t\t// in ENDED state now, On the contrary it cannot be resolved again later.\n\t\t\taChildNode.init();\n\t\t\tthis.resolveChild(aPreviousChildNode);\n\t\t\tthis.notifyRewindedEvent(aChildNode);\n\t\t\tthis.bIsRewinding = false;\n\t\t} else {\n\t\t\twindow.app.console.log(\n\t\t\t\t'SequentialTimeContainer.rewindLastEffect: unknown child: ' +\n\t\t\t\t\taChildNode.getId(),\n\t\t\t);\n\t\t}\n\t}\n\n\t/** resolveChild\n\t *  Resolve the passed child.\n\t *  In case this node is a main sequence root node events for skipping and\n\t *  rewinding the effect related to the passed child node are created and\n\t *  registered.\n\t *\n\t *  @param aChildNode\n\t *      An animation node representing the root node of the next shape effect\n\t *      to be played.\n\t *  @return\n\t *      It returns true if the passed child has been resolved successfully,\n\t *      false otherwise.\n\t */\n\tpublic resolveChild(aChildNode: BaseNode) {\n\t\tconst bResolved = aChildNode.resolve();\n\n\t\tif (\n\t\t\tbResolved &&\n\t\t\t(this.isMainSequenceRootNode() || this.isInteractiveSequenceRootNode())\n\t\t) {\n\t\t\tif (this.aCurrentSkipEvent) this.aCurrentSkipEvent.dispose();\n\t\t\tthis.aCurrentSkipEvent = makeEvent(\n\t\t\t\tthis.skipEffect.bind(this, aChildNode),\n\t\t\t);\n\n\t\t\tif (this.aRewindCurrentEffectEvent)\n\t\t\t\tthis.aRewindCurrentEffectEvent.dispose();\n\t\t\tthis.aRewindCurrentEffectEvent = makeEvent(\n\t\t\t\tthis.rewindCurrentEffect.bind(this, aChildNode),\n\t\t\t);\n\n\t\t\tif (this.aRewindLastEffectEvent) this.aRewindLastEffectEvent.dispose();\n\t\t\tthis.aRewindLastEffectEvent = makeEvent(\n\t\t\t\tthis.rewindLastEffect.bind(this, aChildNode),\n\t\t\t);\n\n\t\t\tif (this.isMainSequenceRootNode()) {\n\t\t\t\tthis.aContext.aEventMultiplexer.registerSkipEffectEvent(\n\t\t\t\t\tthis.aCurrentSkipEvent,\n\t\t\t\t);\n\t\t\t\tthis.aContext.aEventMultiplexer.registerRewindCurrentEffectEvent(\n\t\t\t\t\tthis.aRewindCurrentEffectEvent,\n\t\t\t\t);\n\t\t\t\tthis.aContext.aEventMultiplexer.registerRewindLastEffectEvent(\n\t\t\t\t\tthis.aRewindLastEffectEvent,\n\t\t\t\t);\n\t\t\t} else if (this.isInteractiveSequenceRootNode()) {\n\t\t\t\tthis.aContext.aEventMultiplexer.registerSkipInteractiveEffectEvent(\n\t\t\t\t\taChildNode.getId(),\n\t\t\t\t\tthis.aCurrentSkipEvent,\n\t\t\t\t);\n\t\t\t\tthis.aContext.aEventMultiplexer.registerRewindRunningInteractiveEffectEvent(\n\t\t\t\t\taChildNode.getId(),\n\t\t\t\t\tthis.aRewindCurrentEffectEvent,\n\t\t\t\t);\n\t\t\t\tthis.aContext.aEventMultiplexer.registerRewindEndedInteractiveEffectEvent(\n\t\t\t\t\taChildNode.getId(),\n\t\t\t\t\tthis.aRewindLastEffectEvent,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn bResolved;\n\t}\n\n\tpublic notifyRewindedEvent(aChildNode: BaseNode) {\n\t\tif (this.isInteractiveSequenceRootNode()) {\n\t\t\tthis.aContext.aEventMultiplexer.notifyRewindedEffectEvent(\n\t\t\t\taChildNode.getId(),\n\t\t\t);\n\n\t\t\tconst sId = aChildNode.getBegin().getEventBaseElementId();\n\t\t\tif (sId) {\n\t\t\t\tthis.aContext.aEventMultiplexer.notifyRewindedEffectEvent(sId);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic dispose() {\n\t\tif (this.aCurrentSkipEvent) this.aCurrentSkipEvent.dispose();\n\n\t\tsuper.dispose();\n\t}\n}\n"]}