{"version":3,"file":"ContinuousKeyTimeActivityBase.js","sourceRoot":"","sources":["../../../../../../../../../../../../TanhX/online/browser/src/slideshow/engine/activities/ContinuousKeyTimeActivityBase.ts"],"names":[],"mappings":"AAAA,gCAAgC;;;;;;;;;;;;;;;;AAEhC;;;;;;;;GAQG;AAEH;IAMC,qBAAY,UAAyB;QACpC,WAAW,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAEtC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,gBAAgB,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;QACtD,IAAI,IAAI,CAAC,gBAAgB,IAAI,CAAC;YAAE,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAE9D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,EAAE,CAAC;YACzC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QAEvC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;IACtD,CAAC;IAEa,yBAAa,GAA3B,UAA4B,UAAyB;QACpD,IAAM,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC;QAChC,MAAM,CACL,KAAK,GAAG,CAAC,EACT,0EAA0E,CAC1E,CAAC;QAEF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,EAAE,CAAC,EAAE;YAC/B,IAAI,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;gBACpC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CACrB,0EAA0E,CAC1E,CAAC;SACH;IACF,CAAC;IAEM,2BAAK,GAAZ;QACC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACpE,IAAI,IAAI,CAAC,gBAAgB,IAAI,CAAC;YAAE,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;IAC/D,CAAC;IAEM,0BAAI,GAAX,UAAY,MAAc;QACzB,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,EAAE;YACpD,GAAG;gBACF,IAAM,MAAM,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;gBACnC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBAC3D,IAAI,CAAC,gBAAgB;oBACpB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;wBACtC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACpC,QACA,IAAI,CAAC,gBAAgB,IAAI,CAAC;gBAC1B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,EACtC;SACF;QAED,IAAI,QAAQ,GACX,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAEvE,QAAQ,GAAG,MAAM,CAAC,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAEtC,OAAO;YACN,MAAM,EAAE,IAAI,CAAC,UAAU;YACvB,KAAK,EAAE,QAAQ;SACf,CAAC;IACH,CAAC;IACF,kBAAC;AAAD,CAAC,AAlED,IAkEC;AAED;IAAqD,iDAA4B;IAGhF,uCAAsB,eAAiC;QAAvD,YACC,kBAAM,eAAe,CAAC,SAmBtB;QAjBA,IAAM,KAAK,GAAG,eAAe,CAAC,cAAc,CAAC,MAAM,CAAC;QACpD,MAAM,CACL,KAAK,GAAG,CAAC,EACT,yFAAyF,CACzF,CAAC;QAEF,MAAM,CACL,eAAe,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,GAAG,EACxC,6FAA6F,CAC7F,CAAC;QAEF,MAAM,CACL,eAAe,CAAC,cAAc,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,GAAG,EAChD,4FAA4F,CAC5F,CAAC;QAEF,KAAI,CAAC,OAAO,GAAG,IAAI,WAAW,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;;IAChE,CAAC;IAEM,gDAAQ,GAAf,UAAgB,WAAgB;QAC/B,iBAAM,QAAQ,YAAC,WAAW,CAAC,CAAC;QAE5B,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;IACtB,CAAC;IAQM,qDAAa,GAApB,UAAqB,WAAmB,EAAE,YAAoB;QAC7D,IAAM,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;QAErD,IAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAE9C,IAAI,CAAC,qBAAqB,CACzB,WAAW,CAAC,MAAM,EAClB,WAAW,CAAC,KAAK,EACjB,YAAY,CACZ,CAAC;IACH,CAAC;IACF,oCAAC;AAAD,CAAC,AAhDD,CAAqD,4BAA4B,GAgDhF","sourcesContent":["/* -*- js-indent-level: 8 -*- */\n\n/*\n * Copyright the Collabora Online contributors.\n *\n * SPDX-License-Identifier: MPL-2.0\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nclass KeyStopLerp {\n\tprivate aKeyStopList: Array<number>;\n\tprivate nLastIndex: number;\n\tprivate nKeyStopDistance: number;\n\tprivate nUpperBoundIndex: number;\n\n\tconstructor(aValueList: Array<number>) {\n\t\tKeyStopLerp.validateInput(aValueList);\n\n\t\tthis.aKeyStopList = [];\n\t\tthis.nLastIndex = 0;\n\t\tthis.nKeyStopDistance = aValueList[1] - aValueList[0];\n\t\tif (this.nKeyStopDistance <= 0) this.nKeyStopDistance = 0.001;\n\n\t\tfor (let i = 0; i < aValueList.length; ++i)\n\t\t\tthis.aKeyStopList.push(aValueList[i]);\n\n\t\tthis.nUpperBoundIndex = this.aKeyStopList.length - 2;\n\t}\n\n\tpublic static validateInput(aValueList: Array<number>) {\n\t\tconst nSize = aValueList.length;\n\t\tassert(\n\t\t\tnSize > 1,\n\t\t\t'KeyStopLerp.validateInput: key stop vector must have two entries or more',\n\t\t);\n\n\t\tfor (let i = 1; i < nSize; ++i) {\n\t\t\tif (aValueList[i - 1] > aValueList[i])\n\t\t\t\twindow.app.console.log(\n\t\t\t\t\t'KeyStopLerp.validateInput: time vector is not sorted in ascending order!',\n\t\t\t\t);\n\t\t}\n\t}\n\n\tpublic reset() {\n\t\tKeyStopLerp.validateInput(this.aKeyStopList);\n\t\tthis.nLastIndex = 0;\n\t\tthis.nKeyStopDistance = this.aKeyStopList[1] - this.aKeyStopList[0];\n\t\tif (this.nKeyStopDistance <= 0) this.nKeyStopDistance = 0.001;\n\t}\n\n\tpublic lerp(nAlpha: number) {\n\t\tif (nAlpha > this.aKeyStopList[this.nLastIndex + 1]) {\n\t\t\tdo {\n\t\t\t\tconst nIndex = this.nLastIndex + 1;\n\t\t\t\tthis.nLastIndex = clampN(nIndex, 0, this.nUpperBoundIndex);\n\t\t\t\tthis.nKeyStopDistance =\n\t\t\t\t\tthis.aKeyStopList[this.nLastIndex + 1] -\n\t\t\t\t\tthis.aKeyStopList[this.nLastIndex];\n\t\t\t} while (\n\t\t\t\tthis.nKeyStopDistance <= 0 &&\n\t\t\t\tthis.nLastIndex < this.nUpperBoundIndex\n\t\t\t);\n\t\t}\n\n\t\tlet nRawLerp =\n\t\t\t(nAlpha - this.aKeyStopList[this.nLastIndex]) / this.nKeyStopDistance;\n\n\t\tnRawLerp = clampN(nRawLerp, 0.0, 1.0);\n\n\t\treturn {\n\t\t\tnIndex: this.nLastIndex,\n\t\t\tnLerp: nRawLerp,\n\t\t};\n\t}\n}\n\nabstract class ContinuousKeyTimeActivityBase extends SimpleContinuousActivityBase {\n\tprivate aLerper: KeyStopLerp;\n\n\tprotected constructor(aCommonParamSet: ActivityParamSet) {\n\t\tsuper(aCommonParamSet);\n\n\t\tconst nSize = aCommonParamSet.aDiscreteTimes.length;\n\t\tassert(\n\t\t\tnSize > 1,\n\t\t\t'ContinuousKeyTimeActivityBase constructor: assertion (aDiscreteTimes.length > 1) failed',\n\t\t);\n\n\t\tassert(\n\t\t\taCommonParamSet.aDiscreteTimes[0] == 0.0,\n\t\t\t'ContinuousKeyTimeActivityBase constructor: assertion (aDiscreteTimes.front() == 0.0) failed',\n\t\t);\n\n\t\tassert(\n\t\t\taCommonParamSet.aDiscreteTimes[nSize - 1] <= 1.0,\n\t\t\t'ContinuousKeyTimeActivityBase constructor: assertion (aDiscreteTimes.back() <= 1.0) failed',\n\t\t);\n\n\t\tthis.aLerper = new KeyStopLerp(aCommonParamSet.aDiscreteTimes);\n\t}\n\n\tpublic activate(aEndElement: any) {\n\t\tsuper.activate(aEndElement);\n\n\t\tthis.aLerper.reset();\n\t}\n\n\tpublic abstract performContinuousHook(\n\t\tnIndex: number,\n\t\tnFractionalIndex: number,\n\t\tnRepeatCount: number,\n\t): void;\n\n\tpublic simplePerform(nSimpleTime: number, nRepeatCount: number) {\n\t\tconst nAlpha = this.calcAcceleratedTime(nSimpleTime);\n\n\t\tconst aLerpResult = this.aLerper.lerp(nAlpha);\n\n\t\tthis.performContinuousHook(\n\t\t\taLerpResult.nIndex,\n\t\t\taLerpResult.nLerp,\n\t\t\tnRepeatCount,\n\t\t);\n\t}\n}\n"]}