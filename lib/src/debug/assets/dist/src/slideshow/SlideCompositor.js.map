{"version":3,"file":"SlideCompositor.js","sourceRoot":"","sources":["../../../../../../../../../../TanhX/online/browser/src/slideshow/SlideCompositor.ts"],"names":[],"mappings":"AAAA,oBAAoB;AACpB,gCAAgC;AAkBhC;IAKC,yBAAY,kBAAsC;QAJlD,wBAAmB,GAAuB,IAAI,CAAC;QAC/C,wBAAmB,GAAW,CAAC,CAAC;QAChC,wBAAmB,GAAiB,IAAI,CAAC;QAGxC,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAC;QAC9C,IAAI,CAAC,SAAS,EAAE,CAAC;IAClB,CAAC;IAQM,qCAAW,GAAlB,UAAmB,WAAmB,EAAE,QAAsB;QAC7D,IAAI,CAAC,mBAAmB,GAAG,WAAW,CAAC;QACvC,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC;IACrC,CAAC;IAqCF,sBAAC;AAAD,CAAC,AAxDD,IAwDC;AAED,SAAS,CAAC,eAAe,GAAG,eAAe,CAAC","sourcesContent":["// @ts-strict-ignore\n/* -*- js-indent-level: 8 -*- */\n\n/*\n * Copyright the Collabora Online contributors.\n *\n * SPDX-License-Identifier: MPL-2.0\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n/*\n * SlideCompositor is responsible for slide image generation, which later will be shown on the screen\n */\n\ndeclare var SlideShow: any;\n\nabstract class SlideCompositor {\n\t_slideShowPresenter: SlideShowPresenter = null;\n\t_initialSlideNumber: number = 0;\n\t_onGotSlideCallback: VoidFunction = null;\n\n\tconstructor(slideShowPresenter: SlideShowPresenter) {\n\t\tthis._slideShowPresenter = slideShowPresenter;\n\t\tthis._addHooks();\n\t}\n\n\tprotected abstract _addHooks(): void;\n\n\tpublic abstract removeHooks(): void;\n\n\tpublic abstract onUpdatePresentationInfo(): void;\n\n\tpublic fetchAndRun(slideNumber: number, callback: VoidFunction) {\n\t\tthis._initialSlideNumber = slideNumber;\n\t\tthis._onGotSlideCallback = callback;\n\t}\n\n\tpublic abstract getCanvasSize(): [number, number]; // [width, height]\n\n\tpublic abstract getSlide(slideNumber: number): ImageBitmap;\n\n\tpublic abstract getLayerImage(\n\t\tslideHash: string,\n\t\ttargetElement: string,\n\t): ImageBitmap;\n\n\tpublic abstract getLayerBounds(\n\t\tslideHash: string,\n\t\ttargetElement: string,\n\t): BoundingBoxType;\n\n\tpublic abstract getAnimatedSlide(slideIndex: number): ImageBitmap;\n\n\tpublic abstract getAnimatedLayerInfo(\n\t\tslideHash: string,\n\t\ttargetElement: string,\n\t): AnimatedShapeInfo;\n\n\tpublic abstract getLayerRendererContext(): RenderContext;\n\n\tpublic abstract getVideoRenderer(\n\t\tslideHash: string,\n\t\tvideoInfo: VideoInfo,\n\t): VideoRenderer;\n\n\tpublic abstract deleteResources(): void;\n\n\tpublic abstract pauseVideos(slideHash: string): void;\n\n\tpublic abstract notifyTransitionStart(): void;\n\n\tpublic abstract notifyTransitionEnd(slideHash: string): void;\n}\n\nSlideShow.SlideCompositor = SlideCompositor;\n"]}