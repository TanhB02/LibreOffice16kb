{"version":3,"file":"CanvasOverlay.js","sourceRoot":"","sources":["../../../../../../../../../../../TanhX/online/browser/src/layer/vector/CanvasOverlay.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-strict-ignore\n/* -*- js-indent-level: 8 -*- */\n\n// OverlayTransform is used by CanvasOverlay to apply transformations\n// to points/bounds before drawing is done.\n// The reason why we cannot use canvasRenderingContext2D.transform() is it\n// does not support coordinate values bigger than 2^24 - 1 and if we use it in this\n// regime the renders will be incorrect. At least in Calc it is possible to have pixel\n// coordinates greater than this limit at higher zooms near the bottom of the sheet.\nclass OverlayTransform {\n\tprivate translationAmount: cool.Point;\n\tprivate scaleAmount: cool.Point;\n\n\tconstructor() {\n\t\tthis.translationAmount = new cool.Point(0, 0);\n\t\tthis.scaleAmount = new cool.Point(1, 1);\n\t}\n\n\ttranslate(x: number, y: number) {\n\t\tthis.translationAmount.x = x;\n\t\tthis.translationAmount.y = y;\n\t}\n\n\tscale(sx: number, sy: number) {\n\t\tthis.scaleAmount.x = sx;\n\t\tthis.scaleAmount.y = sy;\n\t}\n\n\treset() {\n\t\tthis.translationAmount.x = 0;\n\t\tthis.translationAmount.y = 0;\n\t\tthis.scaleAmount.x = 1;\n\t\tthis.scaleAmount.y = 1;\n\t}\n\n\tapplyToPoint(point: cool.Point): cool.Point {\n\t\t// 'scale first then translation' model.\n\t\treturn new cool.Point(\n\t\t\tpoint.x * this.scaleAmount.x - this.translationAmount.x,\n\t\t\tpoint.y * this.scaleAmount.y - this.translationAmount.y);\n\t}\n\n\tapplyToBounds(bounds: cool.Bounds): cool.Bounds {\n\t\treturn new cool.Bounds(\n\t\t\tthis.applyToPoint(bounds.min),\n\t\t\tthis.applyToPoint(bounds.max)\n\t\t);\n\t}\n}\n\n// This allows the overlay section to use multiple transformations to be applied\n// one after the other on a point or bounds.\nclass TransformationsList {\n\tprivate list: OverlayTransform[];\n\n\tconstructor() {\n\t\tthis.list = [];\n\t}\n\n\tpublic add(tx: OverlayTransform) {\n\t\tthis.list.push(tx);\n\t}\n\n\tpublic addNew(translate: cool.Point, scale: cool.Point) {\n\t\tconst tx = new OverlayTransform();\n\t\ttx.translate(translate.x, translate.y);\n\t\ttx.scale(scale.x, scale.y);\n\t\tthis.add(tx);\n\t}\n\n\tpublic reset() {\n\t\tthis.list = [];\n\t}\n\n\tapplyToPoint(point: cool.Point): cool.Point {\n\t\tlet tPoint = point.clone();\n\t\tthis.list.forEach((tx) => {\n\t\t\ttPoint = tx.applyToPoint(tPoint);\n\t\t});\n\n\t\treturn tPoint;\n\t}\n\n\tapplyToBounds(bounds: cool.Bounds): cool.Bounds {\n\t\tlet tBounds = bounds.clone();\n\t\tthis.list.forEach((tx) => {\n\t\t\ttBounds = tx.applyToBounds(tBounds);\n\t\t});\n\n\t\treturn tBounds;\n\t}\n}\n\n// CanvasOverlay handles CPath rendering and mouse events handling via overlay-section of the main canvas.\n// where overlays like cell-cursors, cell-selections, edit-cursors are instances of CPath or its subclasses.\nclass CanvasOverlay extends app.definitions.canvasSectionObject {\n\tname: string = L.CSections.Overlays.name;\n\tprocessingOrder: number = L.CSections.Overlays.processingOrder;\n\tdrawingOrder: number = L.CSections.Overlays.drawingOrder;\n\tzIndex: number = L.CSections.Overlays.zIndex;\n\tanchor: string[] = ['top', 'left'];\n\tboundToSection: string = 'tiles';\n\n\tprivate map: any;\n\tprivate ctx: CanvasRenderingContext2D;\n\tprivate paths: Map<number, any>;\n\tprivate bounds: cool.Bounds;\n\tprivate tsManager: any;\n\tprivate transformList: TransformationsList;\n\n\tconstructor(mapObject: any, canvasContext: CanvasRenderingContext2D) {\n\t\tsuper();\n\t\tthis.map = mapObject;\n\t\tthis.ctx = canvasContext;\n\t\tthis.tsManager = this.map.getTileSectionMgr();\n\t\tthis.sectionProperties.docLayer = this.map._docLayer;\n\t\tthis.sectionProperties.tsManager = this.tsManager;\n\t\tthis.paths = new Map<number, CPath>();\n\t\tthis.transformList = new TransformationsList();\n\t\tthis.updateCanvasBounds();\n\t}\n\n\tonInitialize(): void {\n\t\treturn;\n\t}\n\n\tonResize(): void {\n\t\tthis.paths.forEach(function (path: CPath) {\n\t\t\tpath.onResize();\n\t\t});\n\t\tthis.onDraw();\n\t}\n\n\tonDraw(): void {\n\t\t// No need to \"erase\" previous drawings because tiles are draw first via its onDraw.\n\t\tthis.draw();\n\t}\n\n\tonMouseMove(position: Array<number>): void {\n\t\tvar mousePos = new cool.Point(position[0], position[1]);\n\t\tvar overlaySectionBounds = this.bounds.clone();\n\t\tvar splitPos = this.tsManager.getSplitPos();\n\t\tif (this.isCalcRTL()) {\n\t\t\t// Mirror the mouse position in overlay section coordinates.\n\t\t\tmousePos.x = overlaySectionBounds.max.x - overlaySectionBounds.min.x - mousePos.x;\n\t\t}\n\n\t\t// overlay section coordinates -> document coordinates\n\t\tif (mousePos.x > splitPos.x)\n\t\t\tmousePos.x += overlaySectionBounds.min.x;\n\t\tif (mousePos.y > splitPos.y)\n\t\t\tmousePos.y += overlaySectionBounds.min.y;\n\n\t\tthis.paths.forEach(function (path:CPath) {\n\t\t\tvar pathBounds = path.getBounds();\n\n\t\t\tif (!pathBounds.isValid())\n\t\t\t\treturn;\n\n\t\t\tvar mouseOverPath = pathBounds.contains(mousePos);\n\t\t\tif (mouseOverPath && !path.isUnderMouse()) {\n\t\t\t\tpath.onMouseEnter(mousePos);\n\t\t\t\tpath.setUnderMouse(true);\n\t\t\t} else if (!mouseOverPath && path.isUnderMouse()) {\n\t\t\t\tpath.onMouseLeave(mousePos);\n\t\t\t\tpath.setUnderMouse(false);\n\t\t\t}\n\t\t});\n\t}\n\n\tsetPenOnOverlay(): void {\n\t\tthis.containerObject.setPenPosition(this);\n\t}\n\n\tinitPath(path: CPath) {\n\t\tvar pathId: number = path.getId();\n\t\tthis.paths.set(pathId, path);\n\t\tpath.setRenderer(this);\n\t\tthis.setPenOnOverlay();\n\t\tpath.updatePathAllPanes();\n\t}\n\n\tinitPathGroup(pathGroup: CPathGroup) {\n\t\tpathGroup.forEach(function (path: CPath) {\n\t\t\tthis.initPath(path);\n\t\t}.bind(this));\n\t}\n\n\tremovePath(path: CPath) {\n\t\t// This does not get called via onDraw, so ask section container to redraw everything.\n\t\tpath.setDeleted();\n\t\tthis.paths.delete(path.getId());\n\t\tthis.containerObject.requestReDraw();\n\t}\n\n\tremovePathGroup(pathGroup: CPathGroup) {\n\t\tpathGroup.forEach(function (path: CPath) {\n\t\t\tthis.removePath(path);\n\t\t}.bind(this));\n\t}\n\n\tupdatePath(path: CPath, oldBounds: cool.Bounds) {\n\t\tthis.redraw(path, oldBounds);\n\t}\n\n\tupdateStyle(path: CPath, oldBounds: cool.Bounds) {\n\t\tthis.redraw(path, oldBounds);\n\t}\n\n\tpaintRegion(paintArea: cool.Bounds) {\n\t\tthis.draw(paintArea);\n\t}\n\n\tgetSplitPanesContext(): any {\n\t\treturn this.map.getSplitPanesContext();\n\t}\n\n\tprivate isPathVisible(path: CPath): boolean {\n\t\tvar pathBounds = path.getBounds();\n\t\tif (!pathBounds.isValid())\n\t\t\treturn false;\n\t\treturn this.intersectsVisible(pathBounds);\n\t}\n\n\tprivate intersectsVisible(queryBounds: cool.Bounds): boolean {\n\t\tthis.updateCanvasBounds();\n\t\tvar spc = this.getSplitPanesContext();\n\t\treturn spc ? spc.intersectsVisible(queryBounds) : this.bounds.intersects(queryBounds);\n\t}\n\n\tprivate static renderOrderComparator(a: CPath, b: CPath): number {\n\t\tif (a.viewId === -1 && b.viewId === -1) {\n\t\t\t// Both are 'own' / 'self' paths.\n\n\t\t\t// Both paths are part of the same group, use their zindex to break the tie.\n\t\t\tif (a.groupType === b.groupType)\n\t\t\t\treturn a.zIndex - b.zIndex;\n\n\t\t\treturn a.groupType - b.groupType;\n\n\t\t} else if (a.viewId === -1) {\n\t\t\t// a is an 'own' path and b is not => draw a on top of b.\n\t\t\treturn 1;\n\n\t\t} else if (b.viewId === -1) {\n\t\t\t// b is an 'own' path and a is not => draw b on top of a.\n\t\t\treturn -1;\n\n\t\t}\n\n\t\t// Both a and b belong to other views.\n\n\t\tif (a.viewId === b.viewId) {\n\t\t\t// Both belong to the same view.\n\n\t\t\t// Both paths are part of the same group, use their zindex to break the tie.\n\t\t\tif (a.groupType === b.groupType)\n\t\t\t\treturn a.zIndex - b.zIndex;\n\n\t\t\treturn a.groupType - b.groupType;\n\n\t\t}\n\n\t\t// a and b belong to different views.\n\t\treturn a.viewId - b.viewId;\n\t}\n\n\tprivate draw(paintArea?: cool.Bounds) {\n\t\tif (this.tsManager && this.tsManager.waitForTiles()) {\n\t\t\t// don't paint anything till tiles arrive for new zoom.\n\t\t\treturn;\n\t\t}\n\n\t\tvar orderedPaths = Array<CPath>();\n\t\tthis.paths.forEach((path: CPath) => {\n\t\t\torderedPaths.push(path);\n\t\t});\n\n\t\t// Sort them w.r.t. rendering order.\n\t\torderedPaths.sort(CanvasOverlay.renderOrderComparator);\n\n\t\torderedPaths.forEach((path: CPath) => {\n\t\t\tif (this.isPathVisible(path))\n\t\t\t\tpath.updatePathAllPanes(paintArea);\n\t\t}, this);\n\t}\n\n\tprivate redraw(path: CPath, oldBounds: cool.Bounds) {\n\t\tif (this.tsManager && this.tsManager.waitForTiles()) {\n\t\t\t// don't paint anything till tiles arrive for new zoom.\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.isPathVisible(path) && (!oldBounds.isValid() || !this.intersectsVisible(oldBounds)))\n\t\t\treturn;\n\t\t// This does not get called via onDraw(ie, tiles aren't painted), so ask tileSection to \"erase\" by painting over.\n\t\t// Repainting the whole canvas is not necessary but finding the minimum area to paint over\n\t\t// is potentially expensive to compute (think of overlapped path objects).\n\t\t// TODO: We could repaint the area on the canvas occupied by all the visible path-objects\n\t\t// and paint tiles just for that, but need a more general version of _tilesSection.onDraw() and callees.\n\t\tthis.containerObject.requestReDraw();\n\t}\n\n\tprivate updateCanvasBounds() {\n\t\tvar viewBounds: any = this.map.getPixelBoundsCore();\n\t\tthis.bounds = new cool.Bounds(new cool.Point(viewBounds.min.x, viewBounds.min.y), new cool.Point(viewBounds.max.x, viewBounds.max.y));\n\t}\n\n\tgetBounds(): cool.Bounds {\n\t\tthis.updateCanvasBounds();\n\t\treturn this.bounds;\n\t}\n\n\t// Applies canvas translation so that polygons/circles can be drawn using core-pixel coordinates.\n\tprivate ctStart(clipArea?: cool.Bounds, paneBounds?: cool.Bounds, fixed?: boolean, freezePane?: { freezeX: boolean, freezeY: boolean }) {\n\t\tthis.updateCanvasBounds();\n\t\tthis.transformList.reset();\n\t\tthis.ctx.save();\n\n\t\tif (!paneBounds)\n\t\t\tpaneBounds = this.bounds.clone();\n\n\t\tconst transform = new OverlayTransform();\n\n\t\tconst { freezeX, freezeY } = freezePane ?? { freezeX: false, freezeY: false };\n\n\t\tif (this.tsManager._inZoomAnim && !fixed) {\n\t\t\t// zoom-animation is in progress : so draw overlay on main canvas\n\t\t\t// at the current frame's zoom level.\n\n\t\t\tvar splitPos = this.tsManager.getSplitPos();\n\t\t\tvar scale = this.tsManager._zoomFrameScale;\n\n\t\t\tconst docPos = this.tsManager._getZoomDocPos(\n\t\t\t\tthis.tsManager._newCenter,\n\t\t\t\tthis.tsManager._layer._pinchStartCenter,\n\t\t\t\tpaneBounds,\n\t\t\t\t{ freezeX, freezeY },\n\t\t\t\tsplitPos,\n\t\t\t\tscale,\n\t\t\t\tfalse /* findFreePaneCenter? */\n\t\t\t);\n\n\t\t\tconst clipTopLeft = new cool.Point(docPos.topLeft.x, docPos.topLeft.y);\n\n\t\t\t// Original pane size.\n\t\t\tvar paneSize = paneBounds.getSize();\n\t\t\tvar clipSize = paneSize.clone();\n\t\t\tif (!freezeX) {\n\t\t\t\t// Pane's \"free\" size will shrink(expand) as we zoom in(out)\n\t\t\t\t// respectively because fixed pane size expand(shrink).\n\t\t\t\tclipSize.x = (paneSize.x - splitPos.x * (scale - 1)) / scale;\n\n\t\t\t\tdocPos.topLeft.x -= splitPos.x;\n\t\t\t}\n\t\t\tif (!freezeY) {\n\t\t\t\t// See comment regarding pane width above.\n\t\t\t\tclipSize.y = (paneSize.y - splitPos.y * (scale - 1)) / scale;\n\n\t\t\t\tdocPos.topLeft.y -= splitPos.y;\n\t\t\t}\n\t\t\t// Force clip area to the zoom frame area of the pane specified.\n\t\t\tclipArea = new cool.Bounds(\n\t\t\t\tclipTopLeft,\n\t\t\t\tclipTopLeft.add(clipSize));\n\n\t\t\ttransform.scale(scale, scale);\n\t\t\ttransform.translate(scale * docPos.topLeft.x, scale * docPos.topLeft.y);\n\n\t\t} else if (this.tsManager._inZoomAnim && fixed) {\n\n\t\t\tvar scale = this.tsManager._zoomFrameScale;\n\t\t\ttransform.scale(scale, scale);\n\n\t\t\tif (clipArea) {\n\t\t\t\tclipArea = new cool.Bounds(\n\t\t\t\t\tclipArea.min.divideBy(scale),\n\t\t\t\t\tclipArea.max.divideBy(scale)\n\t\t\t\t);\n\t\t\t}\n\n\t\t} else {\n\t\t\ttransform.translate(\n\t\t\t\tpaneBounds.min.x ? this.bounds.min.x : 0,\n\t\t\t\tpaneBounds.min.y ? this.bounds.min.y : 0);\n\t\t}\n\n\t\tthis.transformList.add(transform);\n\t\tif (this.isCalcRTL()) {\n\t\t\tconst sectionWidth = this.size[0];\n\t\t\t// Apply horizontal flip transformation.\n\t\t\tthis.transformList.addNew(new cool.Point(-sectionWidth, 0), new cool.Point(-1, 1));\n\t\t}\n\n\t\tif (clipArea) {\n\t\t\tthis.ctx.beginPath();\n\t\t\tclipArea = this.transformList.applyToBounds(clipArea);\n\t\t\tvar clipSize = clipArea.getSize();\n\t\t\tthis.ctx.rect(clipArea.min.x, clipArea.min.y, clipSize.x, clipSize.y);\n\t\t\tthis.ctx.clip();\n\t\t}\n\t}\n\n\t// Undo the canvas translation done by ctStart().\n\tprivate ctEnd() {\n\t\tthis.ctx.restore();\n\t}\n\n\tupdatePoly(path: CPath, closed: boolean = false, clipArea?: cool.Bounds, paneBounds?: cool.Bounds, freezePane?: { freezeX: boolean, freezeY: boolean }) {\n\t\tvar i: number;\n\t\tvar j: number;\n\t\tvar len2: number;\n\t\tvar part: cool.Point;\n\t\tvar parts = path.getParts();\n\t\tvar len: number = parts.length;\n\n\t\tif (!len)\n\t\t\treturn;\n\n\t\tthis.ctStart(clipArea, paneBounds, path.fixed, freezePane);\n\t\tthis.ctx.beginPath();\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tfor (j = 0, len2 = parts[i].length; j < len2; j++) {\n\t\t\t\tpart = this.transformList.applyToPoint(parts[i][j]);\n\t\t\t\tthis.ctx[j ? 'lineTo' : 'moveTo'](part.x, part.y);\n\t\t\t}\n\t\t\tif (closed) {\n\t\t\t\tthis.ctx.closePath();\n\t\t\t}\n\t\t}\n\n\t\tthis.fillStroke(path);\n\n\t\tthis.ctEnd();\n\t}\n\n\tupdateCircle(path: CPath, clipArea?: cool.Bounds, paneBounds?: cool.Bounds, freezePane?: { freezeX: boolean, freezeY: boolean }) {\n\t\tif (path.empty())\n\t\t\treturn;\n\n\t\tthis.ctStart(clipArea, paneBounds, path.fixed, freezePane);\n\n\t\tvar point = this.transformList.applyToPoint(path.point);\n\t\tvar r: number = path.radius;\n\t\tvar s: number = (path.radiusY || r) / r;\n\n\t\tif (s !== 1) {\n\t\t\tthis.ctx.save();\n\t\t\tthis.ctx.scale(1, s);\n\t\t}\n\n\t\tthis.ctx.beginPath();\n\t\tthis.ctx.arc(point.x, point.y / s, r, 0, Math.PI * 2, false);\n\n\t\tif (s !== 1) {\n\t\t\tthis.ctx.restore();\n\t\t}\n\n\t\tthis.fillStroke(path);\n\n\t\tthis.ctEnd();\n\t}\n\n\tprivate fillStroke(path: CPath) {\n\t\tif (path.fill) {\n\t\t\tthis.ctx.globalAlpha = path.fillOpacity;\n\t\t\tthis.ctx.fillStyle = path.fillColor || path.color;\n\n\t\t\tthis.ctx.fill(path.fillRule || 'evenodd');\n\t\t}\n\n\t\tif (path.stroke && path.weight !== 0) {\n\t\t\tthis.ctx.globalAlpha = path.opacity;\n\n\t\t\tthis.ctx.lineWidth = path.weight;\n\t\t\tthis.ctx.strokeStyle = path.color;\n\t\t\tthis.ctx.lineCap = path.lineCap;\n\t\t\tthis.ctx.lineJoin = path.lineJoin;\n\t\t\tthis.ctx.stroke();\n\t\t}\n\n\t}\n\n\tbringToFront(path: CPath) {\n\t\t// TODO: Implement this.\n\t}\n\n\tbringToBack(path: CPath) {\n\t\t// TODO: Implement this.\n\t}\n\n\tgetMap(): any {\n\t\treturn this.map;\n\t}\n}\n"]}