{"version":3,"file":"CDarkOverlay.js","sourceRoot":"","sources":["../../../../../../../../../../../TanhX/online/browser/src/layer/vector/CDarkOverlay.ts"],"names":[],"mappings":"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","sourcesContent":["/* -*- js-indent-level: 8 -*- */\n\n/*\n * CDarkOverlay is used to render a dark overlay around an OLE object when selected\n */\n\nimport Bounds = cool.Bounds;\n\nclass CDarkOverlay extends CPathGroup {\n\n\tprivate rectangles: CRectangle[] = [];\n\tprivate options: any;\n\n\tconstructor(pointSet: CPointSet, options: any) {\n\t\tsuper([]);\n\t\tthis.options = options;\n\t\tthis.rectangles = this.createRectangles(4);\n\t\tthis.setPointSet(pointSet);\n\t}\n\n\tprivate setPointSet(pointSet: CPointSet) {\n\t\tvar points = pointSet.getPointArray();\n\t\tif (!points) {\n\t\t\tfor (var i = 0; i < this.rectangles.length; i++) {\n\t\t\t\tthis.rectangles[i].setBounds(\n\t\t\t\t\tnew cool.Bounds(new cool.Point(0, 0), new cool.Point(0, 1)));\n\t\t\t\tthis.push(this.rectangles[i]);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tvar rectangleBounds = this.invertOleBounds(new cool.Bounds(points[0], points[2]));\n\n\t\tfor (var i = 0; i < this.rectangles.length; i++) {\n\t\t\tthis.rectangles[i].setBounds(rectangleBounds[i]);\n\t\t\tthis.push(this.rectangles[i]);\n\t\t}\n\t}\n\n\tprivate invertOleBounds(oleBounds: cool.Bounds): cool.Bounds[] {\n\t\tvar rectanglesBounds: cool.Bounds[] = [];\n\n\t\tvar minWidth = 0;\n\t\tvar minHeight = 0;\n\t\tvar fullWidth = 1000000;\n\t\tvar fullHeight = 1000000;\n\n\t\trectanglesBounds.push(new cool.Bounds(new cool.Point(minWidth, minHeight), new cool.Point(fullWidth, oleBounds.min.y)));\n\t\trectanglesBounds.push(new cool.Bounds(new cool.Point(minWidth, oleBounds.min.y), oleBounds.getBottomLeft()));\n\t\trectanglesBounds.push(new cool.Bounds(oleBounds.getTopRight(), new cool.Point(fullWidth, oleBounds.max.y)));\n\t\trectanglesBounds.push(new cool.Bounds(new cool.Point(minWidth, oleBounds.max.y), new cool.Point(fullWidth, fullHeight)));\n\n\t\treturn rectanglesBounds;\n\t}\n\n\tprivate createRectangles(quantity: number): CRectangle[] {\n\t\tvar rectangles: CRectangle[] = [];\n\t\tfor (var i = 0; i < quantity; i++) {\n\t\t\trectangles.push(\n\t\t\t\tnew CRectangle(new cool.Bounds(\n\t\t\t\t\tnew cool.Point(0, 0), new cool.Point(0, 1)\n\t\t\t\t), this.options));\n\t\t}\n\n\t\treturn rectangles;\n\t}\n}\n"]}