{"version":3,"file":"SplitPanesContext.js","sourceRoot":"","sources":["../../../../../../../../../../TanhX/online/browser/src/layer/SplitPanesContext.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-strict-ignore\n/* -*- js-indent-level: 8 -*- */\n/*\n * Copyright the Collabora Online contributors.\n *\n * SPDX-License-Identifier: MPL-2.0\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\ndeclare var L: any;\n\nnamespace cool {\n\nexport type SplitPanesOptions = {\n\tmaxHorizontalSplitPercent: number;\n\tmaxVerticalSplitPercent: number;\n}\n\nexport type PaneStatus = {\n\txFixed: boolean;\n\tyFixed: boolean;\n}\n\n/*\n * SplitPanesContext stores positions/sizes/objects related to split panes.\n */\nexport class SplitPanesContext {\n\n\tprivate static options: SplitPanesOptions = {\n\t\tmaxHorizontalSplitPercent: 70,\n\t\tmaxVerticalSplitPercent: 70,\n\t};\n\n\tprotected _docLayer: any;\n\tprotected _map: any;\n\tprotected _splitPos: Point;\n\n\t// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\tconstructor(docLayer: any) {\n\t\tconsole.assert(docLayer, 'no docLayer!');\n\t\tconsole.assert(docLayer._map, 'no map!');\n\n\t\tthis._docLayer = docLayer;\n\t\tthis._map = docLayer._map;\n\t\tthis._setDefaults();\n\t}\n\n\tprotected _setDefaults(): void {\n\t\tthis._splitPos = new Point(0, 0);\n\t}\n\n\tpublic get options(): SplitPanesOptions {\n\t\treturn SplitPanesContext.options;\n\t}\n\n\tpublic getMaxSplitPosX(): number {\n\t\tconst rawMax = Math.floor(app.sectionContainer.getWidth() * this.options.maxHorizontalSplitPercent / 100);\n\t\treturn this._docLayer.getSnapDocPosX(rawMax);\n\t}\n\n\tpublic getMaxSplitPosY(): number {\n\t\tconst rawMax = Math.floor(app.sectionContainer.getHeight() * this.options.maxVerticalSplitPercent / 100);\n\t\treturn this._docLayer.getSnapDocPosY(rawMax);\n\t}\n\n\tpublic setSplitPos(splitX: number, splitY: number, forceUpdate: boolean = false): void {\n\n\t\tvar xchanged = this.setHorizSplitPos(splitX, forceUpdate, true /* noFire */);\n\t\tvar ychanged = this.setVertSplitPos(splitY, forceUpdate, true /* noFire */);\n\t\tif (xchanged || ychanged) {\n\t\t\tthis._map.fire('splitposchanged');\n\t\t\tconst section = app.sectionContainer.getSectionWithName(L.CSections.Splitter.name);\n\t\t\tif (section) {\n\t\t\t\tsection.setPosition(0, 0); // To refresh myTopLeft property.\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic getSplitPos(): Point {\n\t\treturn this._splitPos.divideBy(app.dpiScale as number);\n\t}\n\n\tpublic justifySplitPos(split: number, isHoriz: boolean): number {\n\t\tif (split <= 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar maxSplitPos = isHoriz ? this.getMaxSplitPosX() : this.getMaxSplitPosY();\n\t\tif (split >= maxSplitPos) {\n\t\t\treturn maxSplitPos;\n\t\t}\n\n\t\treturn isHoriz ? this._docLayer.getSnapDocPosX(split) :\n\t\t\tthis._docLayer.getSnapDocPosY(split);\n\t}\n\n\tpublic setHorizSplitPos(splitX: number, forceUpdate: boolean, noFire: boolean): boolean {\n\n\t\tconsole.assert(typeof splitX === 'number', 'splitX must be a number');\n\n\t\tif (this._splitPos.x === splitX) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar changed = false;\n\t\tvar newX = this.justifySplitPos(splitX, true /* isHoriz */);\n\t\tif (newX !== this._splitPos.x) {\n\t\t\tthis._splitPos.x = newX;\n\t\t\tchanged = true;\n\t\t}\n\n\t\tapp.calc.splitCoordinate.pX = newX;\n\n\t\tif (!noFire)\n\t\t\tthis._map.fire('splitposchanged');\n\n\t\treturn changed;\n\t}\n\n\tpublic setVertSplitPos(splitY: number, forceUpdate: boolean, noFire: boolean): boolean {\n\n\t\tconsole.assert(typeof splitY === 'number', 'splitY must be a number');\n\n\t\tif (this._splitPos.y === splitY) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar changed = false;\n\t\tvar newY = this.justifySplitPos(splitY, false /* isHoriz */);\n\t\tif (newY !== this._splitPos.y) {\n\t\t\tthis._splitPos.y = newY;\n\t\t\tchanged = true;\n\t\t}\n\n\t\tapp.calc.splitCoordinate.pY = newY;\n\n\t\tif (!noFire)\n\t\t\tthis._map.fire('splitposchanged');\n\n\t\treturn changed;\n\t}\n\n\tpublic getPanesProperties(): PaneStatus[] {\n\t\tvar paneStatusList: PaneStatus[] = [];\n\t\tif (this._splitPos.x && this._splitPos.y) {\n\t\t\t// top-left pane\n\t\t\tpaneStatusList.push({\n\t\t\t\txFixed: true,\n\t\t\t\tyFixed: true,\n\t\t\t});\n\t\t}\n\n\t\tif (this._splitPos.y) {\n\t\t\t// top-right pane or top half pane\n\t\t\tpaneStatusList.push({\n\t\t\t\txFixed: false,\n\t\t\t\tyFixed: true,\n\t\t\t});\n\t\t}\n\n\t\tif (this._splitPos.x) {\n\t\t\t// bottom-left pane or left half pane\n\t\t\tpaneStatusList.push({\n\t\t\t\txFixed: true,\n\t\t\t\tyFixed: false,\n\t\t\t});\n\t\t}\n\n\t\t// bottom-right/bottom-half/right-half pane or the full pane (when there are no split-panes active)\n\t\tpaneStatusList.push({\n\t\t\txFixed: false,\n\t\t\tyFixed: false,\n\t\t});\n\n\t\treturn paneStatusList;\n\t}\n\n\t// When view is split by horizontal and/or vertical line(s), there are up to 4 different parts of the file visible on the screen.\n\t// This function returns the viewed parts' coordinates as simple rectangles.\n\tpublic getViewRectangles(): cool.SimpleRectangle[] {\n\t\tconst viewRectangles: cool.SimpleRectangle[] = new Array<cool.SimpleRectangle>();\n\t\tviewRectangles.push(app.file.viewedRectangle.clone()); // If view is not splitted, this will be the only view rectangle.\n\n\t\t/*\n\t\t\t|----------------------------|\n\t\t\t| initial [0]  |  topright   |\n\t\t\t|              |             |\n\t\t\t|--------------|-------------|\n\t\t\t| bottomleft   |  bottomright|\n\t\t\t|              |             |\n\t\t\t|----------------------------|\n\n\t\t*/\n\n\t\tif (this._splitPos.x) { // Vertical split.\n\t\t\t// There is vertical split, narrow down the initial view.\n\t\t\tviewRectangles[0].pX1 = 0;\n\t\t\tviewRectangles[0].pX2 = this._splitPos.x;\n\n\t\t\tconst topRightPane: cool.SimpleRectangle = app.file.viewedRectangle.clone();\n\t\t\tconst width = app.file.viewedRectangle.pWidth - viewRectangles[0].pWidth;\n\t\t\ttopRightPane.pX1 = app.file.viewedRectangle.pX2 - width;\n\t\t\ttopRightPane.pWidth = width;\n\t\t\tviewRectangles.push(topRightPane);\n\t\t}\n\n\t\tif (this._splitPos.y) {\n\t\t\t// There is a horizontal split, narrow down the initial view.\n\t\t\tviewRectangles[0].pY1 = 0;\n\t\t\tviewRectangles[0].pY2 = this._splitPos.y;\n\n\t\t\tconst bottomLeftPane = app.file.viewedRectangle.clone();\n\t\t\tconst height = app.file.viewedRectangle.pHeight - viewRectangles[0].pHeight;\n\t\t\tbottomLeftPane.pY1 = app.file.viewedRectangle.pY2 - height;\n\t\t\tbottomLeftPane.pHeight = height;\n\t\t\tviewRectangles.push(bottomLeftPane);\n\t\t}\n\n\t\t// If both splitters are active, don't let them overlap and add the bottom right pane.\n\t\tif (this._splitPos.x && this._splitPos.y) {\n\t\t\tviewRectangles[1].pY1 = 0;\n\t\t\tviewRectangles[1].pY2 = this._splitPos.y;\n\n\t\t\tviewRectangles[2].pX1 = 0;\n\t\t\tviewRectangles[2].pX2 = this._splitPos.x;\n\n\t\t\tconst bottomRightPane = app.file.viewedRectangle.clone();\n\t\t\tconst width = app.file.viewedRectangle.pWidth - viewRectangles[0].pWidth;\n\t\t\tconst height = app.file.viewedRectangle.pHeight - viewRectangles[0].pHeight;\n\t\t\tbottomRightPane.pX1 = app.file.viewedRectangle.pX2 - width;\n\t\t\tbottomRightPane.pWidth = width;\n\t\t\tbottomRightPane.pY1 = app.file.viewedRectangle.pY2 - height;\n\t\t\tbottomRightPane.pHeight = height;\n\n\t\t\tviewRectangles.push(bottomRightPane);\n\t\t}\n\n\t\treturn viewRectangles;\n\t}\n\n\t// returns all the pane rectangles for the provided full-map area (all in core pixels).\n\tpublic getPxBoundList(pxBounds?: Bounds): Bounds[] {\n\t\tif (!pxBounds) {\n\t\t\tpxBounds = this._map.getPixelBoundsCore() as Bounds;\n\t\t}\n\t\tvar topLeft = pxBounds.getTopLeft();\n\t\tvar bottomRight = pxBounds.getBottomRight();\n\t\tvar boundList: Bounds[] = [];\n\n\t\tif (this._splitPos.x && this._splitPos.y) {\n\t\t\t// top-left pane\n\t\t\tboundList.push(new Bounds(\n\t\t\t\tnew Point(0, 0),\n\t\t\t\tthis._splitPos\n\t\t\t));\n\t\t}\n\n\t\tif (this._splitPos.y) {\n\t\t\t// top-right pane or top half pane\n\t\t\tboundList.push(new Bounds(\n\t\t\t\tnew Point(topLeft.x + this._splitPos.x, 0),\n\t\t\t\tnew Point(bottomRight.x, this._splitPos.y)\n\t\t\t));\n\t\t}\n\n\t\tif (this._splitPos.x) {\n\t\t\t// bottom-left pane or left half pane\n\t\t\tboundList.push(new Bounds(\n\t\t\t\tnew Point(0, topLeft.y + this._splitPos.y),\n\t\t\t\tnew Point(this._splitPos.x, bottomRight.y)\n\t\t\t));\n\t\t}\n\n\t\tif (!boundList.length) {\n\t\t\t// the full pane (when there are no split-panes active)\n\t\t\tboundList.push(new Bounds(\n\t\t\t\ttopLeft,\n\t\t\t\tbottomRight\n\t\t\t));\n\t\t} else {\n\t\t\t// bottom-right/bottom-half/right-half pane\n\t\t\tboundList.push(new Bounds(\n\t\t\t\ttopLeft.add(this._splitPos),\n\t\t\t\tbottomRight\n\t\t\t));\n\t\t}\n\n\t\treturn boundList;\n\t}\n\n\tpublic getTwipsBoundList(pxBounds: Bounds): Bounds[] {\n\t\tvar bounds = this.getPxBoundList(pxBounds);\n\t\tvar docLayer = this._docLayer;\n\t\treturn bounds.map(function (bound) {\n\t\t\treturn new Bounds(\n\t\t\t\tdocLayer._corePixelsToTwips(bound.min) as Point,\n\t\t\t\tdocLayer._corePixelsToTwips(bound.max) as Point\n\t\t\t);\n\t\t});\n\t}\n\n\tpublic intersectsVisible(areaPx: Bounds): boolean {\n\t\tvar pixBounds = this._map.getPixelBoundsCore() as Bounds;\n\t\tvar boundList = this.getPxBoundList(pixBounds);\n\t\tfor (var i = 0; i < boundList.length; ++i) {\n\t\t\tif (areaPx.intersects(boundList[i])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\n}\n\nL.SplitPanesContext = cool.SplitPanesContext;\n"]}