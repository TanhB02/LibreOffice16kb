{"version":3,"file":"CalcSplitPanesContext.js","sourceRoot":"","sources":["../../../../../../../../../../TanhX/online/browser/src/layer/CalcSplitPanesContext.ts"],"names":[],"mappings":"AAAA,oBAAoB;AACpB,gCAAgC;;;;;;;;;;;;;;;;AAchC,IAAU,IAAI,CAqDb;AArDD,WAAU,IAAI;IAEd;QAA2C,yCAAiB;QAA5D;;QAiDA,CAAC;QA5CU,4CAAY,GAAtB;YACC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,EAAY,CAAC;YACxD,IAAI,CAAC,SAAS,GAAG,IAAI,KAAA,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,UAAU,GAAG,IAAI,KAAA,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACnC,CAAC;QAEM,2CAAW,GAAlB,UAAmB,QAAgB;YAClC,OAAO,CAAC,MAAM,CAAC,OAAO,QAAQ,KAAK,QAAQ,EAAE,uBAAuB,CAAC,CAAC;YACtE,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,CAAC;QAEM,2CAAW,GAAlB,UAAmB,QAAgB;YAClC,OAAO,CAAC,MAAM,CAAC,OAAO,QAAQ,KAAK,QAAQ,EAAE,uBAAuB,CAAC,CAAC;YACtE,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,CAAC;QAED,uEAAuE;QAChE,mDAAmB,GAA1B,UAA2B,oBAA6B;YACvD,IAAI,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,OAAO,EAAE,KAAK,IAAI,CAAC,SAAS,CAAC,aAAa;gBAC1E,OAAO;YACR,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;YAErG,0HAA0H;YAC1H,gHAAgH;YAChH,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,oBAAoB,CAAC,CAAC;YAErE,+GAA+G;YAC/G,wCAAwC;YACxC,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC5B,CAAC;QAED,sEAAsE;QAC/D,mDAAmB,GAA1B;YAEC,kEAAkE;YAElE,IAAI,YAAY,GAAI,IAAI,CAAC,SAAS,CAAC,aAA+B,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;YAEhH,0DAA0D;YAC1D,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,sBAAsB,EAAE;gBAC3C,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBAC1G,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,EAAE,KAAK,CAAC,gBAAgB,CAAC,CAAC;aAC1G;QACF,CAAC;QACF,4BAAC;IAAD,CAAC,AAjDD,CAA2C,KAAA,iBAAiB,GAiD3D;IAjDY,0BAAqB,wBAiDjC,CAAA;AAED,CAAC,EArDS,IAAI,KAAJ,IAAI,QAqDb;AAED,CAAC,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC","sourcesContent":["// @ts-strict-ignore\n/* -*- js-indent-level: 8 -*- */\n\n/*\n * Copyright the Collabora Online contributors.\n *\n * SPDX-License-Identifier: MPL-2.0\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\ndeclare var L: any;\n\nnamespace cool {\n\nexport class CalcSplitPanesContext extends SplitPanesContext {\n\n\tprivate _part: number;\n\tprivate _splitCell: Point;\n\n\tprotected _setDefaults(): void {\n\t\tthis._part = this._docLayer.getSelectedPart() as number;\n\t\tthis._splitPos = new Point(0, 0);\n\t\tthis._splitCell = new Point(0, 0);\n\t}\n\n\tpublic setSplitCol(splitCol: number): boolean {\n\t\tconsole.assert(typeof splitCol === 'number', 'invalid argument type');\n\t\treturn this._splitCell.setX(splitCol);\n\t}\n\n\tpublic setSplitRow(splitRow: number): boolean {\n\t\tconsole.assert(typeof splitRow === 'number', 'invalid argument type');\n\t\treturn this._splitCell.setY(splitRow);\n\t}\n\n\t/// Calculates the split position in (core-pixels) from the split-cell.\n\tpublic setSplitPosFromCell(forceSplittersUpdate: boolean): void {\n\t\tif (this._docLayer.sheetGeometry.getPart() !== this._docLayer._selectedPart)\n\t\t\treturn;\n\t\tvar newSplitPos = this._docLayer.sheetGeometry.getCellRect(this._splitCell.x, this._splitCell.y).min;\n\n\t\t// setSplitPos limits the split position based on the screen size and it fires 'splitposchanged' (if there is any change).\n\t\t// setSplitCellFromPos gets invoked on 'splitposchanged' to sync the split-cell with the position change if any.\n\t\tthis.setSplitPos(newSplitPos.x, newSplitPos.y, forceSplittersUpdate);\n\n\t\t// It is possible that the split-position did not change due to screen size limits, so no 'splitposchanged' but\n\t\t// we still need to sync the split-cell.\n\t\tthis.setSplitCellFromPos();\n\t}\n\n\t// Calculates the split-cell from the split position in (core-pixels).\n\tpublic setSplitCellFromPos(): void {\n\n\t\t// This should not call setSplitPosFromCell() directly/indirectly.\n\n\t\tvar newSplitCell = (this._docLayer.sheetGeometry as SheetGeometry).getCellFromPos(this._splitPos, 'corepixels');\n\n\t\t// Send new state via uno commands if there is any change.\n\t\tif (!this._docLayer.dontSendSplitPosToCore) {\n\t\t\tthis.setSplitCol(newSplitCell.x) && this._docLayer.sendSplitIndex(newSplitCell.x, true /*  isSplitCol */);\n\t\t\tthis.setSplitRow(newSplitCell.y) && this._docLayer.sendSplitIndex(newSplitCell.y, false /* isSplitCol */);\n\t\t}\n\t}\n}\n\n}\n\nL.CalcSplitPanesContext = cool.CalcSplitPanesContext;\n"]}