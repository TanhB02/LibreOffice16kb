{"version":3,"file":"CanvasTileWorkerSrc.js","sourceRoot":"","sources":["../../../../../../../../../../../TanhX/online/browser/src/layer/tile/CanvasTileWorkerSrc.js"],"names":[],"mappings":"AAAA,kDAAkD;AAClD;;;;;;;;GAQG;;;;;;;;;;;;AAEH,0CAA0C;AAC1C,oEAAoE;AACpE,qCAAqC;AAErC,IAAI,WAAW,KAAK,OAAO,MAAM,EAAE;IAClC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;IAEZ,aAAa,CAAC,oBAAoB,CAAC,CAAC;IACpC,gBAAgB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;IAEvC,OAAO,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;IAE7C,SAAS,SAAS,CAAC,CAAC;;QACnB,QAAQ,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE;YACvB,KAAK,gBAAgB;gBACpB,IAAI,YAAY,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;gBACzD,IAAI,YAAY,GAAG,EAAE,CAAC;gBACtB,IAAI,OAAO,GAAG,EAAE,CAAC;;oBACjB,KAAiB,IAAA,KAAA,SAAA,CAAC,CAAC,IAAI,CAAC,MAAM,CAAA,gBAAA,4BAAE;wBAA3B,IAAI,IAAI,WAAA;wBACZ,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;wBAClD,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;wBAE3B,iCAAiC;wBACjC,IAAI,IAAI,CAAC,UAAU,EAAE;4BACpB,IAAI,cAAc,GAAG,IAAI,UAAU,CAAC,YAAY,CAAC,CAAC;4BAClD,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,eAAe,CAAC,KAAK,CAC/C,MAAM,EACN,CAAC,CAAC,IAAI,CAAC,QAAQ,EACf,CAAC,CAAC,IAAI,CAAC,QAAQ,EACf,cAAc,CACd,CAAC;4BACF,IAAI,CAAC,cAAc,GAAG,IAAI,iBAAiB,CAC1C,cAAc,CAAC,MAAM,EACrB,cAAc,CAAC,UAAU,EACzB,cAAc,CAAC,UAAU,CACzB,CAAC;4BACF,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;yBACzC;wBAED,4EAA4E;wBAC5E,yEAAyE;wBACzE,IAAI,CAAC,MAAM,GAAG,IAAI,iBAAiB,CAClC,MAAM,CAAC,MAAM,EACb,MAAM,CAAC,UAAU,EACjB,MAAM,CAAC,MAAM,CACb,CAAC;wBAEF,2EAA2E;wBAC3E,8BAA8B;wBAC9B,OAAO,IAAI,CAAC,QAAQ,CAAC;wBAErB,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACxB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;qBACjC;;;;;;;;;gBAED,WAAW,CACV;oBACC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO;oBACvB,MAAM,EAAE,YAAY;oBACpB,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ;iBACzB,EACD,OAAO,CACP,CAAC;gBACF,MAAM;YAEP;gBACC,OAAO,CAAC,KAAK,CAAC,6BAA6B,CAAC,CAAC;SAC9C;IACF,CAAC;CACD","sourcesContent":["/* -*- js-indent-level: 8; fill-column: 100 -*- */\n/*\n * Copyright the Collabora Online contributors.\n *\n * SPDX-License-Identifier: MPL-2.0\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n/* eslint-disable no-inner-declarations */\n/* eslint no-unused-vars: [\"warn\", { \"argsIgnorePattern\": \"^_\" }] */\n/* global importScripts Uint8Array */\n\nif ('undefined' === typeof window) {\n\tself.L = {};\n\n\timportScripts('CanvasTileUtils.js');\n\taddEventListener('message', onMessage);\n\n\tconsole.info('CanvasTileWorker initialised');\n\n\tfunction onMessage(e) {\n\t\tswitch (e.data.message) {\n\t\t\tcase 'endTransaction':\n\t\t\t\tvar tileByteSize = e.data.tileSize * e.data.tileSize * 4;\n\t\t\t\tvar decompressed = [];\n\t\t\t\tvar buffers = [];\n\t\t\t\tfor (var tile of e.data.deltas) {\n\t\t\t\t\tvar deltas = self.fzstd.decompress(tile.rawDelta);\n\t\t\t\t\ttile.keyframeDeltaSize = 0;\n\n\t\t\t\t\t// Decompress the keyframe buffer\n\t\t\t\t\tif (tile.isKeyframe) {\n\t\t\t\t\t\tvar keyframeBuffer = new Uint8Array(tileByteSize);\n\t\t\t\t\t\ttile.keyframeDeltaSize = L.CanvasTileUtils.unrle(\n\t\t\t\t\t\t\tdeltas,\n\t\t\t\t\t\t\te.data.tileSize,\n\t\t\t\t\t\t\te.data.tileSize,\n\t\t\t\t\t\t\tkeyframeBuffer,\n\t\t\t\t\t\t);\n\t\t\t\t\t\ttile.keyframeBuffer = new Uint8ClampedArray(\n\t\t\t\t\t\t\tkeyframeBuffer.buffer,\n\t\t\t\t\t\t\tkeyframeBuffer.byteOffset,\n\t\t\t\t\t\t\tkeyframeBuffer.byteLength,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbuffers.push(tile.keyframeBuffer.buffer);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now wrap as Uint8ClampedArray as that's what ImageData requires. Don't do\n\t\t\t\t\t// it earlier to avoid unnecessarily incurring bounds-checking penalties.\n\t\t\t\t\ttile.deltas = new Uint8ClampedArray(\n\t\t\t\t\t\tdeltas.buffer,\n\t\t\t\t\t\tdeltas.byteOffset,\n\t\t\t\t\t\tdeltas.length,\n\t\t\t\t\t);\n\n\t\t\t\t\t// The main thread has no use for the concatenated rawDelta, delete it here\n\t\t\t\t\t// instead of passing it back.\n\t\t\t\t\tdelete tile.rawDelta;\n\n\t\t\t\t\tdecompressed.push(tile);\n\t\t\t\t\tbuffers.push(tile.deltas.buffer);\n\t\t\t\t}\n\n\t\t\t\tpostMessage(\n\t\t\t\t\t{\n\t\t\t\t\t\tmessage: e.data.message,\n\t\t\t\t\t\tdeltas: decompressed,\n\t\t\t\t\t\ttileSize: e.data.tileSize,\n\t\t\t\t\t},\n\t\t\t\t\tbuffers,\n\t\t\t\t);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error('Unrecognised worker message');\n\t\t}\n\t}\n}\n"]}