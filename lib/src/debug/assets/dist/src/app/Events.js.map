{"version":3,"file":"Events.js","sourceRoot":"","sources":["../../../../../../../../../../TanhX/online/browser/src/app/Events.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-strict-ignore\n/* -*- js-indent-level: 8 -*- */\n/*\n * Copyright the Collabora Online contributors.\n *\n * SPDX-License-Identifier: MPL-2.0\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n/*\n * Evented is a base class that Map/Layer classes inherit from to\n * handle custom events.\n */\n\ninterface EventBaseType {\n\ttype: string;\n\ttarget: any;\n\t[name: string]: any;\n}\n\ntype CEventListener = (e: EventBaseType) => void;\n\ninterface EventMapObject {\n\t[name: string]: CEventListener;\n}\n\ninterface CallbackWithContext {\n\tfn: CEventListener;\n\tctx: any;\n}\n\ninterface CallbackWithoutContext {\n\tfn: CEventListener;\n}\n\nclass Evented extends BaseClass {\n\t// Stores the handlers which have'current' Evented object as context.\n\tprivate _eventsAuto: Map<string, Array<CallbackWithoutContext>>;\n\n\t// Stores the handlers that have 'foreign' objects as contexts.\n\tprivate _eventsExt: Map<string, Map<string, CallbackWithContext>>;\n\t// Cache the handler count for each event-name.\n\tprivate _numEvents: Map<string, number>;\n\n\t// Parents of this Evented object.\n\tprivate _eventParents: Map<number, Evented>;\n\n\t// This points to the outer L.Evented object.\n\t// This is needed till we completely get rid of L.Evented.\n\tprivate _outerObject: any;\n\n\tconstructor(outerObject?: any) {\n\t\tsuper();\n\t\tthis._eventsAuto = new Map();\n\t\tthis._eventsExt = new Map();\n\t\tthis._numEvents = new Map();\n\t\tthis._eventParents = new Map();\n\t\tthis._outerObject = outerObject ? outerObject : this;\n\t}\n\n\tpublic on(\n\t\ttypes: Map<string, CEventListener> | string | EventMapObject,\n\t\tfn: CEventListener | any,\n\t\tcontext?: any,\n\t): Evented {\n\t\tif (typeof types === 'string') {\n\t\t\t// types can be a list of event names strings delimited by spaces.\n\t\t\tconst parts: string[] = Util.splitWords(types);\n\n\t\t\tfor (var i = 0, len = parts.length; i < len; i++) {\n\t\t\t\tthis._addEventHandlerImpl(parts[i], fn, context);\n\t\t\t}\n\t\t}\n\t\t// types can be a map of types/handlers\n\t\telse if (types instanceof Map) {\n\t\t\tfor (const [type, listener] of types) {\n\t\t\t\tthis._addEventHandlerImpl(type, listener, fn);\n\t\t\t}\n\t\t}\n\t\t// types can also be a generic object with type-name as properties and\n\t\t// handlers as their values.\n\t\telse {\n\t\t\tconst typeNames = Object.keys(types);\n\t\t\tfor (let i = 0, len = typeNames.length; i < len; ++i) {\n\t\t\t\tconst typeName = typeNames[i];\n\t\t\t\tconst listener = types[typeName];\n\t\t\t\tthis._addEventHandlerImpl(typeName, listener, fn);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic off(\n\t\ttypes?: Map<string, CEventListener> | string | EventMapObject,\n\t\tfn?: CEventListener | any,\n\t\tcontext?: any,\n\t): Evented {\n\t\tif (!types) {\n\t\t\t// clear all handler maps if called without arguments.\n\t\t\tthis._eventsExt.clear();\n\t\t\tthis._eventsAuto.clear();\n\t\t\tthis._numEvents.clear();\n\t\t} else if (typeof types === 'string') {\n\t\t\tconst parts: string[] = Util.splitWords(types);\n\n\t\t\tfor (var i = 0, len = parts.length; i < len; i++) {\n\t\t\t\tthis._removeEventHandlerImpl(parts[i], fn, context);\n\t\t\t}\n\t\t} else if (types instanceof Map) {\n\t\t\tfor (const [type, listener] of types) {\n\t\t\t\tthis._removeEventHandlerImpl(type, listener, fn);\n\t\t\t}\n\t\t} else {\n\t\t\tconst typeNames = Object.keys(types);\n\t\t\tfor (let i = 0, len = typeNames.length; i < len; ++i) {\n\t\t\t\tconst typeName = typeNames[i];\n\t\t\t\tconst listener = types[typeName];\n\t\t\t\tthis._removeEventHandlerImpl(typeName, listener, fn);\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tprivate _addHandlerForeignCtxt(\n\t\tforeignCtxtId: number,\n\t\ttype: string,\n\t\tfn: CEventListener,\n\t\tcontext: any,\n\t): void {\n\t\t// Store handlers with 'foreign' contexts and their count in separate maps.\n\t\tif (!this._eventsExt.has(type)) {\n\t\t\tthis._eventsExt.set(type, new Map());\n\t\t}\n\t\tconst typeIndex = this._eventsExt.get(type);\n\t\tconst id: string =\n\t\t\tUtil.stamp(fn as unknown as IDAble) + '_' + foreignCtxtId;\n\n\t\tif (!typeIndex.has(id)) {\n\t\t\ttypeIndex.set(id, { fn: fn, ctx: context });\n\n\t\t\t// keep track of the number of keys in the index to quickly check if it's empty\n\t\t\tconst count = this._numEvents.has(type) ? this._numEvents.get(type) : 0;\n\n\t\t\tthis._numEvents.set(type, count + 1);\n\t\t}\n\t}\n\n\tprivate _addEventHandlerImpl(\n\t\ttype: string,\n\t\tfn: CEventListener,\n\t\tcontext: any,\n\t): void {\n\t\tlet foreignCtxtId = 0;\n\t\t// After killing L.Evented, the following check should change to\n\t\t// context !== this.\n\t\tif (context && context !== this._outerObject) {\n\t\t\tforeignCtxtId = Util.stamp(context);\n\t\t}\n\n\t\tif (foreignCtxtId) {\n\t\t\tthis._addHandlerForeignCtxt(foreignCtxtId, type, fn, context);\n\t\t} else {\n\t\t\t// Context is the current Evented object itself.\n\t\t\t// Append just the handler to 'auto' map (context is implicitly known).\n\n\t\t\t// eslint-disable-next-line no-lonely-if\n\t\t\tif (!this._eventsAuto.has(type)) {\n\t\t\t\tthis._eventsAuto.set(type, [{ fn: fn }]);\n\t\t\t} else {\n\t\t\t\tthis._eventsAuto.get(type).push({ fn: fn });\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _removeHandlerForeignCtxt(\n\t\tforeignCtxtId: number,\n\t\ttype: string,\n\t\tfn: CEventListener,\n\t): CallbackWithContext {\n\t\tlet listener: CallbackWithContext = null;\n\t\tconst id: string =\n\t\t\tUtil.stamp(fn as unknown as IDAble) + '_' + foreignCtxtId;\n\t\tconst listeners = this._eventsExt.get(type);\n\n\t\tif (listeners && listeners.get(id)) {\n\t\t\tlistener = listeners.get(id);\n\t\t\tlisteners.delete(id);\n\t\t\tthis._numEvents.set(type, this._numEvents.get(type) - 1);\n\t\t}\n\n\t\treturn listener;\n\t}\n\n\tprivate _removeHandlerSelfCtxt(\n\t\ttype: string,\n\t\tfn: CEventListener,\n\t): CallbackWithoutContext {\n\t\tlet listener: CallbackWithoutContext = null;\n\t\tconst listeners = this._eventsAuto.get(type);\n\n\t\tif (listeners) {\n\t\t\tconst len = listeners.length;\n\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\tif (listeners[i].fn === fn) {\n\t\t\t\t\tlistener = listeners[i];\n\t\t\t\t\tlisteners.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn listener;\n\t}\n\n\tprivate _removeEventHandlerImpl(\n\t\ttype: string,\n\t\tfn: CEventListener,\n\t\tcontext: any,\n\t): void {\n\t\tif (!this._eventsExt.size && !this._eventsAuto.size) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\t// clear all handler maps for the type if handler isn't specified.\n\t\t\tthis._eventsExt.delete(type);\n\t\t\tthis._numEvents.delete(type);\n\t\t\tthis._eventsAuto.delete(type);\n\t\t\treturn;\n\t\t}\n\n\t\tlet foreignCtxtId = 0;\n\t\t// After killing L.Evented, the following check should change to\n\t\t// context !== this.\n\t\tif (context && context !== this._outerObject) {\n\t\t\tforeignCtxtId = Util.stamp(context);\n\t\t}\n\n\t\tlet listener: CallbackWithContext | CallbackWithoutContext;\n\t\tif (foreignCtxtId) {\n\t\t\tlistener = this._removeHandlerForeignCtxt(foreignCtxtId, type, fn);\n\t\t} else {\n\t\t\tlistener = this._removeHandlerSelfCtxt(type, fn);\n\t\t}\n\n\t\t// ensure the removed handler is not called if remove happens in fire\n\t\tif (listener) {\n\t\t\tlistener.fn = Util.falseFn;\n\t\t}\n\t}\n\n\tpublic fire(type: string, data?: any, propagate?: boolean): Evented {\n\t\tif (!this.listens(type, propagate)) {\n\t\t\treturn this;\n\t\t}\n\n\t\tconst event = { ...data, type: type, target: this._outerObject };\n\n\t\tif (this._eventsExt.size || this._eventsAuto.size) {\n\t\t\tconst typeIndex = this._eventsExt.get(type);\n\t\t\tconst simpleListeners = this._eventsAuto.get(type);\n\n\t\t\tif (simpleListeners) {\n\t\t\t\t// Don't cause an infinite loop due to nested .on()/.off() calls.\n\t\t\t\t// Make a copy of the array to ensure this.\n\t\t\t\tconst listeners = simpleListeners.slice();\n\n\t\t\t\tfor (let i = 0, len = listeners.length; i < len; i++) {\n\t\t\t\t\tlisteners[i].fn.call(this._outerObject, event);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeIndex) {\n\t\t\t\t// fire event using foreign context handlers as well.\n\t\t\t\tfor (const [_, value] of typeIndex) {\n\t\t\t\t\tvalue.fn.call(value.ctx, event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (propagate) {\n\t\t\t// Call fire() on this instance's parents.\n\t\t\tthis._propagateEvent(event);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic addEventParent(obj: Evented): Evented {\n\t\tthis._eventParents.set(Util.stamp(obj), obj);\n\t\treturn this;\n\t}\n\n\tpublic removeEventParent(obj: Evented): Evented {\n\t\tif (this._eventParents.size) {\n\t\t\tthis._eventParents.delete(Util.stamp(obj));\n\t\t}\n\t\treturn this;\n\t}\n\n\tprivate hasContextListeners(type: string): boolean {\n\t\tif (!this._eventsExt.size) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst mp = this._eventsExt.get(type);\n\t\tif (!mp || !mp.size) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate hasNoContextListener(type: string): boolean {\n\t\tif (!this._eventsAuto.size) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst arr = this._eventsAuto.get(type);\n\t\tif (!arr || !arr.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic listens(type: string, propagate?: boolean): boolean {\n\t\tif (this.hasContextListeners(type) || this.hasNoContextListener(type)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (propagate) {\n\t\t\t// also see if parents are listening in this case.\n\t\t\tfor (const [_, parent] of this._eventParents) {\n\t\t\t\tif (parent.listens(type, propagate)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic once(\n\t\ttypes: Map<string, CEventListener> | string | EventMapObject,\n\t\tfn: CEventListener | any,\n\t\tcontext?: any,\n\t): Evented {\n\t\tif (typeof types == 'string') {\n\t\t\tvar handler = function () {\n\t\t\t\tthis.off(types, fn, context).off(types, handler, context);\n\t\t\t}.bind(this);\n\n\t\t\t// add a handler which is executed once and removed soon after.\n\t\t\treturn this.on(types, fn, context).on(types, handler, context);\n\t\t} else if (types instanceof Map) {\n\t\t\tfor (const [type, listener] of types) {\n\t\t\t\tthis.once(type, listener, fn);\n\t\t\t}\n\t\t\treturn this;\n\t\t} else {\n\t\t\tconst typeNames = Object.keys(types);\n\t\t\tfor (let i = 0, len = typeNames.length; i < len; ++i) {\n\t\t\t\tconst typeName = typeNames[i];\n\t\t\t\tconst listener = types[typeName];\n\t\t\t\tthis.once(typeName, listener, fn);\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t}\n\n\tprivate _propagateEvent(e: EventBaseType): void {\n\t\tfor (const [_, parent] of this._eventParents) {\n\t\t\tparent.fire(e.type, { layer: e.target, ...e }, true);\n\t\t}\n\t}\n}\n\napp.Evented = Evented;\n"]}